/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/home/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FBox%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FSwitch%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FTypography%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fsrc%2Fcomponents%2FEditor%2FEditor.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FBox%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FSwitch%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FTypography%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fsrc%2Fcomponents%2FEditor%2FEditor.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@mui/material/Box/index.js */ \"(app-pages-browser)/./node_modules/@mui/material/Box/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@mui/material/Switch/index.js */ \"(app-pages-browser)/./node_modules/@mui/material/Switch/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@mui/material/Typography/index.js */ \"(app-pages-browser)/./node_modules/@mui/material/Typography/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Editor/Editor.tsx */ \"(app-pages-browser)/./src/components/Editor/Editor.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZrYXd6YWlwaG9waHUlMkZEZXNrdG9wJTJGS25hY3glMkZjb21wYW55LXdlYnNpdGUtYWRtaW4lMkZub2RlX21vZHVsZXMlMkYlNDBtdWklMkZtYXRlcmlhbCUyRkJveCUyRmluZGV4LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyKiUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmthd3phaXBob3BodSUyRkRlc2t0b3AlMkZLbmFjeCUyRmNvbXBhbnktd2Vic2l0ZS1hZG1pbiUyRm5vZGVfbW9kdWxlcyUyRiU0MG11aSUyRm1hdGVyaWFsJTJGU3dpdGNoJTJGaW5kZXguanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjIqJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2F3emFpcGhvcGh1JTJGRGVza3RvcCUyRktuYWN4JTJGY29tcGFueS13ZWJzaXRlLWFkbWluJTJGbm9kZV9tb2R1bGVzJTJGJTQwbXVpJTJGbWF0ZXJpYWwlMkZUeXBvZ3JhcGh5JTJGaW5kZXguanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjIqJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2F3emFpcGhvcGh1JTJGRGVza3RvcCUyRktuYWN4JTJGY29tcGFueS13ZWJzaXRlLWFkbWluJTJGc3JjJTJGY29tcG9uZW50cyUyRkVkaXRvciUyRkVkaXRvci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsNE1BQW9JO0FBQ3BJO0FBQ0Esa05BQXVJO0FBQ3ZJO0FBQ0EsME5BQTJJO0FBQzNJO0FBQ0EsOExBQTBKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/OGM2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9rYXd6YWlwaG9waHUvRGVza3RvcC9LbmFjeC9jb21wYW55LXdlYnNpdGUtYWRtaW4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvQm94L2luZGV4LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2F3emFpcGhvcGh1L0Rlc2t0b3AvS25hY3gvY29tcGFueS13ZWJzaXRlLWFkbWluL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1N3aXRjaC9pbmRleC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2thd3phaXBob3BodS9EZXNrdG9wL0tuYWN4L2NvbXBhbnktd2Vic2l0ZS1hZG1pbi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UeXBvZ3JhcGh5L2luZGV4LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJkZWZhdWx0XCJdICovIFwiL1VzZXJzL2thd3phaXBob3BodS9EZXNrdG9wL0tuYWN4L2NvbXBhbnktd2Vic2l0ZS1hZG1pbi9zcmMvY29tcG9uZW50cy9FZGl0b3IvRWRpdG9yLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FBox%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FSwitch%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fnode_modules%2F%40mui%2Fmaterial%2FTypography%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkawzaiphophu%2FDesktop%2FKnacx%2Fcompany-website-admin%2Fsrc%2Fcomponents%2FEditor%2FEditor.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mui/material/styles/useTheme.js":
/*!*******************************************************!*\
  !*** ./node_modules/@mui/material/styles/useTheme.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/system */ \"(app-pages-browser)/./node_modules/@mui/system/esm/useTheme.js\");\n/* harmony import */ var _defaultTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultTheme */ \"(app-pages-browser)/./node_modules/@mui/material/styles/defaultTheme.js\");\n/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identifier */ \"(app-pages-browser)/./node_modules/@mui/material/styles/identifier.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\n\n\nfunction useTheme() {\n    _s();\n    const theme = (0,_mui_system__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_defaultTheme__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    if (true) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue(theme);\n    }\n    return theme[_identifier__WEBPACK_IMPORTED_MODULE_3__[\"default\"]] || theme;\n}\n_s(useTheme, \"A84VaFejcKA1iOami6LYs2oNoRM=\", false, function() {\n    return [\n        _mui_system__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy91c2VUaGVtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRStCO0FBQzBCO0FBQ2Y7QUFDTjtBQUNyQixTQUFTQzs7SUFDdEIsTUFBTUksUUFBUUgsdURBQWNBLENBQUNDLHFEQUFZQTtJQUN6QyxJQUFJRyxJQUFxQyxFQUFFO1FBQ3pDLHNEQUFzRDtRQUN0RE4sZ0RBQW1CLENBQUNLO0lBQ3RCO0lBQ0EsT0FBT0EsS0FBSyxDQUFDRCxtREFBUUEsQ0FBQyxJQUFJQztBQUM1QjtHQVB3Qko7O1FBQ1JDLG1EQUFjQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvdXNlVGhlbWUuanM/NjZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRoZW1lIGFzIHVzZVRoZW1lU3lzdGVtIH0gZnJvbSAnQG11aS9zeXN0ZW0nO1xuaW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tICcuL2RlZmF1bHRUaGVtZSc7XG5pbXBvcnQgVEhFTUVfSUQgZnJvbSAnLi9pZGVudGlmaWVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lU3lzdGVtKGRlZmF1bHRUaGVtZSk7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgUmVhY3QudXNlRGVidWdWYWx1ZSh0aGVtZSk7XG4gIH1cbiAgcmV0dXJuIHRoZW1lW1RIRU1FX0lEXSB8fCB0aGVtZTtcbn0iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VUaGVtZSIsInVzZVRoZW1lU3lzdGVtIiwiZGVmYXVsdFRoZW1lIiwiVEhFTUVfSUQiLCJ0aGVtZSIsInByb2Nlc3MiLCJ1c2VEZWJ1Z1ZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mui/material/styles/useTheme.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0RhdGFWaWV3LmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLFdBQVcsbUJBQU8sQ0FBQyxtRUFBUzs7QUFFNUI7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19EYXRhVmlldy5qcz8zYmYzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgRGF0YVZpZXcgPSBnZXROYXRpdmUocm9vdCwgJ0RhdGFWaWV3Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YVZpZXc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_DataView.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var hashClear = __webpack_require__(/*! ./_hashClear */ \"(app-pages-browser)/./node_modules/lodash/_hashClear.js\"),\n    hashDelete = __webpack_require__(/*! ./_hashDelete */ \"(app-pages-browser)/./node_modules/lodash/_hashDelete.js\"),\n    hashGet = __webpack_require__(/*! ./_hashGet */ \"(app-pages-browser)/./node_modules/lodash/_hashGet.js\"),\n    hashHas = __webpack_require__(/*! ./_hashHas */ \"(app-pages-browser)/./node_modules/lodash/_hashHas.js\"),\n    hashSet = __webpack_require__(/*! ./_hashSet */ \"(app-pages-browser)/./node_modules/lodash/_hashSet.js\");\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0hhc2guanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWU7QUFDeEMsY0FBYyxtQkFBTyxDQUFDLHlFQUFZO0FBQ2xDLGNBQWMsbUJBQU8sQ0FBQyx5RUFBWTtBQUNsQyxjQUFjLG1CQUFPLENBQUMseUVBQVk7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzP2JlNTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhc2hDbGVhciA9IHJlcXVpcmUoJy4vX2hhc2hDbGVhcicpLFxuICAgIGhhc2hEZWxldGUgPSByZXF1aXJlKCcuL19oYXNoRGVsZXRlJyksXG4gICAgaGFzaEdldCA9IHJlcXVpcmUoJy4vX2hhc2hHZXQnKSxcbiAgICBoYXNoSGFzID0gcmVxdWlyZSgnLi9faGFzaEhhcycpLFxuICAgIGhhc2hTZXQgPSByZXF1aXJlKCcuL19oYXNoU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhhc2ggb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhhc2g7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Hash.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ \"(app-pages-browser)/./node_modules/lodash/_listCacheClear.js\"),\n    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ \"(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js\"),\n    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ \"(app-pages-browser)/./node_modules/lodash/_listCacheGet.js\"),\n    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_listCacheHas.js\"),\n    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ \"(app-pages-browser)/./node_modules/lodash/_listCacheSet.js\");\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0xpc3RDYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBbUI7QUFDaEQsc0JBQXNCLG1CQUFPLENBQUMseUZBQW9CO0FBQ2xELG1CQUFtQixtQkFBTyxDQUFDLG1GQUFpQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDNUMsbUJBQW1CLG1CQUFPLENBQUMsbUZBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fTGlzdENhY2hlLmpzP2I2NGIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGxpc3RDYWNoZUNsZWFyID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlQ2xlYXInKSxcbiAgICBsaXN0Q2FjaGVEZWxldGUgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVEZWxldGUnKSxcbiAgICBsaXN0Q2FjaGVHZXQgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVHZXQnKSxcbiAgICBsaXN0Q2FjaGVIYXMgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVIYXMnKSxcbiAgICBsaXN0Q2FjaGVTZXQgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGxpc3QgY2FjaGUgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBMaXN0Q2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTGlzdENhY2hlYC5cbkxpc3RDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBsaXN0Q2FjaGVDbGVhcjtcbkxpc3RDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbGlzdENhY2hlRGVsZXRlO1xuTGlzdENhY2hlLnByb3RvdHlwZS5nZXQgPSBsaXN0Q2FjaGVHZXQ7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmhhcyA9IGxpc3RDYWNoZUhhcztcbkxpc3RDYWNoZS5wcm90b3R5cGUuc2V0ID0gbGlzdENhY2hlU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExpc3RDYWNoZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_ListCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxXQUFXLG1CQUFPLENBQUMsbUVBQVM7O0FBRTVCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fTWFwLmpzP2E2NTEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Map.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js\"),\n    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js\"),\n    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js\"),\n    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js\"),\n    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js\");\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLHFGQUFrQjtBQUM5QyxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBbUI7QUFDaEQsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCO0FBQzFDLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFnQjtBQUMxQyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXBDYWNoZS5qcz81YjJiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBtYXBDYWNoZUNsZWFyID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVDbGVhcicpLFxuICAgIG1hcENhY2hlRGVsZXRlID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVEZWxldGUnKSxcbiAgICBtYXBDYWNoZUdldCA9IHJlcXVpcmUoJy4vX21hcENhY2hlR2V0JyksXG4gICAgbWFwQ2FjaGVIYXMgPSByZXF1aXJlKCcuL19tYXBDYWNoZUhhcycpLFxuICAgIG1hcENhY2hlU2V0ID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIE1hcENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYE1hcENhY2hlYC5cbk1hcENhY2hlLnByb3RvdHlwZS5jbGVhciA9IG1hcENhY2hlQ2xlYXI7XG5NYXBDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbWFwQ2FjaGVEZWxldGU7XG5NYXBDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbWFwQ2FjaGVHZXQ7XG5NYXBDYWNoZS5wcm90b3R5cGUuaGFzID0gbWFwQ2FjaGVIYXM7XG5NYXBDYWNoZS5wcm90b3R5cGUuc2V0ID0gbWFwQ2FjaGVTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwQ2FjaGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_MapCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMsV0FBVyxtQkFBTyxDQUFDLG1FQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanM/YTg5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFByb21pc2UgPSBnZXROYXRpdmUocm9vdCwgJ1Byb21pc2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Promise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxXQUFXLG1CQUFPLENBQUMsbUVBQVM7O0FBRTVCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0LmpzP2YxMmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBTZXQgPSBnZXROYXRpdmUocm9vdCwgJ1NldCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Set.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var MapCache = __webpack_require__(/*! ./_MapCache */ \"(app-pages-browser)/./node_modules/lodash/_MapCache.js\"),\n    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ \"(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js\"),\n    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_setCacheHas.js\");\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldENhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQywyRUFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7QUFDMUMsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0Q2FjaGUuanM/NDdkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpLFxuICAgIHNldENhY2hlQWRkID0gcmVxdWlyZSgnLi9fc2V0Q2FjaGVBZGQnKSxcbiAgICBzZXRDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX3NldENhY2hlSGFzJyk7XG5cbi8qKlxuICpcbiAqIENyZWF0ZXMgYW4gYXJyYXkgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIHVuaXF1ZSB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU2V0Q2FjaGUodmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzID09IG51bGwgPyAwIDogdmFsdWVzLmxlbmd0aDtcblxuICB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHRoaXMuYWRkKHZhbHVlc1tpbmRleF0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTZXRDYWNoZWAuXG5TZXRDYWNoZS5wcm90b3R5cGUuYWRkID0gU2V0Q2FjaGUucHJvdG90eXBlLnB1c2ggPSBzZXRDYWNoZUFkZDtcblNldENhY2hlLnByb3RvdHlwZS5oYXMgPSBzZXRDYWNoZUhhcztcblxubW9kdWxlLmV4cG9ydHMgPSBTZXRDYWNoZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_SetCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"),\n    stackClear = __webpack_require__(/*! ./_stackClear */ \"(app-pages-browser)/./node_modules/lodash/_stackClear.js\"),\n    stackDelete = __webpack_require__(/*! ./_stackDelete */ \"(app-pages-browser)/./node_modules/lodash/_stackDelete.js\"),\n    stackGet = __webpack_require__(/*! ./_stackGet */ \"(app-pages-browser)/./node_modules/lodash/_stackGet.js\"),\n    stackHas = __webpack_require__(/*! ./_stackHas */ \"(app-pages-browser)/./node_modules/lodash/_stackHas.js\"),\n    stackSet = __webpack_require__(/*! ./_stackSet */ \"(app-pages-browser)/./node_modules/lodash/_stackSet.js\");\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFnQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsMkVBQWE7QUFDcEMsZUFBZSxtQkFBTyxDQUFDLDJFQUFhO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQywyRUFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TdGFjay5qcz8zZjRhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKSxcbiAgICBzdGFja0NsZWFyID0gcmVxdWlyZSgnLi9fc3RhY2tDbGVhcicpLFxuICAgIHN0YWNrRGVsZXRlID0gcmVxdWlyZSgnLi9fc3RhY2tEZWxldGUnKSxcbiAgICBzdGFja0dldCA9IHJlcXVpcmUoJy4vX3N0YWNrR2V0JyksXG4gICAgc3RhY2tIYXMgPSByZXF1aXJlKCcuL19zdGFja0hhcycpLFxuICAgIHN0YWNrU2V0ID0gcmVxdWlyZSgnLi9fc3RhY2tTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RhY2sgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU3RhY2soZW50cmllcykge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKGVudHJpZXMpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTdGFja2AuXG5TdGFjay5wcm90b3R5cGUuY2xlYXIgPSBzdGFja0NsZWFyO1xuU3RhY2sucHJvdG90eXBlWydkZWxldGUnXSA9IHN0YWNrRGVsZXRlO1xuU3RhY2sucHJvdG90eXBlLmdldCA9IHN0YWNrR2V0O1xuU3RhY2sucHJvdG90eXBlLmhhcyA9IHN0YWNrSGFzO1xuU3RhY2sucHJvdG90eXBlLnNldCA9IHN0YWNrU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0YWNrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Stack.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N5bWJvbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsbUVBQVM7O0FBRTVCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU3ltYm9sLmpzP2EwMmQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIFN5bWJvbCA9IHJvb3QuU3ltYm9sO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN5bWJvbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Symbol.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1VpbnQ4QXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLG1FQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1VpbnQ4QXJyYXkuanM/OTIxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgVWludDhBcnJheSA9IHJvb3QuVWludDhBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBVaW50OEFycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Uint8Array.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1dlYWtNYXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMsV0FBVyxtQkFBTyxDQUFDLG1FQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1dlYWtNYXAuanM/ZmFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFdlYWtNYXAgPSBnZXROYXRpdmUocm9vdCwgJ1dlYWtNYXAnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWFrTWFwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_WeakMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RmlsdGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUZpbHRlci5qcz9kMzJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLmZpbHRlcmAgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yXG4gKiBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZpbHRlcmVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheUZpbHRlcihhcnJheSwgcHJlZGljYXRlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGgsXG4gICAgICByZXNJbmRleCA9IDAsXG4gICAgICByZXN1bHQgPSBbXTtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcbiAgICBpZiAocHJlZGljYXRlKHZhbHVlLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXN1bHRbcmVzSW5kZXgrK10gPSB2YWx1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhcnJheUZpbHRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayFilter.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseTimes = __webpack_require__(/*! ./_baseTimes */ \"(app-pages-browser)/./node_modules/lodash/_baseTimes.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"(app-pages-browser)/./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"(app-pages-browser)/./node_modules/lodash/isBuffer.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"(app-pages-browser)/./node_modules/lodash/_isIndex.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"(app-pages-browser)/./node_modules/lodash/isTypedArray.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMsa0JBQWtCLG1CQUFPLENBQUMsK0VBQWU7QUFDekMsY0FBYyxtQkFBTyxDQUFDLHVFQUFXO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQyx5RUFBWTtBQUNuQyxjQUFjLG1CQUFPLENBQUMseUVBQVk7QUFDbEMsbUJBQW1CLG1CQUFPLENBQUMsaUZBQWdCOztBQUUzQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFNBQVM7QUFDcEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanM/NzlhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZVRpbWVzID0gcmVxdWlyZSgnLi9fYmFzZVRpbWVzJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9pc1R5cGVkQXJyYXknKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5TGlrZUtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5UHVzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVB1c2guanM/YWE3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwcGVuZHMgdGhlIGVsZW1lbnRzIG9mIGB2YWx1ZXNgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhcHBlbmQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgb2Zmc2V0ID0gYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgYXJyYXlbb2Zmc2V0ICsgaW5kZXhdID0gdmFsdWVzW2luZGV4XTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlQdXNoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayPush.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5U29tZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVNvbWUuanM/YzM0YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5zb21lYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWVcbiAqIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFueSBlbGVtZW50IHBhc3NlcyB0aGUgcHJlZGljYXRlIGNoZWNrLFxuICogIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlTb21lKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGlmIChwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5U29tZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arraySome.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var eq = __webpack_require__(/*! ./eq */ \"(app-pages-browser)/./node_modules/lodash/eq.js\");\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1CQUFPLENBQUMsNkRBQU07O0FBRXZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hc3NvY0luZGV4T2YuanM/MWVmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXEgPSByZXF1aXJlKCcuL2VxJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGBrZXlgIGlzIGZvdW5kIGluIGBhcnJheWAgb2Yga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7Kn0ga2V5IFRoZSBrZXkgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuXG4gKi9cbmZ1bmN0aW9uIGFzc29jSW5kZXhPZihhcnJheSwga2V5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIGlmIChlcShhcnJheVtsZW5ndGhdWzBdLCBrZXkpKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXNzb2NJbmRleE9mO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var arrayPush = __webpack_require__(/*! ./_arrayPush */ \"(app-pages-browser)/./node_modules/lodash/_arrayPush.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\");\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRBbGxLZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLGNBQWMsbUJBQU8sQ0FBQyx1RUFBVzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldEFsbEtleXMuanM/NzJhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlQdXNoID0gcmVxdWlyZSgnLi9fYXJyYXlQdXNoJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRBbGxLZXlzYCBhbmQgYGdldEFsbEtleXNJbmAgd2hpY2ggdXNlc1xuICogYGtleXNGdW5jYCBhbmQgYHN5bWJvbHNGdW5jYCB0byBnZXQgdGhlIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kXG4gKiBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc3ltYm9sc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5c0Z1bmMsIHN5bWJvbHNGdW5jKSB7XG4gIHZhciByZXN1bHQgPSBrZXlzRnVuYyhvYmplY3QpO1xuICByZXR1cm4gaXNBcnJheShvYmplY3QpID8gcmVzdWx0IDogYXJyYXlQdXNoKHJlc3VsdCwgc3ltYm9sc0Z1bmMob2JqZWN0KSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldEFsbEtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\"),\n    getRawTag = __webpack_require__(/*! ./_getRawTag */ \"(app-pages-browser)/./node_modules/lodash/_getRawTag.js\"),\n    objectToString = __webpack_require__(/*! ./_objectToString */ \"(app-pages-browser)/./node_modules/lodash/_objectToString.js\");\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRUYWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHVFQUFXO0FBQ2hDLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFtQjs7QUFFaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRUYWcuanM/YmRjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgZ2V0UmF3VGFnID0gcmVxdWlyZSgnLi9fZ2V0UmF3VGFnJyksXG4gICAgb2JqZWN0VG9TdHJpbmcgPSByZXF1aXJlKCcuL19vYmplY3RUb1N0cmluZycpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbnVsbFRhZyA9ICdbb2JqZWN0IE51bGxdJyxcbiAgICB1bmRlZmluZWRUYWcgPSAnW29iamVjdCBVbmRlZmluZWRdJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2Agd2l0aG91dCBmYWxsYmFja3MgZm9yIGJ1Z2d5IGVudmlyb25tZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0VGFnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWRUYWcgOiBudWxsVGFnO1xuICB9XG4gIHJldHVybiAoc3ltVG9TdHJpbmdUYWcgJiYgc3ltVG9TdHJpbmdUYWcgaW4gT2JqZWN0KHZhbHVlKSlcbiAgICA/IGdldFJhd1RhZyh2YWx1ZSlcbiAgICA6IG9iamVjdFRvU3RyaW5nKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlR2V0VGFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0FyZ3VtZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBZTtBQUN4QyxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzQXJndW1lbnRzLmpzPzU5NjgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0FyZ3VtZW50c2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICovXG5mdW5jdGlvbiBiYXNlSXNBcmd1bWVudHModmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gYXJnc1RhZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNBcmd1bWVudHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ \"(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsLmpzIiwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQixtQkFBTyxDQUFDLHlGQUFvQjtBQUNsRCxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLEdBQUc7QUFDZCxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsLmpzP2ZmOTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc0VxdWFsRGVlcCA9IHJlcXVpcmUoJy4vX2Jhc2VJc0VxdWFsRGVlcCcpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNFcXVhbGAgd2hpY2ggc3VwcG9ydHMgcGFydGlhbCBjb21wYXJpc29uc1xuICogYW5kIHRyYWNrcyB0cmF2ZXJzZWQgb2JqZWN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuXG4gKiAgMSAtIFVub3JkZXJlZCBjb21wYXJpc29uXG4gKiAgMiAtIFBhcnRpYWwgY29tcGFyaXNvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGB2YWx1ZWAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0VxdWFsKHZhbHVlLCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spIHtcbiAgaWYgKHZhbHVlID09PSBvdGhlcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh2YWx1ZSA9PSBudWxsIHx8IG90aGVyID09IG51bGwgfHwgKCFpc09iamVjdExpa2UodmFsdWUpICYmICFpc09iamVjdExpa2Uob3RoZXIpKSkge1xuICAgIHJldHVybiB2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyO1xuICB9XG4gIHJldHVybiBiYXNlSXNFcXVhbERlZXAodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBiYXNlSXNFcXVhbCwgc3RhY2spO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc0VxdWFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var Stack = __webpack_require__(/*! ./_Stack */ \"(app-pages-browser)/./node_modules/lodash/_Stack.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"(app-pages-browser)/./node_modules/lodash/_equalArrays.js\"),\n    equalByTag = __webpack_require__(/*! ./_equalByTag */ \"(app-pages-browser)/./node_modules/lodash/_equalByTag.js\"),\n    equalObjects = __webpack_require__(/*! ./_equalObjects */ \"(app-pages-browser)/./node_modules/lodash/_equalObjects.js\"),\n    getTag = __webpack_require__(/*! ./_getTag */ \"(app-pages-browser)/./node_modules/lodash/_getTag.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"(app-pages-browser)/./node_modules/lodash/isBuffer.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"(app-pages-browser)/./node_modules/lodash/isTypedArray.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsRGVlcC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMscUVBQVU7QUFDOUIsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCO0FBQzFDLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlO0FBQ3hDLG1CQUFtQixtQkFBTyxDQUFDLG1GQUFpQjtBQUM1QyxhQUFhLG1CQUFPLENBQUMsdUVBQVc7QUFDaEMsY0FBYyxtQkFBTyxDQUFDLHVFQUFXO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQyx5RUFBWTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsRGVlcC5qcz9mZTI0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdGFjayA9IHJlcXVpcmUoJy4vX1N0YWNrJyksXG4gICAgZXF1YWxBcnJheXMgPSByZXF1aXJlKCcuL19lcXVhbEFycmF5cycpLFxuICAgIGVxdWFsQnlUYWcgPSByZXF1aXJlKCcuL19lcXVhbEJ5VGFnJyksXG4gICAgZXF1YWxPYmplY3RzID0gcmVxdWlyZSgnLi9fZXF1YWxPYmplY3RzJyksXG4gICAgZ2V0VGFnID0gcmVxdWlyZSgnLi9fZ2V0VGFnJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzVHlwZWRBcnJheSA9IHJlcXVpcmUoJy4vaXNUeXBlZEFycmF5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbGAgZm9yIGFycmF5cyBhbmQgb2JqZWN0cyB3aGljaCBwZXJmb3Jtc1xuICogZGVlcCBjb21wYXJpc29ucyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhclxuICogcmVmZXJlbmNlcyB0byBiZSBjb21wYXJlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzRXF1YWxEZWVwKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIG9iaklzQXJyID0gaXNBcnJheShvYmplY3QpLFxuICAgICAgb3RoSXNBcnIgPSBpc0FycmF5KG90aGVyKSxcbiAgICAgIG9ialRhZyA9IG9iaklzQXJyID8gYXJyYXlUYWcgOiBnZXRUYWcob2JqZWN0KSxcbiAgICAgIG90aFRhZyA9IG90aElzQXJyID8gYXJyYXlUYWcgOiBnZXRUYWcob3RoZXIpO1xuXG4gIG9ialRhZyA9IG9ialRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb2JqVGFnO1xuICBvdGhUYWcgPSBvdGhUYWcgPT0gYXJnc1RhZyA/IG9iamVjdFRhZyA6IG90aFRhZztcblxuICB2YXIgb2JqSXNPYmogPSBvYmpUYWcgPT0gb2JqZWN0VGFnLFxuICAgICAgb3RoSXNPYmogPSBvdGhUYWcgPT0gb2JqZWN0VGFnLFxuICAgICAgaXNTYW1lVGFnID0gb2JqVGFnID09IG90aFRhZztcblxuICBpZiAoaXNTYW1lVGFnICYmIGlzQnVmZmVyKG9iamVjdCkpIHtcbiAgICBpZiAoIWlzQnVmZmVyKG90aGVyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBvYmpJc0FyciA9IHRydWU7XG4gICAgb2JqSXNPYmogPSBmYWxzZTtcbiAgfVxuICBpZiAoaXNTYW1lVGFnICYmICFvYmpJc09iaikge1xuICAgIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gICAgcmV0dXJuIChvYmpJc0FyciB8fCBpc1R5cGVkQXJyYXkob2JqZWN0KSlcbiAgICAgID8gZXF1YWxBcnJheXMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaylcbiAgICAgIDogZXF1YWxCeVRhZyhvYmplY3QsIG90aGVyLCBvYmpUYWcsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICB9XG4gIGlmICghKGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRykpIHtcbiAgICB2YXIgb2JqSXNXcmFwcGVkID0gb2JqSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsICdfX3dyYXBwZWRfXycpLFxuICAgICAgICBvdGhJc1dyYXBwZWQgPSBvdGhJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG90aGVyLCAnX193cmFwcGVkX18nKTtcblxuICAgIGlmIChvYmpJc1dyYXBwZWQgfHwgb3RoSXNXcmFwcGVkKSB7XG4gICAgICB2YXIgb2JqVW53cmFwcGVkID0gb2JqSXNXcmFwcGVkID8gb2JqZWN0LnZhbHVlKCkgOiBvYmplY3QsXG4gICAgICAgICAgb3RoVW53cmFwcGVkID0gb3RoSXNXcmFwcGVkID8gb3RoZXIudmFsdWUoKSA6IG90aGVyO1xuXG4gICAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICAgICAgcmV0dXJuIGVxdWFsRnVuYyhvYmpVbndyYXBwZWQsIG90aFVud3JhcHBlZCwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spO1xuICAgIH1cbiAgfVxuICBpZiAoIWlzU2FtZVRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICByZXR1cm4gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc0VxdWFsRGVlcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var isFunction = __webpack_require__(/*! ./isFunction */ \"(app-pages-browser)/./node_modules/lodash/isFunction.js\"),\n    isMasked = __webpack_require__(/*! ./_isMasked */ \"(app-pages-browser)/./node_modules/lodash/_isMasked.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/./node_modules/lodash/isObject.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"(app-pages-browser)/./node_modules/lodash/_toSource.js\");\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyw2RUFBYztBQUN2QyxlQUFlLG1CQUFPLENBQUMsMkVBQWE7QUFDcEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFZO0FBQ25DLGVBQWUsbUJBQU8sQ0FBQywyRUFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7O0FBRXBDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYXRpdmUuanM/ZjAxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNGdW5jdGlvbiA9IHJlcXVpcmUoJy4vaXNGdW5jdGlvbicpLFxuICAgIGlzTWFza2VkID0gcmVxdWlyZSgnLi9faXNNYXNrZWQnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKSxcbiAgICB0b1NvdXJjZSA9IHJlcXVpcmUoJy4vX3RvU291cmNlJyk7XG5cbi8qKlxuICogVXNlZCB0byBtYXRjaCBgUmVnRXhwYFxuICogW3N5bnRheCBjaGFyYWN0ZXJzXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1wYXR0ZXJucykuXG4gKi9cbnZhciByZVJlZ0V4cENoYXIgPSAvW1xcXFxeJC4qKz8oKVtcXF17fXxdL2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBob3N0IGNvbnN0cnVjdG9ycyAoU2FmYXJpKS4gKi9cbnZhciByZUlzSG9zdEN0b3IgPSAvXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgZnVuY1Byb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlLFxuICAgIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGlmIGEgbWV0aG9kIGlzIG5hdGl2ZS4gKi9cbnZhciByZUlzTmF0aXZlID0gUmVnRXhwKCdeJyArXG4gIGZ1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwgJ1xcXFwkJicpXG4gIC5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLCAnJDEuKj8nKSArICckJ1xuKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hdGl2ZWAgd2l0aG91dCBiYWQgc2hpbSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24sXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwYXR0ZXJuID0gaXNGdW5jdGlvbih2YWx1ZSkgPyByZUlzTmF0aXZlIDogcmVJc0hvc3RDdG9yO1xuICByZXR1cm4gcGF0dGVybi50ZXN0KHRvU291cmNlKHZhbHVlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzTmF0aXZlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsNative.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"(app-pages-browser)/./node_modules/lodash/isLength.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc1R5cGVkQXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWU7QUFDeEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFZO0FBQ25DLG1CQUFtQixtQkFBTyxDQUFDLGlGQUFnQjs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc1R5cGVkQXJyYXkuanM/NGVjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc0xlbmd0aCA9IHJlcXVpcmUoJy4vaXNMZW5ndGgnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nLFxuICAgIGFycmF5VGFnID0gJ1tvYmplY3QgQXJyYXldJyxcbiAgICBib29sVGFnID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgIGRhdGVUYWcgPSAnW29iamVjdCBEYXRlXScsXG4gICAgZXJyb3JUYWcgPSAnW29iamVjdCBFcnJvcl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nLFxuICAgIGZsb2F0MzJUYWcgPSAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICBmbG9hdDY0VGFnID0gJ1tvYmplY3QgRmxvYXQ2NEFycmF5XScsXG4gICAgaW50OFRhZyA9ICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgIGludDE2VGFnID0gJ1tvYmplY3QgSW50MTZBcnJheV0nLFxuICAgIGludDMyVGFnID0gJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgIHVpbnQ4VGFnID0gJ1tvYmplY3QgVWludDhBcnJheV0nLFxuICAgIHVpbnQ4Q2xhbXBlZFRhZyA9ICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgdWludDE2VGFnID0gJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICB1aW50MzJUYWcgPSAnW29iamVjdCBVaW50MzJBcnJheV0nO1xuXG4vKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBvZiB0eXBlZCBhcnJheXMuICovXG52YXIgdHlwZWRBcnJheVRhZ3MgPSB7fTtcbnR5cGVkQXJyYXlUYWdzW2Zsb2F0MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbZmxvYXQ2NFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50OFRhZ10gPSB0eXBlZEFycmF5VGFnc1tpbnQxNlRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDhUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQzMlRhZ10gPSB0cnVlO1xudHlwZWRBcnJheVRhZ3NbYXJnc1RhZ10gPSB0eXBlZEFycmF5VGFnc1thcnJheVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbYXJyYXlCdWZmZXJUYWddID0gdHlwZWRBcnJheVRhZ3NbYm9vbFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZGF0YVZpZXdUYWddID0gdHlwZWRBcnJheVRhZ3NbZGF0ZVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZXJyb3JUYWddID0gdHlwZWRBcnJheVRhZ3NbZnVuY1RhZ10gPVxudHlwZWRBcnJheVRhZ3NbbWFwVGFnXSA9IHR5cGVkQXJyYXlUYWdzW251bWJlclRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbb2JqZWN0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3JlZ2V4cFRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbc2V0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3N0cmluZ1RhZ10gPVxudHlwZWRBcnJheVRhZ3Nbd2Vha01hcFRhZ10gPSBmYWxzZTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc1R5cGVkQXJyYXlgIHdpdGhvdXQgTm9kZS5qcyBvcHRpbWl6YXRpb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzVHlwZWRBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJlxuICAgIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgISF0eXBlZEFycmF5VGFnc1tiYXNlR2V0VGFnKHZhbHVlKV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzVHlwZWRBcnJheTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var isPrototype = __webpack_require__(/*! ./_isPrototype */ \"(app-pages-browser)/./node_modules/lodash/_isPrototype.js\"),\n    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ \"(app-pages-browser)/./node_modules/lodash/_nativeKeys.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFnQjtBQUMxQyxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBZTs7QUFFeEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlS2V5cy5qcz80OTFiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1Byb3RvdHlwZSA9IHJlcXVpcmUoJy4vX2lzUHJvdG90eXBlJyksXG4gICAgbmF0aXZlS2V5cyA9IHJlcXVpcmUoJy4vX25hdGl2ZUtleXMnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5rZXlzYCB3aGljaCBkb2Vzbid0IHRyZWF0IHNwYXJzZSBhcnJheXMgYXMgZGVuc2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VLZXlzKG9iamVjdCkge1xuICBpZiAoIWlzUHJvdG90eXBlKG9iamVjdCkpIHtcbiAgICByZXR1cm4gbmF0aXZlS2V5cyhvYmplY3QpO1xuICB9XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIE9iamVjdChvYmplY3QpKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmIGtleSAhPSAnY29uc3RydWN0b3InKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VLZXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVGltZXMuanM/YzNhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHNcbiAqIG9yIG1heCBhcnJheSBsZW5ndGggY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGludm9rZSBgaXRlcmF0ZWVgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRpbWVzKG4sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VUaW1lcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseTimes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VVbmFyeS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VVbmFyeS5qcz83YjM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udW5hcnlgIHdpdGhvdXQgc3VwcG9ydCBmb3Igc3RvcmluZyBtZXRhZGF0YS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2FwIGFyZ3VtZW50cyBmb3IuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjYXBwZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VVbmFyeShmdW5jKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBmdW5jKHZhbHVlKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVW5hcnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseUnary.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2FjaGVIYXMuanM/YTUyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIGBjYWNoZWAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGNhY2hlIFRoZSBjYWNoZSB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBjYWNoZUhhcyhjYWNoZSwga2V5KSB7XG4gIHJldHVybiBjYWNoZS5oYXMoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYWNoZUhhcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_cacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLG1FQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanM/NWM3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL1xudmFyIGNvcmVKc0RhdGEgPSByb290WydfX2NvcmUtanNfc2hhcmVkX18nXTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb3JlSnNEYXRhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_coreJsData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var SetCache = __webpack_require__(/*! ./_SetCache */ \"(app-pages-browser)/./node_modules/lodash/_SetCache.js\"),\n    arraySome = __webpack_require__(/*! ./_arraySome */ \"(app-pages-browser)/./node_modules/lodash/_arraySome.js\"),\n    cacheHas = __webpack_require__(/*! ./_cacheHas */ \"(app-pages-browser)/./node_modules/lodash/_cacheHas.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQXJyYXlzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQywyRUFBYTtBQUNwQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxlQUFlLG1CQUFPLENBQUMsMkVBQWE7O0FBRXBDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxBcnJheXMuanM/OWY2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU2V0Q2FjaGUgPSByZXF1aXJlKCcuL19TZXRDYWNoZScpLFxuICAgIGFycmF5U29tZSA9IHJlcXVpcmUoJy4vX2FycmF5U29tZScpLFxuICAgIGNhY2hlSGFzID0gcmVxdWlyZSgnLi9fY2FjaGVIYXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxLFxuICAgIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPSAyO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgYXJyYXlzIHdpdGggc3VwcG9ydCBmb3JcbiAqIHBhcnRpYWwgZGVlcCBjb21wYXJpc29ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge0FycmF5fSBvdGhlciBUaGUgb3RoZXIgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYGFycmF5YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBhcnJheXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxBcnJheXMoYXJyYXksIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUcsXG4gICAgICBhcnJMZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICBvdGhMZW5ndGggPSBvdGhlci5sZW5ndGg7XG5cbiAgaWYgKGFyckxlbmd0aCAhPSBvdGhMZW5ndGggJiYgIShpc1BhcnRpYWwgJiYgb3RoTGVuZ3RoID4gYXJyTGVuZ3RoKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBDaGVjayB0aGF0IGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLlxuICB2YXIgYXJyU3RhY2tlZCA9IHN0YWNrLmdldChhcnJheSk7XG4gIHZhciBvdGhTdGFja2VkID0gc3RhY2suZ2V0KG90aGVyKTtcbiAgaWYgKGFyclN0YWNrZWQgJiYgb3RoU3RhY2tlZCkge1xuICAgIHJldHVybiBhcnJTdGFja2VkID09IG90aGVyICYmIG90aFN0YWNrZWQgPT0gYXJyYXk7XG4gIH1cbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSB0cnVlLFxuICAgICAgc2VlbiA9IChiaXRtYXNrICYgQ09NUEFSRV9VTk9SREVSRURfRkxBRykgPyBuZXcgU2V0Q2FjaGUgOiB1bmRlZmluZWQ7XG5cbiAgc3RhY2suc2V0KGFycmF5LCBvdGhlcik7XG4gIHN0YWNrLnNldChvdGhlciwgYXJyYXkpO1xuXG4gIC8vIElnbm9yZSBub24taW5kZXggcHJvcGVydGllcy5cbiAgd2hpbGUgKCsraW5kZXggPCBhcnJMZW5ndGgpIHtcbiAgICB2YXIgYXJyVmFsdWUgPSBhcnJheVtpbmRleF0sXG4gICAgICAgIG90aFZhbHVlID0gb3RoZXJbaW5kZXhdO1xuXG4gICAgaWYgKGN1c3RvbWl6ZXIpIHtcbiAgICAgIHZhciBjb21wYXJlZCA9IGlzUGFydGlhbFxuICAgICAgICA/IGN1c3RvbWl6ZXIob3RoVmFsdWUsIGFyclZhbHVlLCBpbmRleCwgb3RoZXIsIGFycmF5LCBzdGFjaylcbiAgICAgICAgOiBjdXN0b21pemVyKGFyclZhbHVlLCBvdGhWYWx1ZSwgaW5kZXgsIGFycmF5LCBvdGhlciwgc3RhY2spO1xuICAgIH1cbiAgICBpZiAoY29tcGFyZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKGNvbXBhcmVkKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgLy8gUmVjdXJzaXZlbHkgY29tcGFyZSBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBpZiAoc2Vlbikge1xuICAgICAgaWYgKCFhcnJheVNvbWUob3RoZXIsIGZ1bmN0aW9uKG90aFZhbHVlLCBvdGhJbmRleCkge1xuICAgICAgICAgICAgaWYgKCFjYWNoZUhhcyhzZWVuLCBvdGhJbmRleCkgJiZcbiAgICAgICAgICAgICAgICAoYXJyVmFsdWUgPT09IG90aFZhbHVlIHx8IGVxdWFsRnVuYyhhcnJWYWx1ZSwgb3RoVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSkpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHNlZW4ucHVzaChvdGhJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkpIHtcbiAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIShcbiAgICAgICAgICBhcnJWYWx1ZSA9PT0gb3RoVmFsdWUgfHxcbiAgICAgICAgICAgIGVxdWFsRnVuYyhhcnJWYWx1ZSwgb3RoVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKVxuICAgICAgICApKSB7XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBzdGFja1snZGVsZXRlJ10oYXJyYXkpO1xuICBzdGFja1snZGVsZXRlJ10ob3RoZXIpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxdWFsQXJyYXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalArrays.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\"),\n    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ \"(app-pages-browser)/./node_modules/lodash/_Uint8Array.js\"),\n    eq = __webpack_require__(/*! ./eq */ \"(app-pages-browser)/./node_modules/lodash/eq.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"(app-pages-browser)/./node_modules/lodash/_equalArrays.js\"),\n    mapToArray = __webpack_require__(/*! ./_mapToArray */ \"(app-pages-browser)/./node_modules/lodash/_mapToArray.js\"),\n    setToArray = __webpack_require__(/*! ./_setToArray */ \"(app-pages-browser)/./node_modules/lodash/_setToArray.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQnlUYWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHVFQUFXO0FBQ2hDLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlO0FBQ3hDLFNBQVMsbUJBQU8sQ0FBQyw2REFBTTtBQUN2QixrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7QUFDMUMsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWU7QUFDeEMsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWU7O0FBRXhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQnlUYWcuanM/MzY0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgVWludDhBcnJheSA9IHJlcXVpcmUoJy4vX1VpbnQ4QXJyYXknKSxcbiAgICBlcSA9IHJlcXVpcmUoJy4vZXEnKSxcbiAgICBlcXVhbEFycmF5cyA9IHJlcXVpcmUoJy4vX2VxdWFsQXJyYXlzJyksXG4gICAgbWFwVG9BcnJheSA9IHJlcXVpcmUoJy4vX21hcFRvQXJyYXknKSxcbiAgICBzZXRUb0FycmF5ID0gcmVxdWlyZSgnLi9fc2V0VG9BcnJheScpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDI7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBib29sVGFnID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgIGRhdGVUYWcgPSAnW29iamVjdCBEYXRlXScsXG4gICAgZXJyb3JUYWcgPSAnW29iamVjdCBFcnJvcl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nLFxuICAgIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG52YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLFxuICAgIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJztcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFZhbHVlT2YgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnZhbHVlT2YgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBjb21wYXJpbmcgb2JqZWN0cyBvZlxuICogdGhlIHNhbWUgYHRvU3RyaW5nVGFnYC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNvbXBhcmluZyB2YWx1ZXMgd2l0aCB0YWdzIG9mXG4gKiBgQm9vbGVhbmAsIGBEYXRlYCwgYEVycm9yYCwgYE51bWJlcmAsIGBSZWdFeHBgLCBvciBgU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZyBUaGUgYHRvU3RyaW5nVGFnYCBvZiB0aGUgb2JqZWN0cyB0byBjb21wYXJlLlxuICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGVxdWFsQnlUYWcob2JqZWN0LCBvdGhlciwgdGFnLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gIHN3aXRjaCAodGFnKSB7XG4gICAgY2FzZSBkYXRhVmlld1RhZzpcbiAgICAgIGlmICgob2JqZWN0LmJ5dGVMZW5ndGggIT0gb3RoZXIuYnl0ZUxlbmd0aCkgfHxcbiAgICAgICAgICAob2JqZWN0LmJ5dGVPZmZzZXQgIT0gb3RoZXIuYnl0ZU9mZnNldCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgb2JqZWN0ID0gb2JqZWN0LmJ1ZmZlcjtcbiAgICAgIG90aGVyID0gb3RoZXIuYnVmZmVyO1xuXG4gICAgY2FzZSBhcnJheUJ1ZmZlclRhZzpcbiAgICAgIGlmICgob2JqZWN0LmJ5dGVMZW5ndGggIT0gb3RoZXIuYnl0ZUxlbmd0aCkgfHxcbiAgICAgICAgICAhZXF1YWxGdW5jKG5ldyBVaW50OEFycmF5KG9iamVjdCksIG5ldyBVaW50OEFycmF5KG90aGVyKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG5cbiAgICBjYXNlIGJvb2xUYWc6XG4gICAgY2FzZSBkYXRlVGFnOlxuICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgICAgLy8gQ29lcmNlIGJvb2xlYW5zIHRvIGAxYCBvciBgMGAgYW5kIGRhdGVzIHRvIG1pbGxpc2Vjb25kcy5cbiAgICAgIC8vIEludmFsaWQgZGF0ZXMgYXJlIGNvZXJjZWQgdG8gYE5hTmAuXG4gICAgICByZXR1cm4gZXEoK29iamVjdCwgK290aGVyKTtcblxuICAgIGNhc2UgZXJyb3JUYWc6XG4gICAgICByZXR1cm4gb2JqZWN0Lm5hbWUgPT0gb3RoZXIubmFtZSAmJiBvYmplY3QubWVzc2FnZSA9PSBvdGhlci5tZXNzYWdlO1xuXG4gICAgY2FzZSByZWdleHBUYWc6XG4gICAgY2FzZSBzdHJpbmdUYWc6XG4gICAgICAvLyBDb2VyY2UgcmVnZXhlcyB0byBzdHJpbmdzIGFuZCB0cmVhdCBzdHJpbmdzLCBwcmltaXRpdmVzIGFuZCBvYmplY3RzLFxuICAgICAgLy8gYXMgZXF1YWwuIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZ1xuICAgICAgLy8gZm9yIG1vcmUgZGV0YWlscy5cbiAgICAgIHJldHVybiBvYmplY3QgPT0gKG90aGVyICsgJycpO1xuXG4gICAgY2FzZSBtYXBUYWc6XG4gICAgICB2YXIgY29udmVydCA9IG1hcFRvQXJyYXk7XG5cbiAgICBjYXNlIHNldFRhZzpcbiAgICAgIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUc7XG4gICAgICBjb252ZXJ0IHx8IChjb252ZXJ0ID0gc2V0VG9BcnJheSk7XG5cbiAgICAgIGlmIChvYmplY3Quc2l6ZSAhPSBvdGhlci5zaXplICYmICFpc1BhcnRpYWwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgLy8gQXNzdW1lIGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLlxuICAgICAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgICAgIGlmIChzdGFja2VkKSB7XG4gICAgICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICAgICAgfVxuICAgICAgYml0bWFzayB8PSBDT01QQVJFX1VOT1JERVJFRF9GTEFHO1xuXG4gICAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICAgIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgICAgIHZhciByZXN1bHQgPSBlcXVhbEFycmF5cyhjb252ZXJ0KG9iamVjdCksIGNvbnZlcnQob3RoZXIpLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbiAgICAgIHN0YWNrWydkZWxldGUnXShvYmplY3QpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcblxuICAgIGNhc2Ugc3ltYm9sVGFnOlxuICAgICAgaWYgKHN5bWJvbFZhbHVlT2YpIHtcbiAgICAgICAgcmV0dXJuIHN5bWJvbFZhbHVlT2YuY2FsbChvYmplY3QpID09IHN5bWJvbFZhbHVlT2YuY2FsbChvdGhlcik7XG4gICAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxdWFsQnlUYWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalByTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ \"(app-pages-browser)/./node_modules/lodash/_getAllKeys.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsT2JqZWN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBZTs7QUFFeEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxPYmplY3RzLmpzPzljMDEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldEFsbEtleXMgPSByZXF1aXJlKCcuL19nZXRBbGxLZXlzJyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIG9iamVjdHMgd2l0aCBzdXBwb3J0IGZvclxuICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgIG9ialByb3BzID0gZ2V0QWxsS2V5cyhvYmplY3QpLFxuICAgICAgb2JqTGVuZ3RoID0gb2JqUHJvcHMubGVuZ3RoLFxuICAgICAgb3RoUHJvcHMgPSBnZXRBbGxLZXlzKG90aGVyKSxcbiAgICAgIG90aExlbmd0aCA9IG90aFByb3BzLmxlbmd0aDtcblxuICBpZiAob2JqTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhaXNQYXJ0aWFsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBpbmRleCA9IG9iakxlbmd0aDtcbiAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICB2YXIga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIGlmICghKGlzUGFydGlhbCA/IGtleSBpbiBvdGhlciA6IGhhc093blByb3BlcnR5LmNhbGwob3RoZXIsIGtleSkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIC8vIENoZWNrIHRoYXQgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gIHZhciBvYmpTdGFja2VkID0gc3RhY2suZ2V0KG9iamVjdCk7XG4gIHZhciBvdGhTdGFja2VkID0gc3RhY2suZ2V0KG90aGVyKTtcbiAgaWYgKG9ialN0YWNrZWQgJiYgb3RoU3RhY2tlZCkge1xuICAgIHJldHVybiBvYmpTdGFja2VkID09IG90aGVyICYmIG90aFN0YWNrZWQgPT0gb2JqZWN0O1xuICB9XG4gIHZhciByZXN1bHQgPSB0cnVlO1xuICBzdGFjay5zZXQob2JqZWN0LCBvdGhlcik7XG4gIHN0YWNrLnNldChvdGhlciwgb2JqZWN0KTtcblxuICB2YXIgc2tpcEN0b3IgPSBpc1BhcnRpYWw7XG4gIHdoaWxlICgrK2luZGV4IDwgb2JqTGVuZ3RoKSB7XG4gICAga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIHZhciBvYmpWYWx1ZSA9IG9iamVjdFtrZXldLFxuICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2tleV07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgb2JqVmFsdWUsIGtleSwgb3RoZXIsIG9iamVjdCwgc3RhY2spXG4gICAgICAgIDogY3VzdG9taXplcihvYmpWYWx1ZSwgb3RoVmFsdWUsIGtleSwgb2JqZWN0LCBvdGhlciwgc3RhY2spO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBpZiAoIShjb21wYXJlZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgPyAob2JqVmFsdWUgPT09IG90aFZhbHVlIHx8IGVxdWFsRnVuYyhvYmpWYWx1ZSwgb3RoVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSlcbiAgICAgICAgICA6IGNvbXBhcmVkXG4gICAgICAgICkpIHtcbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHNraXBDdG9yIHx8IChza2lwQ3RvciA9IGtleSA9PSAnY29uc3RydWN0b3InKTtcbiAgfVxuICBpZiAocmVzdWx0ICYmICFza2lwQ3Rvcikge1xuICAgIHZhciBvYmpDdG9yID0gb2JqZWN0LmNvbnN0cnVjdG9yLFxuICAgICAgICBvdGhDdG9yID0gb3RoZXIuY29uc3RydWN0b3I7XG5cbiAgICAvLyBOb24gYE9iamVjdGAgb2JqZWN0IGluc3RhbmNlcyB3aXRoIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgYXJlIG5vdCBlcXVhbC5cbiAgICBpZiAob2JqQ3RvciAhPSBvdGhDdG9yICYmXG4gICAgICAgICgnY29uc3RydWN0b3InIGluIG9iamVjdCAmJiAnY29uc3RydWN0b3InIGluIG90aGVyKSAmJlxuICAgICAgICAhKHR5cGVvZiBvYmpDdG9yID09ICdmdW5jdGlvbicgJiYgb2JqQ3RvciBpbnN0YW5jZW9mIG9iakN0b3IgJiZcbiAgICAgICAgICB0eXBlb2Ygb3RoQ3RvciA9PSAnZnVuY3Rpb24nICYmIG90aEN0b3IgaW5zdGFuY2VvZiBvdGhDdG9yKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIHN0YWNrWydkZWxldGUnXShvYmplY3QpO1xuICBzdGFja1snZGVsZXRlJ10ob3RoZXIpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxdWFsT2JqZWN0cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalObjects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\nmodule.exports = freeGlobal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2ZyZWVHbG9iYWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSx3QkFBd0IscUJBQU0sZ0JBQWdCLHFCQUFNLElBQUkscUJBQU0sc0JBQXNCLHFCQUFNOztBQUUxRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzPzZiYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwgJiYgZ2xvYmFsLk9iamVjdCA9PT0gT2JqZWN0ICYmIGdsb2JhbDtcblxubW9kdWxlLmV4cG9ydHMgPSBmcmVlR2xvYmFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ \"(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js\"),\n    getSymbols = __webpack_require__(/*! ./_getSymbols */ \"(app-pages-browser)/./node_modules/lodash/_getSymbols.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/lodash/keys.js\");\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldEFsbEtleXMuanMiLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsdUZBQW1CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlO0FBQ3hDLFdBQVcsbUJBQU8sQ0FBQyxpRUFBUTs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldEFsbEtleXMuanM/OGFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldEFsbEtleXMgPSByZXF1aXJlKCcuL19iYXNlR2V0QWxsS2V5cycpLFxuICAgIGdldFN5bWJvbHMgPSByZXF1aXJlKCcuL19nZXRTeW1ib2xzJyksXG4gICAga2V5cyA9IHJlcXVpcmUoJy4va2V5cycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuXG4gKi9cbmZ1bmN0aW9uIGdldEFsbEtleXMob2JqZWN0KSB7XG4gIHJldHVybiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXMsIGdldFN5bWJvbHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFsbEtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getAllKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var isKeyable = __webpack_require__(/*! ./_isKeyable */ \"(app-pages-browser)/./node_modules/lodash/_isKeyable.js\");\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hcERhdGEuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWFwRGF0YS5qcz80NzNjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0tleWFibGUgPSByZXF1aXJlKCcuL19pc0tleWFibGUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBkYXRhIGZvciBgbWFwYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXAgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZ2V0TWFwRGF0YShtYXAsIGtleSkge1xuICB2YXIgZGF0YSA9IG1hcC5fX2RhdGFfXztcbiAgcmV0dXJuIGlzS2V5YWJsZShrZXkpXG4gICAgPyBkYXRhW3R5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyAnc3RyaW5nJyA6ICdoYXNoJ11cbiAgICA6IGRhdGEubWFwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1hcERhdGE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getMapData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ \"(app-pages-browser)/./node_modules/lodash/_baseIsNative.js\"),\n    getValue = __webpack_require__(/*! ./_getValue */ \"(app-pages-browser)/./node_modules/lodash/_getValue.js\");\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE5hdGl2ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDNUMsZUFBZSxtQkFBTyxDQUFDLDJFQUFhOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TmF0aXZlLmpzPzYyY2IiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc05hdGl2ZSA9IHJlcXVpcmUoJy4vX2Jhc2VJc05hdGl2ZScpLFxuICAgIGdldFZhbHVlID0gcmVxdWlyZSgnLi9fZ2V0VmFsdWUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBuYXRpdmUgZnVuY3Rpb24gYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFZhbHVlKG9iamVjdCwga2V5KTtcbiAgcmV0dXJuIGJhc2VJc05hdGl2ZSh2YWx1ZSkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXROYXRpdmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getNative.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFJhd1RhZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsdUVBQVc7O0FBRWhDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0UmF3VGFnLmpzPzAwYTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlR2V0VGFnYCB3aGljaCBpZ25vcmVzIGBTeW1ib2wudG9TdHJpbmdUYWdgIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSByYXcgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gZ2V0UmF3VGFnKHZhbHVlKSB7XG4gIHZhciBpc093biA9IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIHN5bVRvU3RyaW5nVGFnKSxcbiAgICAgIHRhZyA9IHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcblxuICB0cnkge1xuICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHVuZGVmaW5lZDtcbiAgICB2YXIgdW5tYXNrZWQgPSB0cnVlO1xuICB9IGNhdGNoIChlKSB7fVxuXG4gIHZhciByZXN1bHQgPSBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgaWYgKHVubWFza2VkKSB7XG4gICAgaWYgKGlzT3duKSB7XG4gICAgICB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ10gPSB0YWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ107XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0UmF3VGFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getRawTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ \"(app-pages-browser)/./node_modules/lodash/_arrayFilter.js\"),\n    stubArray = __webpack_require__(/*! ./stubArray */ \"(app-pages-browser)/./node_modules/lodash/stubArray.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFN5bWJvbHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCO0FBQzFDLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFhOztBQUVyQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzLmpzPzc3MDkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5RmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXlGaWx0ZXInKSxcbiAgICBzdHViQXJyYXkgPSByZXF1aXJlKCcuL3N0dWJBcnJheScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlR2V0U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBzeW1ib2xzLlxuICovXG52YXIgZ2V0U3ltYm9scyA9ICFuYXRpdmVHZXRTeW1ib2xzID8gc3R1YkFycmF5IDogZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBvYmplY3QgPSBPYmplY3Qob2JqZWN0KTtcbiAgcmV0dXJuIGFycmF5RmlsdGVyKG5hdGl2ZUdldFN5bWJvbHMob2JqZWN0KSwgZnVuY3Rpb24oc3ltYm9sKSB7XG4gICAgcmV0dXJuIHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCBzeW1ib2wpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U3ltYm9scztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getSymbols.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var DataView = __webpack_require__(/*! ./_DataView */ \"(app-pages-browser)/./node_modules/lodash/_DataView.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\"),\n    Promise = __webpack_require__(/*! ./_Promise */ \"(app-pages-browser)/./node_modules/lodash/_Promise.js\"),\n    Set = __webpack_require__(/*! ./_Set */ \"(app-pages-browser)/./node_modules/lodash/_Set.js\"),\n    WeakMap = __webpack_require__(/*! ./_WeakMap */ \"(app-pages-browser)/./node_modules/lodash/_WeakMap.js\"),\n    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"(app-pages-browser)/./node_modules/lodash/_toSource.js\");\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFRhZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsMkVBQWE7QUFDcEMsVUFBVSxtQkFBTyxDQUFDLGlFQUFRO0FBQzFCLGNBQWMsbUJBQU8sQ0FBQyx5RUFBWTtBQUNsQyxVQUFVLG1CQUFPLENBQUMsaUVBQVE7QUFDMUIsY0FBYyxtQkFBTyxDQUFDLHlFQUFZO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlO0FBQ3hDLGVBQWUsbUJBQU8sQ0FBQywyRUFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRUYWcuanM/Mzk0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRGF0YVZpZXcgPSByZXF1aXJlKCcuL19EYXRhVmlldycpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpLFxuICAgIFByb21pc2UgPSByZXF1aXJlKCcuL19Qcm9taXNlJyksXG4gICAgU2V0ID0gcmVxdWlyZSgnLi9fU2V0JyksXG4gICAgV2Vha01hcCA9IHJlcXVpcmUoJy4vX1dlYWtNYXAnKSxcbiAgICBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIHRvU291cmNlID0gcmVxdWlyZSgnLi9fdG9Tb3VyY2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHByb21pc2VUYWcgPSAnW29iamVjdCBQcm9taXNlXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1hcHMsIHNldHMsIGFuZCB3ZWFrbWFwcy4gKi9cbnZhciBkYXRhVmlld0N0b3JTdHJpbmcgPSB0b1NvdXJjZShEYXRhVmlldyksXG4gICAgbWFwQ3RvclN0cmluZyA9IHRvU291cmNlKE1hcCksXG4gICAgcHJvbWlzZUN0b3JTdHJpbmcgPSB0b1NvdXJjZShQcm9taXNlKSxcbiAgICBzZXRDdG9yU3RyaW5nID0gdG9Tb3VyY2UoU2V0KSxcbiAgICB3ZWFrTWFwQ3RvclN0cmluZyA9IHRvU291cmNlKFdlYWtNYXApO1xuXG4vKipcbiAqIEdldHMgdGhlIGB0b1N0cmluZ1RhZ2Agb2YgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG52YXIgZ2V0VGFnID0gYmFzZUdldFRhZztcblxuLy8gRmFsbGJhY2sgZm9yIGRhdGEgdmlld3MsIG1hcHMsIHNldHMsIGFuZCB3ZWFrIG1hcHMgaW4gSUUgMTEgYW5kIHByb21pc2VzIGluIE5vZGUuanMgPCA2LlxuaWYgKChEYXRhVmlldyAmJiBnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpICE9IGRhdGFWaWV3VGFnKSB8fFxuICAgIChNYXAgJiYgZ2V0VGFnKG5ldyBNYXApICE9IG1hcFRhZykgfHxcbiAgICAoUHJvbWlzZSAmJiBnZXRUYWcoUHJvbWlzZS5yZXNvbHZlKCkpICE9IHByb21pc2VUYWcpIHx8XG4gICAgKFNldCAmJiBnZXRUYWcobmV3IFNldCkgIT0gc2V0VGFnKSB8fFxuICAgIChXZWFrTWFwICYmIGdldFRhZyhuZXcgV2Vha01hcCkgIT0gd2Vha01hcFRhZykpIHtcbiAgZ2V0VGFnID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gYmFzZUdldFRhZyh2YWx1ZSksXG4gICAgICAgIEN0b3IgPSByZXN1bHQgPT0gb2JqZWN0VGFnID8gdmFsdWUuY29uc3RydWN0b3IgOiB1bmRlZmluZWQsXG4gICAgICAgIGN0b3JTdHJpbmcgPSBDdG9yID8gdG9Tb3VyY2UoQ3RvcikgOiAnJztcblxuICAgIGlmIChjdG9yU3RyaW5nKSB7XG4gICAgICBzd2l0Y2ggKGN0b3JTdHJpbmcpIHtcbiAgICAgICAgY2FzZSBkYXRhVmlld0N0b3JTdHJpbmc6IHJldHVybiBkYXRhVmlld1RhZztcbiAgICAgICAgY2FzZSBtYXBDdG9yU3RyaW5nOiByZXR1cm4gbWFwVGFnO1xuICAgICAgICBjYXNlIHByb21pc2VDdG9yU3RyaW5nOiByZXR1cm4gcHJvbWlzZVRhZztcbiAgICAgICAgY2FzZSBzZXRDdG9yU3RyaW5nOiByZXR1cm4gc2V0VGFnO1xuICAgICAgICBjYXNlIHdlYWtNYXBDdG9yU3RyaW5nOiByZXR1cm4gd2Vha01hcFRhZztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRUYWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFZhbHVlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0VmFsdWUuanM/MTVkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldHMgdGhlIHZhbHVlIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHByb3BlcnR5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBnZXRWYWx1ZShvYmplY3QsIGtleSkge1xuICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRWYWx1ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getValue.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hDbGVhci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaENsZWFyLmpzP2VkMGIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgSGFzaFxuICovXG5mdW5jdGlvbiBoYXNoQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuYXRpdmVDcmVhdGUgPyBuYXRpdmVDcmVhdGUobnVsbCkgOiB7fTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoQ2xlYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanM/Yzg2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge09iamVjdH0gaGFzaCBUaGUgaGFzaCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaERlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IHRoaXMuaGFzKGtleSkgJiYgZGVsZXRlIHRoaXMuX19kYXRhX19ba2V5XTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hEZWxldGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hHZXQuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsbUZBQWlCOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoR2V0LmpzP2JmNDMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogR2V0cyB0aGUgaGFzaCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBoYXNoR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChuYXRpdmVDcmVhdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0gZGF0YVtrZXldO1xuICAgIHJldHVybiByZXN1bHQgPT09IEhBU0hfVU5ERUZJTkVEID8gdW5kZWZpbmVkIDogcmVzdWx0O1xuICB9XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkgPyBkYXRhW2tleV0gOiB1bmRlZmluZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaEdldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hIYXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsbUZBQWlCOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hIYXMuanM/YWUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICByZXR1cm4gbmF0aXZlQ3JlYXRlID8gKGRhdGFba2V5XSAhPT0gdW5kZWZpbmVkKSA6IGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoSGFzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hTZXQuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsbUZBQWlCOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaFNldC5qcz81NTFiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKipcbiAqIFNldHMgdGhlIGhhc2ggYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBoYXNoIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBoYXNoU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICB0aGlzLnNpemUgKz0gdGhpcy5oYXMoa2V5KSA/IDAgOiAxO1xuICBkYXRhW2tleV0gPSAobmF0aXZlQ3JlYXRlICYmIHZhbHVlID09PSB1bmRlZmluZWQpID8gSEFTSF9VTkRFRklORUQgOiB2YWx1ZTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaFNldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzSW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzSW5kZXguanM/YzU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKHR5cGUgIT0gJ3N5bWJvbCcgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpKSAmJlxuICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNJbmRleDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isIndex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5YWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanM/NDQ0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlIGZvciB1c2UgYXMgdW5pcXVlIG9iamVjdCBrZXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXlhYmxlKHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gKHR5cGUgPT0gJ3N0cmluZycgfHwgdHlwZSA9PSAnbnVtYmVyJyB8fCB0eXBlID09ICdzeW1ib2wnIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nKVxuICAgID8gKHZhbHVlICE9PSAnX19wcm90b19fJylcbiAgICA6ICh2YWx1ZSA9PT0gbnVsbCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNLZXlhYmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isKeyable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var coreJsData = __webpack_require__(/*! ./_coreJsData */ \"(app-pages-browser)/./node_modules/lodash/_coreJsData.js\");\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzTWFza2VkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzTWFza2VkLmpzPzU0MTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvcmVKc0RhdGEgPSByZXF1aXJlKCcuL19jb3JlSnNEYXRhJyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtZXRob2RzIG1hc3F1ZXJhZGluZyBhcyBuYXRpdmUuICovXG52YXIgbWFza1NyY0tleSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHVpZCA9IC9bXi5dKyQvLmV4ZWMoY29yZUpzRGF0YSAmJiBjb3JlSnNEYXRhLmtleXMgJiYgY29yZUpzRGF0YS5rZXlzLklFX1BST1RPIHx8ICcnKTtcbiAgcmV0dXJuIHVpZCA/ICgnU3ltYm9sKHNyYylfMS4nICsgdWlkKSA6ICcnO1xufSgpKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNNYXNrZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isMasked.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzUHJvdG90eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1Byb3RvdHlwZS5qcz82MjQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1Byb3RvdHlwZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isPrototype.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUNsZWFyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanM/NWVhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gW107XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlQ2xlYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7O0FBRTVDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcz82NGY4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBsaXN0IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgbGFzdEluZGV4ID0gZGF0YS5sZW5ndGggLSAxO1xuICBpZiAoaW5kZXggPT0gbGFzdEluZGV4KSB7XG4gICAgZGF0YS5wb3AoKTtcbiAgfSBlbHNlIHtcbiAgICBzcGxpY2UuY2FsbChkYXRhLCBpbmRleCwgMSk7XG4gIH1cbiAgLS10aGlzLnNpemU7XG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZURlbGV0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUdldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanM/MGQ0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogZGF0YVtpbmRleF1bMV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlR2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUhhcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlSGFzLmpzPzVkYzEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGxpc3QgY2FjaGUgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gYXNzb2NJbmRleE9mKHRoaXMuX19kYXRhX18sIGtleSkgPiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVIYXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcz81NmIwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBsaXN0IGNhY2hlIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBsaXN0IGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICArK3RoaXMuc2l6ZTtcbiAgICBkYXRhLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSBlbHNlIHtcbiAgICBkYXRhW2luZGV4XVsxXSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZVNldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var Hash = __webpack_require__(/*! ./_Hash */ \"(app-pages-browser)/./node_modules/lodash/_Hash.js\"),\n    ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\");\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlQ2xlYXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLG1FQUFTO0FBQzVCLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLFVBQVUsbUJBQU8sQ0FBQyxpRUFBUTs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlQ2xlYXIuanM/NzAzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSGFzaCA9IHJlcXVpcmUoJy4vX0hhc2gnKSxcbiAgICBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKSxcbiAgICBNYXAgPSByZXF1aXJlKCcuL19NYXAnKTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVDbGVhcigpIHtcbiAgdGhpcy5zaXplID0gMDtcbiAgdGhpcy5fX2RhdGFfXyA9IHtcbiAgICAnaGFzaCc6IG5ldyBIYXNoLFxuICAgICdtYXAnOiBuZXcgKE1hcCB8fCBMaXN0Q2FjaGUpLFxuICAgICdzdHJpbmcnOiBuZXcgSGFzaFxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlQ2xlYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZURlbGV0ZS5qcz82ODE5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciByZXN1bHQgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSlbJ2RlbGV0ZSddKGtleSk7XG4gIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZURlbGV0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzP2RkMzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbWFwIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUdldChrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5nZXQoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUdldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzPzk3ZmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbWFwIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVIYXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLCtFQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzPzRjNzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogU2V0cyB0aGUgbWFwIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG1hcCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IGdldE1hcERhdGEodGhpcywga2V5KSxcbiAgICAgIHNpemUgPSBkYXRhLnNpemU7XG5cbiAgZGF0YS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHRoaXMuc2l6ZSArPSBkYXRhLnNpemUgPT0gc2l6ZSA/IDAgOiAxO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZVNldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcFRvQXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBUb0FycmF5LmpzP2VhMGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0cyBgbWFwYCB0byBpdHMga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUga2V5LXZhbHVlIHBhaXJzLlxuICovXG5mdW5jdGlvbiBtYXBUb0FycmF5KG1hcCkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KG1hcC5zaXplKTtcblxuICBtYXAuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gW2tleSwgdmFsdWVdO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBUb0FycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapToArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\");\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUNyZWF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYzs7QUFFdEM7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVDcmVhdGUuanM/YTk1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBuYXRpdmVDcmVhdGUgPSBnZXROYXRpdmUoT2JqZWN0LCAnY3JlYXRlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF0aXZlQ3JlYXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var overArg = __webpack_require__(/*! ./_overArg */ \"(app-pages-browser)/./node_modules/lodash/_overArg.js\");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLHlFQUFZOztBQUVsQztBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXMuanM/ZDhiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgb3ZlckFyZyA9IHJlcXVpcmUoJy4vX292ZXJBcmcnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUtleXMgPSBvdmVyQXJnKE9iamVjdC5rZXlzLCBPYmplY3QpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nativeKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\nvar freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25vZGVVdGlsLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBZTs7QUFFeEM7QUFDQSxrQkFBa0IsS0FBMEI7O0FBRTVDO0FBQ0EsZ0NBQWdDLFFBQWE7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanM/ZDFjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICAvLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy5cbiAgICB2YXIgdHlwZXMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUucmVxdWlyZSAmJiBmcmVlTW9kdWxlLnJlcXVpcmUoJ3V0aWwnKS50eXBlcztcblxuICAgIGlmICh0eXBlcykge1xuICAgICAgcmV0dXJuIHR5cGVzO1xuICAgIH1cblxuICAgIC8vIExlZ2FjeSBgcHJvY2Vzcy5iaW5kaW5nKCd1dGlsJylgIGZvciBOb2RlLmpzIDwgMTAuXG4gICAgcmV0dXJuIGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZygndXRpbCcpO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBub2RlVXRpbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nodeUtil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX29iamVjdFRvU3RyaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX29iamVjdFRvU3RyaW5nLmpzPzIzZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyB1c2luZyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb2JqZWN0VG9TdHJpbmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_objectToString.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX292ZXJBcmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fb3ZlckFyZy5qcz82ZjRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHVuYXJ5IGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnQgdHJhbnNmb3JtZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHdyYXAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2Zvcm0gVGhlIGFyZ3VtZW50IHRyYW5zZm9ybS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBvdmVyQXJnKGZ1bmMsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG92ZXJBcmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_overArg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Jvb3QuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWU7O0FBRXhDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzP2NjNjUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZyZWVHbG9iYWwgPSByZXF1aXJlKCcuL19mcmVlR2xvYmFsJyk7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb290O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_root.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUFkZC5qcz9jNWRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqXG4gKiBBZGRzIGB2YWx1ZWAgdG8gdGhlIGFycmF5IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBhZGRcbiAqIEBtZW1iZXJPZiBTZXRDYWNoZVxuICogQGFsaWFzIHB1c2hcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNhY2hlLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHNldENhY2hlQWRkKHZhbHVlKSB7XG4gIHRoaXMuX19kYXRhX18uc2V0KHZhbHVlLCBIQVNIX1VOREVGSU5FRCk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldENhY2hlQWRkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUhhcy5qcz82Mjg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgaW4gdGhlIGFycmF5IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBTZXRDYWNoZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc2V0Q2FjaGVIYXModmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRDYWNoZUhhcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRUb0FycmF5LmpzPzJkZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0cyBgc2V0YCB0byBhbiBhcnJheSBvZiBpdHMgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc2V0IFRoZSBzZXQgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBzZXRUb0FycmF5KHNldCkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KHNldC5zaXplKTtcblxuICBzZXQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRUb0FycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setToArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\");\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrQ2xlYXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tDbGVhci5qcz83NGU4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBTdGFja1xuICovXG5mdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja0NsZWFyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrRGVsZXRlLmpzPzM1NTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIHJlc3VsdCA9IGRhdGFbJ2RlbGV0ZSddKGtleSk7XG5cbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrRGVsZXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrR2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tHZXQuanM/YTVmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tHZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tIYXMuanM/MzcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIHN0YWNrIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tIYXMoa2V5KSB7XG4gIHJldHVybiB0aGlzLl9fZGF0YV9fLmhhcyhrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrSGFzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\"),\n    MapCache = __webpack_require__(/*! ./_MapCache */ \"(app-pages-browser)/./node_modules/lodash/_MapCache.js\");\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrU2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFjO0FBQ3RDLFVBQVUsbUJBQU8sQ0FBQyxpRUFBUTtBQUMxQixlQUFlLG1CQUFPLENBQUMsMkVBQWE7O0FBRXBDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qcz9kMzAwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKSxcbiAgICBNYXAgPSByZXF1aXJlKCcuL19NYXAnKSxcbiAgICBNYXBDYWNoZSA9IHJlcXVpcmUoJy4vX01hcENhY2hlJyk7XG5cbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xudmFyIExBUkdFX0FSUkFZX1NJWkUgPSAyMDA7XG5cbi8qKlxuICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgc3RhY2sgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIExpc3RDYWNoZSkge1xuICAgIHZhciBwYWlycyA9IGRhdGEuX19kYXRhX187XG4gICAgaWYgKCFNYXAgfHwgKHBhaXJzLmxlbmd0aCA8IExBUkdFX0FSUkFZX1NJWkUgLSAxKSkge1xuICAgICAgcGFpcnMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgdGhpcy5zaXplID0gKytkYXRhLnNpemU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGUocGFpcnMpO1xuICB9XG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrU2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvU291cmNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b1NvdXJjZS5qcz85MmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYGZ1bmNgIHRvIGl0cyBzb3VyY2UgY29kZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHNvdXJjZSBjb2RlLlxuICovXG5mdW5jdGlvbiB0b1NvdXJjZShmdW5jKSB7XG4gIGlmIChmdW5jICE9IG51bGwpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGZ1bmNUb1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoZnVuYyArICcnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiAnJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b1NvdXJjZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_toSource.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanM/ZWQ4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBlcmZvcm1zIGFcbiAqIFtgU2FtZVZhbHVlWmVyb2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXNhbWV2YWx1ZXplcm8pXG4gKiBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmUgZXF1aXZhbGVudC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gKlxuICogXy5lcShvYmplY3QsIG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcShvYmplY3QsIG90aGVyKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcSgnYScsICdhJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcSgnYScsIE9iamVjdCgnYScpKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcShOYU4sIE5hTik7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGVxKHZhbHVlLCBvdGhlcikge1xuICByZXR1cm4gdmFsdWUgPT09IG90aGVyIHx8ICh2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlcTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/eq.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ \"(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcmd1bWVudHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCLG1CQUFPLENBQUMseUZBQW9CO0FBQ2xELG1CQUFtQixtQkFBTyxDQUFDLGlGQUFnQjs7QUFFM0M7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1CQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLG1CQUFtQjtBQUNsRTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FyZ3VtZW50cy5qcz80MTUxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlSXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL19iYXNlSXNBcmd1bWVudHMnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhbiBgYXJndW1lbnRzYCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICogIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcmd1bWVudHMgPSBiYXNlSXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPyBiYXNlSXNBcmd1bWVudHMgOiBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCAnY2FsbGVlJykgJiZcbiAgICAhcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0FyZ3VtZW50cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArguments.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5LmpzPzVmMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var isFunction = __webpack_require__(/*! ./isFunction */ \"(app-pages-browser)/./node_modules/lodash/isFunction.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"(app-pages-browser)/./node_modules/lodash/isLength.js\");\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsNkVBQWM7QUFDdkMsZUFBZSxtQkFBTyxDQUFDLHlFQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXlMaWtlLmpzPzYyNmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzRnVuY3Rpb24gPSByZXF1aXJlKCcuL2lzRnVuY3Rpb24nKSxcbiAgICBpc0xlbmd0aCA9IHJlcXVpcmUoJy4vaXNMZW5ndGgnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLiBBIHZhbHVlIGlzIGNvbnNpZGVyZWQgYXJyYXktbGlrZSBpZiBpdCdzXG4gKiBub3QgYSBmdW5jdGlvbiBhbmQgaGFzIGEgYHZhbHVlLmxlbmd0aGAgdGhhdCdzIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIG9yXG4gKiBlcXVhbCB0byBgMGAgYW5kIGxlc3MgdGhhbiBvciBlcXVhbCB0byBgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZSgnYWJjJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUxpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhaXNGdW5jdGlvbih2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheUxpa2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArrayLike.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\nvar root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\"),\n    stubFalse = __webpack_require__(/*! ./stubFalse */ \"(app-pages-browser)/./node_modules/lodash/stubFalse.js\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNCdWZmZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFdBQVcsbUJBQU8sQ0FBQyxtRUFBUztBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBYTs7QUFFckM7QUFDQSxrQkFBa0IsS0FBMEI7O0FBRTVDO0FBQ0EsZ0NBQWdDLFFBQWE7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQnVmZmVyLmpzPzRlMjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290JyksXG4gICAgc3R1YkZhbHNlID0gcmVxdWlyZSgnLi9zdHViRmFsc2UnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBCdWZmZXIgPSBtb2R1bGVFeHBvcnRzID8gcm9vdC5CdWZmZXIgOiB1bmRlZmluZWQ7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVJc0J1ZmZlciA9IEJ1ZmZlciA/IEJ1ZmZlci5pc0J1ZmZlciA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlciwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBCdWZmZXIoMikpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IFVpbnQ4QXJyYXkoMikpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQnVmZmVyID0gbmF0aXZlSXNCdWZmZXIgfHwgc3R1YkZhbHNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQnVmZmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isBuffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isEqual.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEqual.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js\");\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNFcXVhbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0VxdWFsLmpzPzExYmYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc0VxdWFsID0gcmVxdWlyZSgnLi9fYmFzZUlzRXF1YWwnKTtcblxuLyoqXG4gKiBQZXJmb3JtcyBhIGRlZXAgY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlXG4gKiBlcXVpdmFsZW50LlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBzdXBwb3J0cyBjb21wYXJpbmcgYXJyYXlzLCBhcnJheSBidWZmZXJzLCBib29sZWFucyxcbiAqIGRhdGUgb2JqZWN0cywgZXJyb3Igb2JqZWN0cywgbWFwcywgbnVtYmVycywgYE9iamVjdGAgb2JqZWN0cywgcmVnZXhlcyxcbiAqIHNldHMsIHN0cmluZ3MsIHN5bWJvbHMsIGFuZCB0eXBlZCBhcnJheXMuIGBPYmplY3RgIG9iamVjdHMgYXJlIGNvbXBhcmVkXG4gKiBieSB0aGVpciBvd24sIG5vdCBpbmhlcml0ZWQsIGVudW1lcmFibGUgcHJvcGVydGllcy4gRnVuY3Rpb25zIGFuZCBET01cbiAqIG5vZGVzIGFyZSBjb21wYXJlZCBieSBzdHJpY3QgZXF1YWxpdHksIGkuZS4gYD09PWAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uaXNFcXVhbChvYmplY3QsIG90aGVyKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBvYmplY3QgPT09IG90aGVyO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNFcXVhbCh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIGJhc2VJc0VxdWFsKHZhbHVlLCBvdGhlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNFcXVhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/./node_modules/lodash/isObject.js\");\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBZTtBQUN4QyxlQUFlLG1CQUFPLENBQUMseUVBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRnVuY3Rpb24uanM/Y2YzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFzeW5jVGFnID0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDkgd2hpY2ggcmV0dXJucyAnb2JqZWN0JyBmb3IgdHlwZWQgYXJyYXlzIGFuZCBvdGhlciBjb25zdHJ1Y3RvcnMuXG4gIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWcgfHwgdGFnID09IGFzeW5jVGFnIHx8IHRhZyA9PSBwcm94eVRhZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0Z1bmN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isFunction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNMZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0xlbmd0aC5qcz8wMTNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBsZW5ndGgsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0xlbmd0aCgzKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTGVuZ3RoKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aCgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNMZW5ndGgodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJlxuICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0xlbmd0aDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isLength.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3QuanM/YmJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3RMaWtlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3RMaWtlLmpzPzZhN2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3RMaWtlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isObjectLike.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ \"(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js\"),\n    baseUnary = __webpack_require__(/*! ./_baseUnary */ \"(app-pages-browser)/./node_modules/lodash/_baseUnary.js\"),\n    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ \"(app-pages-browser)/./node_modules/lodash/_nodeUtil.js\");\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNUeXBlZEFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLDJGQUFxQjtBQUNwRCxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxlQUFlLG1CQUFPLENBQUMsMkVBQWE7O0FBRXBDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNUeXBlZEFycmF5LmpzP2RkNjciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL19iYXNlSXNUeXBlZEFycmF5JyksXG4gICAgYmFzZVVuYXJ5ID0gcmVxdWlyZSgnLi9fYmFzZVVuYXJ5JyksXG4gICAgbm9kZVV0aWwgPSByZXF1aXJlKCcuL19ub2RlVXRpbCcpO1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xudmFyIG5vZGVJc1R5cGVkQXJyYXkgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1R5cGVkQXJyYXk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkobmV3IFVpbnQ4QXJyYXkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KFtdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc1R5cGVkQXJyYXkgPSBub2RlSXNUeXBlZEFycmF5ID8gYmFzZVVuYXJ5KG5vZGVJc1R5cGVkQXJyYXkpIDogYmFzZUlzVHlwZWRBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc1R5cGVkQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isTypedArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ \"(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js\"),\n    baseKeys = __webpack_require__(/*! ./_baseKeys */ \"(app-pages-browser)/./node_modules/lodash/_baseKeys.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"(app-pages-browser)/./node_modules/lodash/isArrayLike.js\");\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gva2V5cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBa0I7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLDJFQUFhO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLCtFQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9rZXlzLmpzPzRlM2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5TGlrZUtleXMgPSByZXF1aXJlKCcuL19hcnJheUxpa2VLZXlzJyksXG4gICAgYmFzZUtleXMgPSByZXF1aXJlKCcuL19iYXNlS2V5cycpLFxuICAgIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIGBvYmplY3RgLlxuICpcbiAqICoqTm90ZToqKiBOb24tb2JqZWN0IHZhbHVlcyBhcmUgY29lcmNlZCB0byBvYmplY3RzLiBTZWUgdGhlXG4gKiBbRVMgc3BlY10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LmtleXMpXG4gKiBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqICAgdGhpcy5iID0gMjtcbiAqIH1cbiAqXG4gKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICpcbiAqIF8ua2V5cyhuZXcgRm9vKTtcbiAqIC8vID0+IFsnYScsICdiJ10gKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZClcbiAqXG4gKiBfLmtleXMoJ2hpJyk7XG4gKiAvLyA9PiBbJzAnLCAnMSddXG4gKi9cbmZ1bmN0aW9uIGtleXMob2JqZWN0KSB7XG4gIHJldHVybiBpc0FycmF5TGlrZShvYmplY3QpID8gYXJyYXlMaWtlS2V5cyhvYmplY3QpIDogYmFzZUtleXMob2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBrZXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvc3R1YkFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvc3R1YkFycmF5LmpzPzM4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIGEgbmV3IGVtcHR5IGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4xMy4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZW1wdHkgYXJyYXkuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBhcnJheXMgPSBfLnRpbWVzKDIsIF8uc3R1YkFycmF5KTtcbiAqXG4gKiBjb25zb2xlLmxvZyhhcnJheXMpO1xuICogLy8gPT4gW1tdLCBbXV1cbiAqXG4gKiBjb25zb2xlLmxvZyhhcnJheXNbMF0gPT09IGFycmF5c1sxXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBzdHViQXJyYXkoKSB7XG4gIHJldHVybiBbXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHViQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/stubArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvc3R1YkZhbHNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViRmFsc2UuanM/OTE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkZhbHNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/stubFalse.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/quill/dist/quill.js":
/*!******************************************!*\
  !*** ./node_modules/quill/dist/quill.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/*!\n * Quill Editor v2.0.0-dev.3\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_668__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_668__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_668__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_668__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_668__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_668__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_668__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_668__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_668__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_668__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_668__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_668__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_668__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_668__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_668__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_668__(__nested_webpack_require_668__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./assets/icons/align-center.svg\":\n/*!***************************************!*\\\n  !*** ./assets/icons/align-center.svg ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/align-center.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/align-justify.svg\":\n/*!****************************************!*\\\n  !*** ./assets/icons/align-justify.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/align-justify.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/align-left.svg\":\n/*!*************************************!*\\\n  !*** ./assets/icons/align-left.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/align-left.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/align-right.svg\":\n/*!**************************************!*\\\n  !*** ./assets/icons/align-right.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/align-right.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/background.svg\":\n/*!*************************************!*\\\n  !*** ./assets/icons/background.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <g class=\\\\\\\"ql-fill ql-color-label\\\\\\\"> <polygon points=\\\\\\\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\\\\\\\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\\\\\\\"6.817 5 6 5 6 6 6.38 6 6.817 5\\\\\\\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\\\\\\\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\\\\\\\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\\\\\\\"4.63 10 4 10 4 11 4.192 11 4.63 10\\\\\\\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\\\\\\\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\\\\\\\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\\\\\\\"12 6.868 12 6 11.62 6 12 6.868\\\\\\\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\\\\\\\"12.933 9 13 9 13 8 12.495 8 12.933 9\\\\\\\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\\\\\\\"5.5 13 9 5 12.5 13\\\\\\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/background.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/blockquote.svg\":\n/*!*************************************!*\\\n  !*** ./assets/icons/blockquote.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <rect class=\\\\\\\"ql-fill ql-stroke\\\\\\\" height=3 width=3 x=4 y=5></rect> <rect class=\\\\\\\"ql-fill ql-stroke\\\\\\\" height=3 width=3 x=11 y=5></rect> <path class=\\\\\\\"ql-even ql-fill ql-stroke\\\\\\\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\\\\\\\"ql-even ql-fill ql-stroke\\\\\\\" d=M14,8c0,4.031-3,5-3,5></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/blockquote.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/bold.svg\":\n/*!*******************************!*\\\n  !*** ./assets/icons/bold.svg ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/bold.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/clean.svg\":\n/*!********************************!*\\\n  !*** ./assets/icons/clean.svg ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg class=\\\\\\\"\\\\\\\" viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/clean.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/code.svg\":\n/*!*******************************!*\\\n  !*** ./assets/icons/code.svg ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <polyline class=\\\\\\\"ql-even ql-stroke\\\\\\\" points=\\\\\\\"5 7 3 9 5 11\\\\\\\"></polyline> <polyline class=\\\\\\\"ql-even ql-stroke\\\\\\\" points=\\\\\\\"13 7 15 9 13 11\\\\\\\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/code.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/color.svg\":\n/*!********************************!*\\\n  !*** ./assets/icons/color.svg ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=\\\\\\\"ql-color-label ql-stroke ql-transparent\\\\\\\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\\\\\\\"5.5 11 9 3 12.5 11\\\\\\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/color.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/direction-ltr.svg\":\n/*!****************************************!*\\\n  !*** ./assets/icons/direction-ltr.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <polygon class=\\\\\\\"ql-stroke ql-fill\\\\\\\" points=\\\\\\\"3 11 5 9 3 7 3 11\\\\\\\"></polygon> <line class=\\\\\\\"ql-stroke ql-fill\\\\\\\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/direction-ltr.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/direction-rtl.svg\":\n/*!****************************************!*\\\n  !*** ./assets/icons/direction-rtl.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <polygon class=\\\\\\\"ql-stroke ql-fill\\\\\\\" points=\\\\\\\"15 12 13 10 15 8 15 12\\\\\\\"></polygon> <line class=\\\\\\\"ql-stroke ql-fill\\\\\\\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/direction-rtl.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/dropdown.svg\":\n/*!***********************************!*\\\n  !*** ./assets/icons/dropdown.svg ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <polygon class=ql-stroke points=\\\\\\\"7 11 9 13 11 11 7 11\\\\\\\"></polygon> <polygon class=ql-stroke points=\\\\\\\"7 7 9 5 11 7 7 7\\\\\\\"></polygon> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/dropdown.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/formula.svg\":\n/*!**********************************!*\\\n  !*** ./assets/icons/formula.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/formula.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/header-2.svg\":\n/*!***********************************!*\\\n  !*** ./assets/icons/header-2.svg ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewBox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/header-2.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/header.svg\":\n/*!*********************************!*\\\n  !*** ./assets/icons/header.svg ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewBox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/header.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/image.svg\":\n/*!********************************!*\\\n  !*** ./assets/icons/image.svg ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\\\\\\\"ql-even ql-fill\\\\\\\" points=\\\\\\\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\\\\\\\"></polyline> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/image.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/indent.svg\":\n/*!*********************************!*\\\n  !*** ./assets/icons/indent.svg ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\\\\\\\"ql-fill ql-stroke\\\\\\\" points=\\\\\\\"3 7 3 11 5 9 3 7\\\\\\\"></polyline> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/indent.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/italic.svg\":\n/*!*********************************!*\\\n  !*** ./assets/icons/italic.svg ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/italic.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/link.svg\":\n/*!*******************************!*\\\n  !*** ./assets/icons/link.svg ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\\\\\\\"ql-even ql-stroke\\\\\\\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\\\\\\\"ql-even ql-stroke\\\\\\\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/link.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/list-bullet.svg\":\n/*!**************************************!*\\\n  !*** ./assets/icons/list-bullet.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/list-bullet.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/list-check.svg\":\n/*!*************************************!*\\\n  !*** ./assets/icons/list-check.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg class=\\\\\\\"\\\\\\\" viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\\\\\\\"3 4 4 5 6 3\\\\\\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\\\\\\\"3 14 4 15 6 13\\\\\\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\\\\\\"3 9 4 10 6 8\\\\\\\"></polyline> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/list-check.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/list-ordered.svg\":\n/*!***************************************!*\\\n  !*** ./assets/icons/list-ordered.svg ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\\\\\\\"ql-stroke ql-thin\\\\\\\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\\\\\\\"ql-stroke ql-thin\\\\\\\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\\\\\\\"ql-stroke ql-thin\\\\\\\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/list-ordered.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/outdent.svg\":\n/*!**********************************!*\\\n  !*** ./assets/icons/outdent.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\\\\\\"5 7 5 11 3 9 5 7\\\\\\\"></polyline> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/outdent.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/strike.svg\":\n/*!*********************************!*\\\n  !*** ./assets/icons/strike.svg ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <line class=\\\\\\\"ql-stroke ql-thin\\\\\\\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/strike.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/subscript.svg\":\n/*!************************************!*\\\n  !*** ./assets/icons/subscript.svg ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/subscript.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/superscript.svg\":\n/*!**************************************!*\\\n  !*** ./assets/icons/superscript.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/superscript.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/table.svg\":\n/*!********************************!*\\\n  !*** ./assets/icons/table.svg ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=2 width=3 x=5 y=5></rect> <rect class=ql-fill height=2 width=4 x=9 y=5></rect> <g class=\\\\\\\"ql-fill ql-transparent\\\\\\\"> <rect height=2 width=3 x=5 y=8></rect> <rect height=2 width=4 x=9 y=8></rect> <rect height=2 width=3 x=5 y=11></rect> <rect height=2 width=4 x=9 y=11></rect> </g> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/table.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/underline.svg\":\n/*!************************************!*\\\n  !*** ./assets/icons/underline.svg ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/underline.svg?\");\n\n/***/ }),\n\n/***/ \"./assets/icons/video.svg\":\n/*!********************************!*\\\n  !*** ./assets/icons/video.svg ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = \\\"<svg viewbox=\\\\\\\"0 0 18 18\\\\\\\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>\\\";\\n\\n//# sourceURL=webpack://Quill/./assets/icons/video.svg?\");\n\n/***/ }),\n\n/***/ \"./blots/block.js\":\n/*!************************!*\\\n  !*** ./blots/block.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.BlockEmbed = exports.bubbleFormats = exports.blockDelta = undefined;\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _break = __webpack_require__(/*! ./break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _inline = __webpack_require__(/*! ./inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nvar _text = __webpack_require__(/*! ./text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst NEWLINE_LENGTH = 1;\\n\\nclass Block extends _parchment.BlockBlot {\\n  constructor(scroll, domNode) {\\n    super(scroll, domNode);\\n    this.cache = {};\\n  }\\n\\n  delta() {\\n    if (this.cache.delta == null) {\\n      this.cache.delta = blockDelta(this);\\n    }\\n    return this.cache.delta;\\n  }\\n\\n  deleteAt(index, length) {\\n    super.deleteAt(index, length);\\n    this.cache = {};\\n  }\\n\\n  formatAt(index, length, name, value) {\\n    if (length <= 0) return;\\n    if (this.scroll.query(name, _parchment.Scope.BLOCK)) {\\n      if (index + length === this.length()) {\\n        this.format(name, value);\\n      }\\n    } else {\\n      super.formatAt(index, Math.min(length, this.length() - index - 1), name, value);\\n    }\\n    this.cache = {};\\n  }\\n\\n  insertAt(index, value, def) {\\n    if (def != null) {\\n      super.insertAt(index, value, def);\\n      this.cache = {};\\n      return;\\n    }\\n    if (value.length === 0) return;\\n    const lines = value.split('\\\\n');\\n    const text = lines.shift();\\n    if (text.length > 0) {\\n      if (index < this.length() - 1 || this.children.tail == null) {\\n        super.insertAt(Math.min(index, this.length() - 1), text);\\n      } else {\\n        this.children.tail.insertAt(this.children.tail.length(), text);\\n      }\\n      this.cache = {};\\n    }\\n    let block = this;\\n    lines.reduce((lineIndex, line) => {\\n      block = block.split(lineIndex, true);\\n      block.insertAt(0, line);\\n      return line.length;\\n    }, index + text.length);\\n  }\\n\\n  insertBefore(blot, ref) {\\n    const head = this.children.head;\\n\\n    super.insertBefore(blot, ref);\\n    if (head instanceof _break2.default) {\\n      head.remove();\\n    }\\n    this.cache = {};\\n  }\\n\\n  length() {\\n    if (this.cache.length == null) {\\n      this.cache.length = super.length() + NEWLINE_LENGTH;\\n    }\\n    return this.cache.length;\\n  }\\n\\n  moveChildren(target, ref) {\\n    super.moveChildren(target, ref);\\n    this.cache = {};\\n  }\\n\\n  optimize(context) {\\n    super.optimize(context);\\n    this.cache = {};\\n  }\\n\\n  path(index) {\\n    return super.path(index, true);\\n  }\\n\\n  removeChild(child) {\\n    super.removeChild(child);\\n    this.cache = {};\\n  }\\n\\n  split(index, force = false) {\\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\\n      const clone = this.clone();\\n      if (index === 0) {\\n        this.parent.insertBefore(clone, this);\\n        return this;\\n      }\\n      this.parent.insertBefore(clone, this.next);\\n      return clone;\\n    }\\n    const next = super.split(index, force);\\n    this.cache = {};\\n    return next;\\n  }\\n}\\nBlock.blotName = 'block';\\nBlock.tagName = 'P';\\nBlock.defaultChild = _break2.default;\\nBlock.allowedChildren = [_break2.default, _inline2.default, _parchment.EmbedBlot, _text2.default];\\n\\nclass BlockEmbed extends _parchment.EmbedBlot {\\n  attach() {\\n    super.attach();\\n    this.attributes = new _parchment.AttributorStore(this.domNode);\\n  }\\n\\n  delta() {\\n    return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));\\n  }\\n\\n  format(name, value) {\\n    const attribute = this.scroll.query(name, _parchment.Scope.BLOCK_ATTRIBUTE);\\n    if (attribute != null) {\\n      this.attributes.attribute(attribute, value);\\n    }\\n  }\\n\\n  formatAt(index, length, name, value) {\\n    this.format(name, value);\\n  }\\n\\n  insertAt(index, value, def) {\\n    if (typeof value === 'string' && value.endsWith('\\\\n')) {\\n      const block = this.scroll.create(Block.blotName);\\n      this.parent.insertBefore(block, index === 0 ? this : this.next);\\n      block.insertAt(0, value.slice(0, -1));\\n    } else {\\n      super.insertAt(index, value, def);\\n    }\\n  }\\n}\\nBlockEmbed.scope = _parchment.Scope.BLOCK_BLOT;\\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\\n\\nfunction blockDelta(blot) {\\n  return blot.descendants(_parchment.LeafBlot).reduce((delta, leaf) => {\\n    if (leaf.length() === 0) {\\n      return delta;\\n    }\\n    return delta.insert(leaf.value(), bubbleFormats(leaf));\\n  }, new _quillDelta2.default()).insert('\\\\n', bubbleFormats(blot));\\n}\\n\\nfunction bubbleFormats(blot, formats = {}) {\\n  if (blot == null) return formats;\\n  if (typeof blot.formats === 'function') {\\n    formats = (0, _extend2.default)(formats, blot.formats());\\n    // exclude syntax highlighting from deltas and getFormat()\\n    delete formats['code-token'];\\n  }\\n  if (blot.parent == null || blot.parent.statics.blotName === 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {\\n    return formats;\\n  }\\n  return bubbleFormats(blot.parent, formats);\\n}\\n\\nexports.blockDelta = blockDelta;\\nexports.bubbleFormats = bubbleFormats;\\nexports.BlockEmbed = BlockEmbed;\\nexports.default = Block;\\n\\n//# sourceURL=webpack://Quill/./blots/block.js?\");\n\n/***/ }),\n\n/***/ \"./blots/break.js\":\n/*!************************!*\\\n  !*** ./blots/break.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nclass Break extends _parchment.EmbedBlot {\\n  static value() {\\n    return undefined;\\n  }\\n\\n  optimize() {\\n    if (this.prev || this.next) {\\n      this.remove();\\n    }\\n  }\\n\\n  length() {\\n    return 0;\\n  }\\n\\n  value() {\\n    return '';\\n  }\\n}\\nBreak.blotName = 'break';\\nBreak.tagName = 'BR';\\n\\nexports.default = Break;\\n\\n//# sourceURL=webpack://Quill/./blots/break.js?\");\n\n/***/ }),\n\n/***/ \"./blots/container.js\":\n/*!****************************!*\\\n  !*** ./blots/container.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nclass Container extends _parchment.ContainerBlot {}\\n\\nexports.default = Container;\\n\\n//# sourceURL=webpack://Quill/./blots/container.js?\");\n\n/***/ }),\n\n/***/ \"./blots/cursor.js\":\n/*!*************************!*\\\n  !*** ./blots/cursor.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _text = __webpack_require__(/*! ./text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Cursor extends _parchment.EmbedBlot {\\n  static value() {\\n    return undefined;\\n  }\\n\\n  constructor(scroll, domNode, selection) {\\n    super(scroll, domNode);\\n    this.selection = selection;\\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\\n    this.domNode.appendChild(this.textNode);\\n    this.savedLength = 0;\\n  }\\n\\n  detach() {\\n    // super.detach() will also clear domNode.__blot\\n    if (this.parent != null) this.parent.removeChild(this);\\n  }\\n\\n  format(name, value) {\\n    if (this.savedLength !== 0) {\\n      super.format(name, value);\\n      return;\\n    }\\n    let target = this;\\n    let index = 0;\\n    while (target != null && target.statics.scope !== _parchment.Scope.BLOCK_BLOT) {\\n      index += target.offset(target.parent);\\n      target = target.parent;\\n    }\\n    if (target != null) {\\n      this.savedLength = Cursor.CONTENTS.length;\\n      target.optimize();\\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\\n      this.savedLength = 0;\\n    }\\n  }\\n\\n  index(node, offset) {\\n    if (node === this.textNode) return 0;\\n    return super.index(node, offset);\\n  }\\n\\n  length() {\\n    return this.savedLength;\\n  }\\n\\n  position() {\\n    return [this.textNode, this.textNode.data.length];\\n  }\\n\\n  remove() {\\n    super.remove();\\n    this.parent = null;\\n  }\\n\\n  restore() {\\n    if (this.selection.composing || this.parent == null) return null;\\n    const range = this.selection.getNativeRange();\\n    // Link format will insert text outside of anchor tag\\n    while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {\\n      this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);\\n    }\\n\\n    const prevTextBlot = this.prev instanceof _text2.default ? this.prev : null;\\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\\n    const nextTextBlot = this.next instanceof _text2.default ? this.next : null;\\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\\n    const textNode = this.textNode;\\n    // take text from inside this blot and reset it\\n\\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\\n    textNode.data = Cursor.CONTENTS;\\n\\n    // proactively merge TextBlots around cursor so that optimization\\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\\n    // the user typed something.\\n    let mergedTextBlot;\\n    if (prevTextBlot) {\\n      mergedTextBlot = prevTextBlot;\\n      if (newText || nextTextBlot) {\\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\\n        if (nextTextBlot) {\\n          nextTextBlot.remove();\\n        }\\n      }\\n    } else if (nextTextBlot) {\\n      mergedTextBlot = nextTextBlot;\\n      nextTextBlot.insertAt(0, newText);\\n    } else {\\n      const newTextNode = document.createTextNode(newText);\\n      mergedTextBlot = this.scroll.create(newTextNode);\\n      this.parent.insertBefore(mergedTextBlot, this);\\n    }\\n\\n    this.remove();\\n    if (range) {\\n      // calculate selection to restore\\n      const remapOffset = (node, offset) => {\\n        if (prevTextBlot && node === prevTextBlot.domNode) {\\n          return offset;\\n        }\\n        if (node === textNode) {\\n          return prevTextLength + offset - 1;\\n        }\\n        if (nextTextBlot && node === nextTextBlot.domNode) {\\n          return prevTextLength + newText.length + offset;\\n        }\\n        return null;\\n      };\\n\\n      const start = remapOffset(range.start.node, range.start.offset);\\n      const end = remapOffset(range.end.node, range.end.offset);\\n      if (start !== null && end !== null) {\\n        return {\\n          startNode: mergedTextBlot.domNode,\\n          startOffset: start,\\n          endNode: mergedTextBlot.domNode,\\n          endOffset: end\\n        };\\n      }\\n    }\\n    return null;\\n  }\\n\\n  update(mutations, context) {\\n    if (mutations.some(mutation => {\\n      return mutation.type === 'characterData' && mutation.target === this.textNode;\\n    })) {\\n      const range = this.restore();\\n      if (range) context.range = range;\\n    }\\n  }\\n\\n  value() {\\n    return '';\\n  }\\n}\\nCursor.blotName = 'cursor';\\nCursor.className = 'ql-cursor';\\nCursor.tagName = 'span';\\nCursor.CONTENTS = '\\\\uFEFF'; // Zero width no break space\\n\\nexports.default = Cursor;\\n\\n//# sourceURL=webpack://Quill/./blots/cursor.js?\");\n\n/***/ }),\n\n/***/ \"./blots/embed.js\":\n/*!************************!*\\\n  !*** ./blots/embed.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _text = __webpack_require__(/*! ./text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst GUARD_TEXT = '\\\\uFEFF';\\n\\nclass Embed extends _parchment.EmbedBlot {\\n  constructor(scroll, node) {\\n    super(scroll, node);\\n    this.contentNode = document.createElement('span');\\n    this.contentNode.setAttribute('contenteditable', false);\\n    Array.from(this.domNode.childNodes).forEach(childNode => {\\n      this.contentNode.appendChild(childNode);\\n    });\\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\\n    this.domNode.appendChild(this.leftGuard);\\n    this.domNode.appendChild(this.contentNode);\\n    this.domNode.appendChild(this.rightGuard);\\n  }\\n\\n  index(node, offset) {\\n    if (node === this.leftGuard) return 0;\\n    if (node === this.rightGuard) return 1;\\n    return super.index(node, offset);\\n  }\\n\\n  restore(node) {\\n    let range;\\n    let textNode;\\n    const text = node.data.split(GUARD_TEXT).join('');\\n    if (node === this.leftGuard) {\\n      if (this.prev instanceof _text2.default) {\\n        const prevLength = this.prev.length();\\n        this.prev.insertAt(prevLength, text);\\n        range = {\\n          startNode: this.prev.domNode,\\n          startOffset: prevLength + text.length\\n        };\\n      } else {\\n        textNode = document.createTextNode(text);\\n        this.parent.insertBefore(this.scroll.create(textNode), this);\\n        range = {\\n          startNode: textNode,\\n          startOffset: text.length\\n        };\\n      }\\n    } else if (node === this.rightGuard) {\\n      if (this.next instanceof _text2.default) {\\n        this.next.insertAt(0, text);\\n        range = {\\n          startNode: this.next.domNode,\\n          startOffset: text.length\\n        };\\n      } else {\\n        textNode = document.createTextNode(text);\\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\\n        range = {\\n          startNode: textNode,\\n          startOffset: text.length\\n        };\\n      }\\n    }\\n    node.data = GUARD_TEXT;\\n    return range;\\n  }\\n\\n  update(mutations, context) {\\n    mutations.forEach(mutation => {\\n      if (mutation.type === 'characterData' && (mutation.target === this.leftGuard || mutation.target === this.rightGuard)) {\\n        const range = this.restore(mutation.target);\\n        if (range) context.range = range;\\n      }\\n    });\\n  }\\n}\\n\\nexports.default = Embed;\\n\\n//# sourceURL=webpack://Quill/./blots/embed.js?\");\n\n/***/ }),\n\n/***/ \"./blots/inline.js\":\n/*!*************************!*\\\n  !*** ./blots/inline.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _break = __webpack_require__(/*! ./break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _text = __webpack_require__(/*! ./text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Inline extends _parchment.InlineBlot {\\n  static compare(self, other) {\\n    const selfIndex = Inline.order.indexOf(self);\\n    const otherIndex = Inline.order.indexOf(other);\\n    if (selfIndex >= 0 || otherIndex >= 0) {\\n      return selfIndex - otherIndex;\\n    }\\n    if (self === other) {\\n      return 0;\\n    }\\n    if (self < other) {\\n      return -1;\\n    }\\n    return 1;\\n  }\\n\\n  formatAt(index, length, name, value) {\\n    if (Inline.compare(this.statics.blotName, name) < 0 && this.scroll.query(name, _parchment.Scope.BLOT)) {\\n      const blot = this.isolate(index, length);\\n      if (value) {\\n        blot.wrap(name, value);\\n      }\\n    } else {\\n      super.formatAt(index, length, name, value);\\n    }\\n  }\\n\\n  optimize(context) {\\n    super.optimize(context);\\n    if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {\\n      const parent = this.parent.isolate(this.offset(), this.length());\\n      this.moveChildren(parent);\\n      parent.wrap(this);\\n    }\\n  }\\n}\\nInline.allowedChildren = [Inline, _break2.default, _parchment.EmbedBlot, _text2.default];\\n// Lower index means deeper in the DOM tree, since not found (-1) is for embeds\\nInline.order = ['cursor', 'inline', // Must be lower\\n'underline', 'strike', 'italic', 'bold', 'script', 'link', 'code'];\\n\\nexports.default = Inline;\\n\\n//# sourceURL=webpack://Quill/./blots/inline.js?\");\n\n/***/ }),\n\n/***/ \"./blots/scroll.js\":\n/*!*************************!*\\\n  !*** ./blots/scroll.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _emitter = __webpack_require__(/*! ../core/emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _block = __webpack_require__(/*! ./block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _break = __webpack_require__(/*! ./break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _container = __webpack_require__(/*! ./container */ \\\"./blots/container.js\\\");\\n\\nvar _container2 = _interopRequireDefault(_container);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction isLine(blot) {\\n  return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;\\n}\\n\\nclass Scroll extends _parchment.ScrollBlot {\\n  constructor(registry, domNode, { emitter }) {\\n    super(registry, domNode);\\n    this.emitter = emitter;\\n    this.batch = false;\\n    this.optimize();\\n    this.enable();\\n  }\\n\\n  batchStart() {\\n    if (!Array.isArray(this.batch)) {\\n      this.batch = [];\\n    }\\n  }\\n\\n  batchEnd() {\\n    const mutations = this.batch;\\n    this.batch = false;\\n    this.update(mutations);\\n  }\\n\\n  emitMount(blot) {\\n    this.emitter.emit(_emitter2.default.events.SCROLL_BLOT_MOUNT, blot);\\n  }\\n\\n  emitUnmount(blot) {\\n    this.emitter.emit(_emitter2.default.events.SCROLL_BLOT_UNMOUNT, blot);\\n  }\\n\\n  deleteAt(index, length) {\\n    var _line = this.line(index),\\n        _line2 = _slicedToArray(_line, 2);\\n\\n    const first = _line2[0],\\n          offset = _line2[1];\\n\\n    var _line3 = this.line(index + length),\\n        _line4 = _slicedToArray(_line3, 1);\\n\\n    const last = _line4[0];\\n\\n    super.deleteAt(index, length);\\n    if (last != null && first !== last && offset > 0) {\\n      if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {\\n        this.optimize();\\n        return;\\n      }\\n      const ref = last.children.head instanceof _break2.default ? null : last.children.head;\\n      first.moveChildren(last, ref);\\n      first.remove();\\n    }\\n    this.optimize();\\n  }\\n\\n  enable(enabled = true) {\\n    this.domNode.setAttribute('contenteditable', enabled);\\n  }\\n\\n  formatAt(index, length, format, value) {\\n    super.formatAt(index, length, format, value);\\n    this.optimize();\\n  }\\n\\n  insertAt(index, value, def) {\\n    if (index >= this.length()) {\\n      if (def == null || this.scroll.query(value, _parchment.Scope.BLOCK) == null) {\\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\\n        this.appendChild(blot);\\n        if (def == null && value.endsWith('\\\\n')) {\\n          blot.insertAt(0, value.slice(0, -1), def);\\n        } else {\\n          blot.insertAt(0, value, def);\\n        }\\n      } else {\\n        const embed = this.scroll.create(value, def);\\n        this.appendChild(embed);\\n      }\\n    } else {\\n      super.insertAt(index, value, def);\\n    }\\n    this.optimize();\\n  }\\n\\n  insertBefore(blot, ref) {\\n    if (blot.statics.scope === _parchment.Scope.INLINE_BLOT) {\\n      const wrapper = this.scroll.create(this.statics.defaultChild.blotName);\\n      wrapper.appendChild(blot);\\n      super.insertBefore(wrapper, ref);\\n    } else {\\n      super.insertBefore(blot, ref);\\n    }\\n  }\\n\\n  isEnabled() {\\n    return this.domNode.getAttribute('contenteditable') === 'true';\\n  }\\n\\n  leaf(index) {\\n    return this.path(index).pop() || [null, -1];\\n  }\\n\\n  line(index) {\\n    if (index === this.length()) {\\n      return this.line(index - 1);\\n    }\\n    return this.descendant(isLine, index);\\n  }\\n\\n  lines(index = 0, length = Number.MAX_VALUE) {\\n    const getLines = (blot, blotIndex, blotLength) => {\\n      let lines = [];\\n      let lengthLeft = blotLength;\\n      blot.children.forEachAt(blotIndex, blotLength, (child, childIndex, childLength) => {\\n        if (isLine(child)) {\\n          lines.push(child);\\n        } else if (child instanceof _parchment.ContainerBlot) {\\n          lines = lines.concat(getLines(child, childIndex, lengthLeft));\\n        }\\n        lengthLeft -= childLength;\\n      });\\n      return lines;\\n    };\\n    return getLines(this, index, length);\\n  }\\n\\n  optimize(mutations = [], context = {}) {\\n    if (this.batch) return;\\n    super.optimize(mutations, context);\\n    if (mutations.length > 0) {\\n      this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);\\n    }\\n  }\\n\\n  path(index) {\\n    return super.path(index).slice(1); // Exclude self\\n  }\\n\\n  remove() {\\n    // Never remove self\\n  }\\n\\n  update(mutations) {\\n    if (this.batch) {\\n      if (Array.isArray(mutations)) {\\n        this.batch = this.batch.concat(mutations);\\n      }\\n      return;\\n    }\\n    let source = _emitter2.default.sources.USER;\\n    if (typeof mutations === 'string') {\\n      source = mutations;\\n    }\\n    if (!Array.isArray(mutations)) {\\n      mutations = this.observer.takeRecords();\\n    }\\n    if (mutations.length > 0) {\\n      this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);\\n    }\\n    super.update(mutations.concat([])); // pass copy\\n    if (mutations.length > 0) {\\n      this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);\\n    }\\n  }\\n}\\nScroll.blotName = 'scroll';\\nScroll.className = 'ql-editor';\\nScroll.tagName = 'DIV';\\nScroll.defaultChild = _block2.default;\\nScroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];\\n\\nexports.default = Scroll;\\n\\n//# sourceURL=webpack://Quill/./blots/scroll.js?\");\n\n/***/ }),\n\n/***/ \"./blots/text.js\":\n/*!***********************!*\\\n  !*** ./blots/text.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.escapeText = exports.default = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nclass Text extends _parchment.TextBlot {}\\n\\nfunction escapeText(text) {\\n  return text.replace(/[&<>\\\"']/g, s => {\\n    // https://lodash.com/docs#escape\\n    const entityMap = {\\n      '&': '&amp;',\\n      '<': '&lt;',\\n      '>': '&gt;',\\n      '\\\"': '&quot;',\\n      \\\"'\\\": '&#39;'\\n    };\\n    return entityMap[s];\\n  });\\n}\\n\\nexports.default = Text;\\nexports.escapeText = escapeText;\\n\\n//# sourceURL=webpack://Quill/./blots/text.js?\");\n\n/***/ }),\n\n/***/ \"./core.js\":\n/*!*****************!*\\\n  !*** ./core.js ***!\n  \\*****************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _quill = __webpack_require__(/*! ./core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _block = __webpack_require__(/*! ./blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _break = __webpack_require__(/*! ./blots/break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _container = __webpack_require__(/*! ./blots/container */ \\\"./blots/container.js\\\");\\n\\nvar _container2 = _interopRequireDefault(_container);\\n\\nvar _cursor = __webpack_require__(/*! ./blots/cursor */ \\\"./blots/cursor.js\\\");\\n\\nvar _cursor2 = _interopRequireDefault(_cursor);\\n\\nvar _embed = __webpack_require__(/*! ./blots/embed */ \\\"./blots/embed.js\\\");\\n\\nvar _embed2 = _interopRequireDefault(_embed);\\n\\nvar _inline = __webpack_require__(/*! ./blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nvar _scroll = __webpack_require__(/*! ./blots/scroll */ \\\"./blots/scroll.js\\\");\\n\\nvar _scroll2 = _interopRequireDefault(_scroll);\\n\\nvar _text = __webpack_require__(/*! ./blots/text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nvar _clipboard = __webpack_require__(/*! ./modules/clipboard */ \\\"./modules/clipboard.js\\\");\\n\\nvar _clipboard2 = _interopRequireDefault(_clipboard);\\n\\nvar _history = __webpack_require__(/*! ./modules/history */ \\\"./modules/history.js\\\");\\n\\nvar _history2 = _interopRequireDefault(_history);\\n\\nvar _keyboard = __webpack_require__(/*! ./modules/keyboard */ \\\"./modules/keyboard.js\\\");\\n\\nvar _keyboard2 = _interopRequireDefault(_keyboard);\\n\\nvar _uploader = __webpack_require__(/*! ./modules/uploader */ \\\"./modules/uploader.js\\\");\\n\\nvar _uploader2 = _interopRequireDefault(_uploader);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n_quill2.default.register({\\n  'blots/block': _block2.default,\\n  'blots/block/embed': _block.BlockEmbed,\\n  'blots/break': _break2.default,\\n  'blots/container': _container2.default,\\n  'blots/cursor': _cursor2.default,\\n  'blots/embed': _embed2.default,\\n  'blots/inline': _inline2.default,\\n  'blots/scroll': _scroll2.default,\\n  'blots/text': _text2.default,\\n\\n  'modules/clipboard': _clipboard2.default,\\n  'modules/history': _history2.default,\\n  'modules/keyboard': _keyboard2.default,\\n  'modules/uploader': _uploader2.default\\n});\\n\\nexports.default = _quill2.default;\\n\\n//# sourceURL=webpack://Quill/./core.js?\");\n\n/***/ }),\n\n/***/ \"./core/editor.js\":\n/*!************************!*\\\n  !*** ./core/editor.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _clone = __webpack_require__(/*! clone */ \\\"./node_modules/clone/clone.js\\\");\\n\\nvar _clone2 = _interopRequireDefault(_clone);\\n\\nvar _deepEqual = __webpack_require__(/*! deep-equal */ \\\"./node_modules/deep-equal/index.js\\\");\\n\\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _selection = __webpack_require__(/*! ./selection */ \\\"./core/selection.js\\\");\\n\\nvar _cursor = __webpack_require__(/*! ../blots/cursor */ \\\"./blots/cursor.js\\\");\\n\\nvar _cursor2 = _interopRequireDefault(_cursor);\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _break = __webpack_require__(/*! ../blots/break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _text = __webpack_require__(/*! ../blots/text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\\n\\nconst ASCII = /^[ -~]*$/;\\n\\nclass Editor {\\n  constructor(scroll) {\\n    this.scroll = scroll;\\n    this.delta = this.getDelta();\\n  }\\n\\n  applyDelta(delta) {\\n    let consumeNextNewline = false;\\n    this.scroll.update();\\n    let scrollLength = this.scroll.length();\\n    this.scroll.batchStart();\\n    const normalizedDelta = normalizeDelta(delta);\\n    normalizedDelta.reduce((index, op) => {\\n      const length = op.retain || op.delete || op.insert.length || 1;\\n      let attributes = op.attributes || {};\\n      if (op.insert != null) {\\n        if (typeof op.insert === 'string') {\\n          let text = op.insert;\\n          if (text.endsWith('\\\\n') && consumeNextNewline) {\\n            consumeNextNewline = false;\\n            text = text.slice(0, -1);\\n          }\\n          if ((index >= scrollLength || this.scroll.descendant(_block.BlockEmbed, index)[0]) && !text.endsWith('\\\\n')) {\\n            consumeNextNewline = true;\\n          }\\n          this.scroll.insertAt(index, text);\\n\\n          var _scroll$line = this.scroll.line(index),\\n              _scroll$line2 = _slicedToArray(_scroll$line, 2);\\n\\n          const line = _scroll$line2[0],\\n                offset = _scroll$line2[1];\\n\\n          let formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));\\n          if (line instanceof _block2.default) {\\n            var _line$descendant = line.descendant(_parchment.LeafBlot, offset),\\n                _line$descendant2 = _slicedToArray(_line$descendant, 1);\\n\\n            const leaf = _line$descendant2[0];\\n\\n            formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));\\n          }\\n          attributes = _quillDelta.AttributeMap.diff(formats, attributes) || {};\\n        } else if (typeof op.insert === 'object') {\\n          const key = Object.keys(op.insert)[0]; // There should only be one key\\n          if (key == null) return index;\\n          this.scroll.insertAt(index, key, op.insert[key]);\\n        }\\n        scrollLength += length;\\n      }\\n      Object.keys(attributes).forEach(name => {\\n        this.scroll.formatAt(index, length, name, attributes[name]);\\n      });\\n      return index + length;\\n    }, 0);\\n    normalizedDelta.reduce((index, op) => {\\n      if (typeof op.delete === 'number') {\\n        this.scroll.deleteAt(index, op.delete);\\n        return index;\\n      }\\n      return index + (op.retain || op.insert.length || 1);\\n    }, 0);\\n    this.scroll.batchEnd();\\n    this.scroll.optimize();\\n    return this.update(normalizedDelta);\\n  }\\n\\n  deleteText(index, length) {\\n    this.scroll.deleteAt(index, length);\\n    return this.update(new _quillDelta2.default().retain(index).delete(length));\\n  }\\n\\n  formatLine(index, length, formats = {}) {\\n    this.scroll.update();\\n    Object.keys(formats).forEach(format => {\\n      this.scroll.lines(index, Math.max(length, 1)).forEach(line => {\\n        line.format(format, formats[format]);\\n      });\\n    });\\n    this.scroll.optimize();\\n    const delta = new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats));\\n    return this.update(delta);\\n  }\\n\\n  formatText(index, length, formats = {}) {\\n    Object.keys(formats).forEach(format => {\\n      this.scroll.formatAt(index, length, format, formats[format]);\\n    });\\n    const delta = new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats));\\n    return this.update(delta);\\n  }\\n\\n  getContents(index, length) {\\n    return this.delta.slice(index, index + length);\\n  }\\n\\n  getDelta() {\\n    return this.scroll.lines().reduce((delta, line) => {\\n      return delta.concat(line.delta());\\n    }, new _quillDelta2.default());\\n  }\\n\\n  getFormat(index, length = 0) {\\n    let lines = [];\\n    let leaves = [];\\n    if (length === 0) {\\n      this.scroll.path(index).forEach(path => {\\n        var _path = _slicedToArray(path, 1);\\n\\n        const blot = _path[0];\\n\\n        if (blot instanceof _block2.default) {\\n          lines.push(blot);\\n        } else if (blot instanceof _parchment.LeafBlot) {\\n          leaves.push(blot);\\n        }\\n      });\\n    } else {\\n      lines = this.scroll.lines(index, length);\\n      leaves = this.scroll.descendants(_parchment.LeafBlot, index, length);\\n    }\\n    const formatsArr = [lines, leaves].map(blots => {\\n      if (blots.length === 0) return {};\\n      let formats = (0, _block.bubbleFormats)(blots.shift());\\n      while (Object.keys(formats).length > 0) {\\n        const blot = blots.shift();\\n        if (blot == null) return formats;\\n        formats = combineFormats((0, _block.bubbleFormats)(blot), formats);\\n      }\\n      return formats;\\n    });\\n    return _extend2.default.apply(_extend2.default, formatsArr);\\n  }\\n\\n  getHTML(index, length) {\\n    var _scroll$line3 = this.scroll.line(index),\\n        _scroll$line4 = _slicedToArray(_scroll$line3, 2);\\n\\n    const line = _scroll$line4[0],\\n          lineOffset = _scroll$line4[1];\\n\\n    if (line.length() >= lineOffset + length) {\\n      return convertHTML(line, lineOffset, length, true);\\n    }\\n    return convertHTML(this.scroll, index, length, true);\\n  }\\n\\n  getText(index, length) {\\n    return this.getContents(index, length).filter(op => typeof op.insert === 'string').map(op => op.insert).join('');\\n  }\\n\\n  insertEmbed(index, embed, value) {\\n    this.scroll.insertAt(index, embed, value);\\n    return this.update(new _quillDelta2.default().retain(index).insert({ [embed]: value }));\\n  }\\n\\n  insertText(index, text, formats = {}) {\\n    text = text.replace(/\\\\r\\\\n/g, '\\\\n').replace(/\\\\r/g, '\\\\n');\\n    this.scroll.insertAt(index, text);\\n    Object.keys(formats).forEach(format => {\\n      this.scroll.formatAt(index, text.length, format, formats[format]);\\n    });\\n    return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));\\n  }\\n\\n  isBlank() {\\n    if (this.scroll.children.length === 0) return true;\\n    if (this.scroll.children.length > 1) return false;\\n    const block = this.scroll.children.head;\\n    if (block.statics.blotName !== _block2.default.blotName) return false;\\n    if (block.children.length > 1) return false;\\n    return block.children.head instanceof _break2.default;\\n  }\\n\\n  removeFormat(index, length) {\\n    const text = this.getText(index, length);\\n\\n    var _scroll$line5 = this.scroll.line(index + length),\\n        _scroll$line6 = _slicedToArray(_scroll$line5, 2);\\n\\n    const line = _scroll$line6[0],\\n          offset = _scroll$line6[1];\\n\\n    let suffixLength = 0;\\n    let suffix = new _quillDelta2.default();\\n    if (line != null) {\\n      suffixLength = line.length() - offset;\\n      suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\\\\n');\\n    }\\n    const contents = this.getContents(index, length + suffixLength);\\n    const diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));\\n    const delta = new _quillDelta2.default().retain(index).concat(diff);\\n    return this.applyDelta(delta);\\n  }\\n\\n  update(change, mutations = [], selectionInfo = undefined) {\\n    const oldDelta = this.delta;\\n    if (mutations.length === 1 && mutations[0].type === 'characterData' && mutations[0].target.data.match(ASCII) && this.scroll.find(mutations[0].target)) {\\n      // Optimization for character changes\\n      const textBlot = this.scroll.find(mutations[0].target);\\n      const formats = (0, _block.bubbleFormats)(textBlot);\\n      const index = textBlot.offset(this.scroll);\\n      const oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, '');\\n      const oldText = new _quillDelta2.default().insert(oldValue);\\n      const newText = new _quillDelta2.default().insert(textBlot.value());\\n      const relativeSelectionInfo = selectionInfo && {\\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\\n        newRange: shiftRange(selectionInfo.newRange, -index)\\n      };\\n      const diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, relativeSelectionInfo));\\n      change = diffDelta.reduce((delta, op) => {\\n        if (op.insert) {\\n          return delta.insert(op.insert, formats);\\n        }\\n        return delta.push(op);\\n      }, new _quillDelta2.default());\\n      this.delta = oldDelta.compose(change);\\n    } else {\\n      this.delta = this.getDelta();\\n      if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {\\n        change = oldDelta.diff(this.delta, selectionInfo);\\n      }\\n    }\\n    return change;\\n  }\\n}\\n\\nfunction convertListHTML(items, lastIndent, types) {\\n  if (items.length === 0) {\\n    var _getListType = getListType(types.pop()),\\n        _getListType2 = _slicedToArray(_getListType, 1);\\n\\n    const endTag = _getListType2[0];\\n\\n    if (lastIndent <= 0) {\\n      return `</li></${endTag}>`;\\n    }\\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\\n  }\\n\\n  var _items = _toArray(items),\\n      _items$ = _items[0];\\n\\n  const child = _items$.child,\\n        offset = _items$.offset,\\n        length = _items$.length,\\n        indent = _items$.indent,\\n        type = _items$.type,\\n        rest = _items.slice(1);\\n\\n  var _getListType3 = getListType(type),\\n      _getListType4 = _slicedToArray(_getListType3, 2);\\n\\n  const tag = _getListType4[0],\\n        attribute = _getListType4[1];\\n\\n  if (indent > lastIndent) {\\n    types.push(type);\\n    return `<${tag}><li${attribute}>${convertHTML(child, offset, length)}${convertListHTML(rest, indent, types)}`;\\n  }\\n  if (indent === lastIndent) {\\n    return `</li><li${attribute}>${convertHTML(child, offset, length)}${convertListHTML(rest, indent, types)}`;\\n  }\\n\\n  var _getListType5 = getListType(types.pop()),\\n      _getListType6 = _slicedToArray(_getListType5, 1);\\n\\n  const endTag = _getListType6[0];\\n\\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\\n}\\n\\nfunction convertHTML(blot, index, length, isRoot = false) {\\n  if (typeof blot.html === 'function') {\\n    return blot.html(index, length);\\n  }\\n  if (blot instanceof _text2.default) {\\n    return (0, _text.escapeText)(blot.value().slice(index, index + length));\\n  }\\n  if (blot.children) {\\n    // TODO fix API\\n    if (blot.statics.blotName === 'list-container') {\\n      const items = [];\\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\\n        const formats = child.formats();\\n        items.push({\\n          child,\\n          offset,\\n          length: childLength,\\n          indent: formats.indent || 0,\\n          type: formats.list\\n        });\\n      });\\n      return convertListHTML(items, -1, []);\\n    }\\n    const parts = [];\\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\\n      parts.push(convertHTML(child, offset, childLength));\\n    });\\n    if (isRoot || blot.statics.blotName === 'list') {\\n      return parts.join('');\\n    }\\n    var _blot$domNode = blot.domNode;\\n    const outerHTML = _blot$domNode.outerHTML,\\n          innerHTML = _blot$domNode.innerHTML;\\n\\n    var _outerHTML$split = outerHTML.split(`>${innerHTML}<`),\\n        _outerHTML$split2 = _slicedToArray(_outerHTML$split, 2);\\n\\n    const start = _outerHTML$split2[0],\\n          end = _outerHTML$split2[1];\\n    // TODO cleanup\\n\\n    if (start === '<table') {\\n      return `<table style=\\\"border: 1px solid #000;\\\">${parts.join('')}<${end}`;\\n    }\\n    return `${start}>${parts.join('')}<${end}`;\\n  }\\n  return blot.domNode.outerHTML;\\n}\\n\\nfunction combineFormats(formats, combined) {\\n  return Object.keys(combined).reduce((merged, name) => {\\n    if (formats[name] == null) return merged;\\n    if (combined[name] === formats[name]) {\\n      merged[name] = combined[name];\\n    } else if (Array.isArray(combined[name])) {\\n      if (combined[name].indexOf(formats[name]) < 0) {\\n        merged[name] = combined[name].concat([formats[name]]);\\n      }\\n    } else {\\n      merged[name] = [combined[name], formats[name]];\\n    }\\n    return merged;\\n  }, {});\\n}\\n\\nfunction getListType(type) {\\n  const tag = type === 'ordered' ? 'ol' : 'ul';\\n  switch (type) {\\n    case 'checked':\\n      return [tag, ' data-list=\\\"checked\\\"'];\\n    case 'unchecked':\\n      return [tag, ' data-list=\\\"unchecked\\\"'];\\n    default:\\n      return [tag, ''];\\n  }\\n}\\n\\nfunction normalizeDelta(delta) {\\n  return delta.reduce((normalizedDelta, op) => {\\n    if (typeof op.insert === 'string') {\\n      const text = op.insert.replace(/\\\\r\\\\n/g, '\\\\n').replace(/\\\\r/g, '\\\\n');\\n      return normalizedDelta.insert(text, op.attributes);\\n    }\\n    return normalizedDelta.push(op);\\n  }, new _quillDelta2.default());\\n}\\n\\nfunction shiftRange({ index, length }, amount) {\\n  return new _selection.Range(index + amount, length);\\n}\\n\\nexports.default = Editor;\\n\\n//# sourceURL=webpack://Quill/./core/editor.js?\");\n\n/***/ }),\n\n/***/ \"./core/emitter.js\":\n/*!*************************!*\\\n  !*** ./core/emitter.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _eventemitter = __webpack_require__(/*! eventemitter3 */ \\\"./node_modules/eventemitter3/index.js\\\");\\n\\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\\n\\nvar _instances = __webpack_require__(/*! ./instances */ \\\"./core/instances.js\\\");\\n\\nvar _instances2 = _interopRequireDefault(_instances);\\n\\nvar _logger = __webpack_require__(/*! ./logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill:events');\\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\\n\\nEVENTS.forEach(eventName => {\\n  document.addEventListener(eventName, (...args) => {\\n    Array.from(document.querySelectorAll('.ql-container')).forEach(node => {\\n      const quill = _instances2.default.get(node);\\n      if (quill && quill.emitter) {\\n        quill.emitter.handleDOM(...args);\\n      }\\n    });\\n  });\\n});\\n\\nclass Emitter extends _eventemitter2.default {\\n  constructor() {\\n    super();\\n    this.listeners = {};\\n    this.on('error', debug.error);\\n  }\\n\\n  emit(...args) {\\n    debug.log.call(debug, ...args);\\n    super.emit(...args);\\n  }\\n\\n  handleDOM(event, ...args) {\\n    (this.listeners[event.type] || []).forEach(({ node, handler }) => {\\n      if (event.target === node || node.contains(event.target)) {\\n        handler(event, ...args);\\n      }\\n    });\\n  }\\n\\n  listenDOM(eventName, node, handler) {\\n    if (!this.listeners[eventName]) {\\n      this.listeners[eventName] = [];\\n    }\\n    this.listeners[eventName].push({ node, handler });\\n  }\\n}\\n\\nEmitter.events = {\\n  EDITOR_CHANGE: 'editor-change',\\n  SCROLL_BEFORE_UPDATE: 'scroll-before-update',\\n  SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\\n  SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\\n  SCROLL_OPTIMIZE: 'scroll-optimize',\\n  SCROLL_UPDATE: 'scroll-update',\\n  SELECTION_CHANGE: 'selection-change',\\n  TEXT_CHANGE: 'text-change'\\n};\\nEmitter.sources = {\\n  API: 'api',\\n  SILENT: 'silent',\\n  USER: 'user'\\n};\\n\\nexports.default = Emitter;\\n\\n//# sourceURL=webpack://Quill/./core/emitter.js?\");\n\n/***/ }),\n\n/***/ \"./core/instances.js\":\n/*!***************************!*\\\n  !*** ./core/instances.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = new WeakMap();\\n\\n//# sourceURL=webpack://Quill/./core/instances.js?\");\n\n/***/ }),\n\n/***/ \"./core/logger.js\":\n/*!************************!*\\\n  !*** ./core/logger.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nconst levels = ['error', 'warn', 'log', 'info'];\\nlet level = 'warn';\\n\\nfunction debug(method, ...args) {\\n  if (levels.indexOf(method) <= levels.indexOf(level)) {\\n    console[method](...args); // eslint-disable-line no-console\\n  }\\n}\\n\\nfunction namespace(ns) {\\n  return levels.reduce((logger, method) => {\\n    logger[method] = debug.bind(console, method, ns);\\n    return logger;\\n  }, {});\\n}\\n\\nnamespace.level = newLevel => {\\n  level = newLevel;\\n};\\ndebug.level = namespace.level;\\n\\nexports.default = namespace;\\n\\n//# sourceURL=webpack://Quill/./core/logger.js?\");\n\n/***/ }),\n\n/***/ \"./core/module.js\":\n/*!************************!*\\\n  !*** ./core/module.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nclass Module {\\n  constructor(quill, options = {}) {\\n    this.quill = quill;\\n    this.options = options;\\n  }\\n}\\nModule.DEFAULTS = {};\\n\\nexports.default = Module;\\n\\n//# sourceURL=webpack://Quill/./core/module.js?\");\n\n/***/ }),\n\n/***/ \"./core/quill.js\":\n/*!***********************!*\\\n  !*** ./core/quill.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.overload = exports.expandConfig = exports.globalRegistry = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar Parchment = _interopRequireWildcard(_parchment);\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _editor = __webpack_require__(/*! ./editor */ \\\"./core/editor.js\\\");\\n\\nvar _editor2 = _interopRequireDefault(_editor);\\n\\nvar _emitter = __webpack_require__(/*! ./emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _module = __webpack_require__(/*! ./module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nvar _selection = __webpack_require__(/*! ./selection */ \\\"./core/selection.js\\\");\\n\\nvar _selection2 = _interopRequireDefault(_selection);\\n\\nvar _instances = __webpack_require__(/*! ./instances */ \\\"./core/instances.js\\\");\\n\\nvar _instances2 = _interopRequireDefault(_instances);\\n\\nvar _logger = __webpack_require__(/*! ./logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nvar _theme = __webpack_require__(/*! ./theme */ \\\"./core/theme.js\\\");\\n\\nvar _theme2 = _interopRequireDefault(_theme);\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill');\\n\\nconst globalRegistry = new Parchment.Registry();\\nParchment.ParentBlot.uiClass = 'ql-ui';\\n\\nclass Quill {\\n  static debug(limit) {\\n    if (limit === true) {\\n      limit = 'log';\\n    }\\n    _logger2.default.level(limit);\\n  }\\n\\n  static find(node) {\\n    return _instances2.default.get(node) || globalRegistry.find(node);\\n  }\\n\\n  static import(name) {\\n    if (this.imports[name] == null) {\\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\\n    }\\n    return this.imports[name];\\n  }\\n\\n  static register(path, target, overwrite = false) {\\n    if (typeof path !== 'string') {\\n      const name = path.attrName || path.blotName;\\n      if (typeof name === 'string') {\\n        // register(Blot | Attributor, overwrite)\\n        this.register(`formats/${name}`, path, target);\\n      } else {\\n        Object.keys(path).forEach(key => {\\n          this.register(key, path[key], target);\\n        });\\n      }\\n    } else {\\n      if (this.imports[path] != null && !overwrite) {\\n        debug.warn(`Overwriting ${path} with`, target);\\n      }\\n      this.imports[path] = target;\\n      if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {\\n        globalRegistry.register(target);\\n      }\\n      if (typeof target.register === 'function') {\\n        target.register(globalRegistry);\\n      }\\n    }\\n  }\\n\\n  constructor(container, options = {}) {\\n    this.options = expandConfig(container, options);\\n    this.container = this.options.container;\\n    if (this.container == null) {\\n      return debug.error('Invalid Quill container', container);\\n    }\\n    if (this.options.debug) {\\n      Quill.debug(this.options.debug);\\n    }\\n    const html = this.container.innerHTML.trim();\\n    this.container.classList.add('ql-container');\\n    this.container.innerHTML = '';\\n    _instances2.default.set(this.container, this);\\n    this.root = this.addContainer('ql-editor');\\n    this.root.addEventListener('dragstart', e => {\\n      e.preventDefault();\\n    });\\n    this.root.classList.add('ql-blank');\\n    this.root.setAttribute('data-gramm', false);\\n    this.scrollingContainer = this.options.scrollingContainer || this.root;\\n    this.emitter = new _emitter2.default();\\n    const ScrollBlot = this.options.registry.query(Parchment.ScrollBlot.blotName);\\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\\n      emitter: this.emitter\\n    });\\n    this.editor = new _editor2.default(this.scroll);\\n    this.selection = new _selection2.default(this.scroll, this.emitter);\\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\\n    this.keyboard = this.theme.addModule('keyboard');\\n    this.clipboard = this.theme.addModule('clipboard');\\n    this.history = this.theme.addModule('history');\\n    this.uploader = this.theme.addModule('uploader');\\n    this.theme.init();\\n    this.emitter.on(_emitter2.default.events.EDITOR_CHANGE, type => {\\n      if (type === _emitter2.default.events.TEXT_CHANGE) {\\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\\n      }\\n    });\\n    this.emitter.on(_emitter2.default.events.SCROLL_UPDATE, (source, mutations) => {\\n      const oldRange = this.selection.lastRange;\\n\\n      var _selection$getRange = this.selection.getRange(),\\n          _selection$getRange2 = _slicedToArray(_selection$getRange, 1);\\n\\n      const newRange = _selection$getRange2[0];\\n\\n      const selectionInfo = oldRange && newRange ? { oldRange, newRange } : undefined;\\n      modify.call(this, () => this.editor.update(null, mutations, selectionInfo), source);\\n    });\\n    const contents = this.clipboard.convert({\\n      html: `${html}<p><br></p>`,\\n      text: '\\\\n'\\n    });\\n    this.setContents(contents);\\n    this.history.clear();\\n    if (this.options.placeholder) {\\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\\n    }\\n    if (this.options.readOnly) {\\n      this.disable();\\n    }\\n    this.allowReadOnlyEdits = false;\\n  }\\n\\n  addContainer(container, refNode = null) {\\n    if (typeof container === 'string') {\\n      const className = container;\\n      container = document.createElement('div');\\n      container.classList.add(className);\\n    }\\n    this.container.insertBefore(container, refNode);\\n    return container;\\n  }\\n\\n  blur() {\\n    this.selection.setRange(null);\\n  }\\n\\n  deleteText(index, length, source) {\\n    var _overload = overload(index, length, source);\\n\\n    var _overload2 = _slicedToArray(_overload, 4);\\n\\n    index = _overload2[0];\\n    length = _overload2[1];\\n    source = _overload2[3];\\n\\n    return modify.call(this, () => {\\n      return this.editor.deleteText(index, length);\\n    }, source, index, -1 * length);\\n  }\\n\\n  disable() {\\n    this.enable(false);\\n  }\\n\\n  editReadOnly(modifier) {\\n    this.allowReadOnlyEdits = true;\\n    const value = modifier();\\n    this.allowReadOnlyEdits = false;\\n    return value;\\n  }\\n\\n  enable(enabled = true) {\\n    this.scroll.enable(enabled);\\n    this.container.classList.toggle('ql-disabled', !enabled);\\n  }\\n\\n  focus() {\\n    const scrollTop = this.scrollingContainer.scrollTop;\\n\\n    this.selection.focus();\\n    this.scrollingContainer.scrollTop = scrollTop;\\n    this.scrollIntoView();\\n  }\\n\\n  format(name, value, source = _emitter2.default.sources.API) {\\n    return modify.call(this, () => {\\n      const range = this.getSelection(true);\\n      let change = new _quillDelta2.default();\\n      if (range == null) return change;\\n      if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\\n        change = this.editor.formatLine(range.index, range.length, {\\n          [name]: value\\n        });\\n      } else if (range.length === 0) {\\n        this.selection.format(name, value);\\n        return change;\\n      } else {\\n        change = this.editor.formatText(range.index, range.length, {\\n          [name]: value\\n        });\\n      }\\n      this.setSelection(range, _emitter2.default.sources.SILENT);\\n      return change;\\n    }, source);\\n  }\\n\\n  formatLine(index, length, name, value, source) {\\n    let formats;\\n    // eslint-disable-next-line prefer-const\\n\\n    var _overload3 = overload(index, length, name, value, source);\\n\\n    var _overload4 = _slicedToArray(_overload3, 4);\\n\\n    index = _overload4[0];\\n    length = _overload4[1];\\n    formats = _overload4[2];\\n    source = _overload4[3];\\n\\n    return modify.call(this, () => {\\n      return this.editor.formatLine(index, length, formats);\\n    }, source, index, 0);\\n  }\\n\\n  formatText(index, length, name, value, source) {\\n    let formats;\\n    // eslint-disable-next-line prefer-const\\n\\n    var _overload5 = overload(index, length, name, value, source);\\n\\n    var _overload6 = _slicedToArray(_overload5, 4);\\n\\n    index = _overload6[0];\\n    length = _overload6[1];\\n    formats = _overload6[2];\\n    source = _overload6[3];\\n\\n    return modify.call(this, () => {\\n      return this.editor.formatText(index, length, formats);\\n    }, source, index, 0);\\n  }\\n\\n  getBounds(index, length = 0) {\\n    let bounds;\\n    if (typeof index === 'number') {\\n      bounds = this.selection.getBounds(index, length);\\n    } else {\\n      bounds = this.selection.getBounds(index.index, index.length);\\n    }\\n    const containerBounds = this.container.getBoundingClientRect();\\n    return {\\n      bottom: bounds.bottom - containerBounds.top,\\n      height: bounds.height,\\n      left: bounds.left - containerBounds.left,\\n      right: bounds.right - containerBounds.left,\\n      top: bounds.top - containerBounds.top,\\n      width: bounds.width\\n    };\\n  }\\n\\n  getContents(index = 0, length = this.getLength() - index) {\\n    var _overload7 = overload(index, length);\\n\\n    var _overload8 = _slicedToArray(_overload7, 2);\\n\\n    index = _overload8[0];\\n    length = _overload8[1];\\n\\n    return this.editor.getContents(index, length);\\n  }\\n\\n  getFormat(index = this.getSelection(true), length = 0) {\\n    if (typeof index === 'number') {\\n      return this.editor.getFormat(index, length);\\n    }\\n    return this.editor.getFormat(index.index, index.length);\\n  }\\n\\n  getIndex(blot) {\\n    return blot.offset(this.scroll);\\n  }\\n\\n  getLength() {\\n    return this.scroll.length();\\n  }\\n\\n  getLeaf(index) {\\n    return this.scroll.leaf(index);\\n  }\\n\\n  getLine(index) {\\n    return this.scroll.line(index);\\n  }\\n\\n  getLines(index = 0, length = Number.MAX_VALUE) {\\n    if (typeof index !== 'number') {\\n      return this.scroll.lines(index.index, index.length);\\n    }\\n    return this.scroll.lines(index, length);\\n  }\\n\\n  getModule(name) {\\n    return this.theme.modules[name];\\n  }\\n\\n  getSelection(focus = false) {\\n    if (focus) this.focus();\\n    this.update(); // Make sure we access getRange with editor in consistent state\\n    return this.selection.getRange()[0];\\n  }\\n\\n  getSemanticHTML(index = 0, length = this.getLength() - index) {\\n    var _overload9 = overload(index, length);\\n\\n    var _overload10 = _slicedToArray(_overload9, 2);\\n\\n    index = _overload10[0];\\n    length = _overload10[1];\\n\\n    return this.editor.getHTML(index, length);\\n  }\\n\\n  getText(index = 0, length = this.getLength() - index) {\\n    var _overload11 = overload(index, length);\\n\\n    var _overload12 = _slicedToArray(_overload11, 2);\\n\\n    index = _overload12[0];\\n    length = _overload12[1];\\n\\n    return this.editor.getText(index, length);\\n  }\\n\\n  hasFocus() {\\n    return this.selection.hasFocus();\\n  }\\n\\n  insertEmbed(index, embed, value, source = Quill.sources.API) {\\n    return modify.call(this, () => {\\n      return this.editor.insertEmbed(index, embed, value);\\n    }, source, index);\\n  }\\n\\n  insertText(index, text, name, value, source) {\\n    let formats;\\n    // eslint-disable-next-line prefer-const\\n\\n    var _overload13 = overload(index, 0, name, value, source);\\n\\n    var _overload14 = _slicedToArray(_overload13, 4);\\n\\n    index = _overload14[0];\\n    formats = _overload14[2];\\n    source = _overload14[3];\\n\\n    return modify.call(this, () => {\\n      return this.editor.insertText(index, text, formats);\\n    }, source, index, text.length);\\n  }\\n\\n  isEnabled() {\\n    return this.scroll.isEnabled();\\n  }\\n\\n  off(...args) {\\n    return this.emitter.off(...args);\\n  }\\n\\n  on(...args) {\\n    return this.emitter.on(...args);\\n  }\\n\\n  once(...args) {\\n    return this.emitter.once(...args);\\n  }\\n\\n  removeFormat(index, length, source) {\\n    var _overload15 = overload(index, length, source);\\n\\n    var _overload16 = _slicedToArray(_overload15, 4);\\n\\n    index = _overload16[0];\\n    length = _overload16[1];\\n    source = _overload16[3];\\n\\n    return modify.call(this, () => {\\n      return this.editor.removeFormat(index, length);\\n    }, source, index);\\n  }\\n\\n  scrollIntoView() {\\n    this.selection.scrollIntoView(this.scrollingContainer);\\n  }\\n\\n  setContents(delta, source = _emitter2.default.sources.API) {\\n    return modify.call(this, () => {\\n      delta = new _quillDelta2.default(delta);\\n      const length = this.getLength();\\n      const deleted = this.editor.deleteText(0, length);\\n      const applied = this.editor.applyDelta(delta);\\n      const lastOp = applied.ops[applied.ops.length - 1];\\n      if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\\\\n') {\\n        this.editor.deleteText(this.getLength() - 1, 1);\\n        applied.delete(1);\\n      }\\n      return deleted.compose(applied);\\n    }, source);\\n  }\\n\\n  setSelection(index, length, source) {\\n    if (index == null) {\\n      this.selection.setRange(null, length || Quill.sources.API);\\n    } else {\\n      var _overload17 = overload(index, length, source);\\n\\n      var _overload18 = _slicedToArray(_overload17, 4);\\n\\n      index = _overload18[0];\\n      length = _overload18[1];\\n      source = _overload18[3];\\n\\n      this.selection.setRange(new _selection.Range(Math.max(0, index), length), source);\\n      if (source !== _emitter2.default.sources.SILENT) {\\n        this.selection.scrollIntoView(this.scrollingContainer);\\n      }\\n    }\\n  }\\n\\n  setText(text, source = _emitter2.default.sources.API) {\\n    const delta = new _quillDelta2.default().insert(text);\\n    return this.setContents(delta, source);\\n  }\\n\\n  update(source = _emitter2.default.sources.USER) {\\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\\n    this.selection.update(source);\\n    // TODO this is usually undefined\\n    return change;\\n  }\\n\\n  updateContents(delta, source = _emitter2.default.sources.API) {\\n    return modify.call(this, () => {\\n      delta = new _quillDelta2.default(delta);\\n      return this.editor.applyDelta(delta, source);\\n    }, source, true);\\n  }\\n}\\nQuill.DEFAULTS = {\\n  bounds: null,\\n  modules: {},\\n  placeholder: '',\\n  readOnly: false,\\n  registry: globalRegistry,\\n  scrollingContainer: null,\\n  theme: 'default'\\n};\\nQuill.events = _emitter2.default.events;\\nQuill.sources = _emitter2.default.sources;\\n// eslint-disable-next-line no-undef\\nQuill.version =  false ? undefined : \\\"2.0.0-dev.3\\\";\\n\\nQuill.imports = {\\n  delta: _quillDelta2.default,\\n  parchment: Parchment,\\n  'core/module': _module2.default,\\n  'core/theme': _theme2.default\\n};\\n\\nfunction expandConfig(container, userConfig) {\\n  userConfig = (0, _extend2.default)(true, {\\n    container,\\n    modules: {\\n      clipboard: true,\\n      keyboard: true,\\n      history: true,\\n      uploader: true\\n    }\\n  }, userConfig);\\n  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\\n    userConfig.theme = _theme2.default;\\n  } else {\\n    userConfig.theme = Quill.import(`themes/${userConfig.theme}`);\\n    if (userConfig.theme == null) {\\n      throw new Error(`Invalid theme ${userConfig.theme}. Did you register it?`);\\n    }\\n  }\\n  const themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);\\n  [themeConfig, userConfig].forEach(config => {\\n    config.modules = config.modules || {};\\n    Object.keys(config.modules).forEach(module => {\\n      if (config.modules[module] === true) {\\n        config.modules[module] = {};\\n      }\\n    });\\n  });\\n  const moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));\\n  const moduleConfig = moduleNames.reduce((config, name) => {\\n    const moduleClass = Quill.import(`modules/${name}`);\\n    if (moduleClass == null) {\\n      debug.error(`Cannot load ${name} module. Are you sure you registered it?`);\\n    } else {\\n      config[name] = moduleClass.DEFAULTS || {};\\n    }\\n    return config;\\n  }, {});\\n  // Special case toolbar shorthand\\n  if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {\\n    userConfig.modules.toolbar = {\\n      container: userConfig.modules.toolbar\\n    };\\n  }\\n  userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);\\n  ['bounds', 'container', 'scrollingContainer'].forEach(key => {\\n    if (typeof userConfig[key] === 'string') {\\n      userConfig[key] = document.querySelector(userConfig[key]);\\n    }\\n  });\\n  userConfig.modules = Object.keys(userConfig.modules).reduce((config, name) => {\\n    if (userConfig.modules[name]) {\\n      config[name] = userConfig.modules[name];\\n    }\\n    return config;\\n  }, {});\\n  return userConfig;\\n}\\n\\n// Handle selection preservation and TEXT_CHANGE emission\\n// common to modification APIs\\nfunction modify(modifier, source, index, shift) {\\n  if (!this.isEnabled() && source === _emitter2.default.sources.USER && !this.allowReadOnlyEdits) {\\n    return new _quillDelta2.default();\\n  }\\n  let range = index == null ? null : this.getSelection();\\n  const oldDelta = this.editor.delta;\\n  const change = modifier();\\n  if (range != null) {\\n    if (index === true) {\\n      index = range.index; // eslint-disable-line prefer-destructuring\\n    }\\n    if (shift == null) {\\n      range = shiftRange(range, change, source);\\n    } else if (shift !== 0) {\\n      range = shiftRange(range, index, shift, source);\\n    }\\n    this.setSelection(range, _emitter2.default.sources.SILENT);\\n  }\\n  if (change.length() > 0) {\\n    const args = [_emitter2.default.events.TEXT_CHANGE, change, oldDelta, source];\\n    this.emitter.emit(_emitter2.default.events.EDITOR_CHANGE, ...args);\\n    if (source !== _emitter2.default.sources.SILENT) {\\n      this.emitter.emit(...args);\\n    }\\n  }\\n  return change;\\n}\\n\\nfunction overload(index, length, name, value, source) {\\n  let formats = {};\\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\\n    // Allow for throwaway end (used by insertText/insertEmbed)\\n    if (typeof length !== 'number') {\\n      source = value;\\n      value = name;\\n      name = length;\\n      length = index.length; // eslint-disable-line prefer-destructuring\\n      index = index.index; // eslint-disable-line prefer-destructuring\\n    } else {\\n      length = index.length; // eslint-disable-line prefer-destructuring\\n      index = index.index; // eslint-disable-line prefer-destructuring\\n    }\\n  } else if (typeof length !== 'number') {\\n    source = value;\\n    value = name;\\n    name = length;\\n    length = 0;\\n  }\\n  // Handle format being object, two format name/value strings or excluded\\n  if (typeof name === 'object') {\\n    formats = name;\\n    source = value;\\n  } else if (typeof name === 'string') {\\n    if (value != null) {\\n      formats[name] = value;\\n    } else {\\n      source = name;\\n    }\\n  }\\n  // Handle optional source\\n  source = source || _emitter2.default.sources.API;\\n  return [index, length, formats, source];\\n}\\n\\nfunction shiftRange(range, index, length, source) {\\n  if (range == null) return null;\\n  let start;\\n  let end;\\n  if (index instanceof _quillDelta2.default) {\\n    var _map = [range.index, range.index + range.length].map(pos => index.transformPosition(pos, source !== _emitter2.default.sources.USER));\\n\\n    var _map2 = _slicedToArray(_map, 2);\\n\\n    start = _map2[0];\\n    end = _map2[1];\\n  } else {\\n    var _map3 = [range.index, range.index + range.length].map(pos => {\\n      if (pos < index || pos === index && source === _emitter2.default.sources.USER) return pos;\\n      if (length >= 0) {\\n        return pos + length;\\n      }\\n      return Math.max(index, pos + length);\\n    });\\n\\n    var _map4 = _slicedToArray(_map3, 2);\\n\\n    start = _map4[0];\\n    end = _map4[1];\\n  }\\n  return new _selection.Range(start, end - start);\\n}\\n\\nexports.globalRegistry = globalRegistry;\\nexports.expandConfig = expandConfig;\\nexports.overload = overload;\\nexports.default = Quill;\\n\\n//# sourceURL=webpack://Quill/./core/quill.js?\");\n\n/***/ }),\n\n/***/ \"./core/selection.js\":\n/*!***************************!*\\\n  !*** ./core/selection.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.Range = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _clone = __webpack_require__(/*! clone */ \\\"./node_modules/clone/clone.js\\\");\\n\\nvar _clone2 = _interopRequireDefault(_clone);\\n\\nvar _deepEqual = __webpack_require__(/*! deep-equal */ \\\"./node_modules/deep-equal/index.js\\\");\\n\\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\\n\\nvar _emitter = __webpack_require__(/*! ./emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _logger = __webpack_require__(/*! ./logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill:selection');\\n\\nclass Range {\\n  constructor(index, length = 0) {\\n    this.index = index;\\n    this.length = length;\\n  }\\n}\\n\\nclass Selection {\\n  constructor(scroll, emitter) {\\n    this.emitter = emitter;\\n    this.scroll = scroll;\\n    this.composing = false;\\n    this.mouseDown = false;\\n    this.root = this.scroll.domNode;\\n    this.cursor = this.scroll.create('cursor', this);\\n    // savedRange is last non-null range\\n    this.savedRange = new Range(0, 0);\\n    this.lastRange = this.savedRange;\\n    this.handleComposition();\\n    this.handleDragging();\\n    this.emitter.listenDOM('selectionchange', document, () => {\\n      if (!this.mouseDown && !this.composing) {\\n        setTimeout(this.update.bind(this, _emitter2.default.sources.USER), 1);\\n      }\\n    });\\n    this.emitter.on(_emitter2.default.events.SCROLL_BEFORE_UPDATE, () => {\\n      if (!this.hasFocus()) return;\\n      const native = this.getNativeRange();\\n      if (native == null) return;\\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\\n      this.emitter.once(_emitter2.default.events.SCROLL_UPDATE, () => {\\n        try {\\n          if (this.root.contains(native.start.node) && this.root.contains(native.end.node)) {\\n            this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);\\n          }\\n          this.update(_emitter2.default.sources.SILENT);\\n        } catch (ignored) {\\n          // ignore\\n        }\\n      });\\n    });\\n    this.emitter.on(_emitter2.default.events.SCROLL_OPTIMIZE, (mutations, context) => {\\n      if (context.range) {\\n        var _context$range = context.range;\\n        const startNode = _context$range.startNode,\\n              startOffset = _context$range.startOffset,\\n              endNode = _context$range.endNode,\\n              endOffset = _context$range.endOffset;\\n\\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\\n        this.update(_emitter2.default.sources.SILENT);\\n      }\\n    });\\n    this.update(_emitter2.default.sources.SILENT);\\n  }\\n\\n  handleComposition() {\\n    this.root.addEventListener('compositionstart', () => {\\n      this.composing = true;\\n      this.scroll.batchStart();\\n    });\\n    this.root.addEventListener('compositionend', () => {\\n      this.scroll.batchEnd();\\n      this.composing = false;\\n      if (this.cursor.parent) {\\n        const range = this.cursor.restore();\\n        if (!range) return;\\n        setTimeout(() => {\\n          this.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);\\n        }, 1);\\n      }\\n    });\\n  }\\n\\n  handleDragging() {\\n    this.emitter.listenDOM('mousedown', document.body, () => {\\n      this.mouseDown = true;\\n    });\\n    this.emitter.listenDOM('mouseup', document.body, () => {\\n      this.mouseDown = false;\\n      this.update(_emitter2.default.sources.USER);\\n    });\\n  }\\n\\n  focus() {\\n    if (this.hasFocus()) return;\\n    this.root.focus();\\n    this.setRange(this.savedRange);\\n  }\\n\\n  format(format, value) {\\n    this.scroll.update();\\n    const nativeRange = this.getNativeRange();\\n    if (nativeRange == null || !nativeRange.native.collapsed || this.scroll.query(format, _parchment.Scope.BLOCK)) return;\\n    if (nativeRange.start.node !== this.cursor.textNode) {\\n      const blot = this.scroll.find(nativeRange.start.node, false);\\n      if (blot == null) return;\\n      // TODO Give blot ability to not split\\n      if (blot instanceof _parchment.LeafBlot) {\\n        const after = blot.split(nativeRange.start.offset);\\n        blot.parent.insertBefore(this.cursor, after);\\n      } else {\\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\\n      }\\n      this.cursor.attach();\\n    }\\n    this.cursor.format(format, value);\\n    this.scroll.optimize();\\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\\n    this.update();\\n  }\\n\\n  getBounds(index, length = 0) {\\n    const scrollLength = this.scroll.length();\\n    index = Math.min(index, scrollLength - 1);\\n    length = Math.min(index + length, scrollLength - 1) - index;\\n    let node;\\n\\n    var _scroll$leaf = this.scroll.leaf(index),\\n        _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2);\\n\\n    let leaf = _scroll$leaf2[0],\\n        offset = _scroll$leaf2[1];\\n\\n    if (leaf == null) return null;\\n\\n    var _leaf$position = leaf.position(offset, true);\\n\\n    var _leaf$position2 = _slicedToArray(_leaf$position, 2);\\n\\n    node = _leaf$position2[0];\\n    offset = _leaf$position2[1];\\n\\n    const range = document.createRange();\\n    if (length > 0) {\\n      range.setStart(node, offset);\\n\\n      var _scroll$leaf3 = this.scroll.leaf(index + length);\\n\\n      var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);\\n\\n      leaf = _scroll$leaf4[0];\\n      offset = _scroll$leaf4[1];\\n\\n      if (leaf == null) return null;\\n\\n      var _leaf$position3 = leaf.position(offset, true);\\n\\n      var _leaf$position4 = _slicedToArray(_leaf$position3, 2);\\n\\n      node = _leaf$position4[0];\\n      offset = _leaf$position4[1];\\n\\n      range.setEnd(node, offset);\\n      return range.getBoundingClientRect();\\n    }\\n    let side = 'left';\\n    let rect;\\n    if (node instanceof Text) {\\n      if (offset < node.data.length) {\\n        range.setStart(node, offset);\\n        range.setEnd(node, offset + 1);\\n      } else {\\n        range.setStart(node, offset - 1);\\n        range.setEnd(node, offset);\\n        side = 'right';\\n      }\\n      rect = range.getBoundingClientRect();\\n    } else {\\n      rect = leaf.domNode.getBoundingClientRect();\\n      if (offset > 0) side = 'right';\\n    }\\n    return {\\n      bottom: rect.top + rect.height,\\n      height: rect.height,\\n      left: rect[side],\\n      right: rect[side],\\n      top: rect.top,\\n      width: 0\\n    };\\n  }\\n\\n  getNativeRange() {\\n    const selection = document.getSelection();\\n    if (selection == null || selection.rangeCount <= 0) return null;\\n    const nativeRange = selection.getRangeAt(0);\\n    if (nativeRange == null) return null;\\n    const range = this.normalizeNative(nativeRange);\\n    debug.info('getNativeRange', range);\\n    return range;\\n  }\\n\\n  getRange() {\\n    const normalized = this.getNativeRange();\\n    if (normalized == null) return [null, null];\\n    const range = this.normalizedToRange(normalized);\\n    return [range, normalized];\\n  }\\n\\n  hasFocus() {\\n    return document.activeElement === this.root || contains(this.root, document.activeElement);\\n  }\\n\\n  normalizedToRange(range) {\\n    const positions = [[range.start.node, range.start.offset]];\\n    if (!range.native.collapsed) {\\n      positions.push([range.end.node, range.end.offset]);\\n    }\\n    const indexes = positions.map(position => {\\n      var _position = _slicedToArray(position, 2);\\n\\n      const node = _position[0],\\n            offset = _position[1];\\n\\n      const blot = this.scroll.find(node, true);\\n      const index = blot.offset(this.scroll);\\n      if (offset === 0) {\\n        return index;\\n      }\\n      if (blot instanceof _parchment.LeafBlot) {\\n        return index + blot.index(node, offset);\\n      }\\n      return index + blot.length();\\n    });\\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\\n    const start = Math.min(end, ...indexes);\\n    return new Range(start, end - start);\\n  }\\n\\n  normalizeNative(nativeRange) {\\n    if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {\\n      return null;\\n    }\\n    const range = {\\n      start: {\\n        node: nativeRange.startContainer,\\n        offset: nativeRange.startOffset\\n      },\\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\\n      native: nativeRange\\n    };\\n    [range.start, range.end].forEach(position => {\\n      let node = position.node,\\n          offset = position.offset;\\n\\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\\n        if (node.childNodes.length > offset) {\\n          node = node.childNodes[offset];\\n          offset = 0;\\n        } else if (node.childNodes.length === offset) {\\n          node = node.lastChild;\\n          if (node instanceof Text) {\\n            offset = node.data.length;\\n          } else if (node.childNodes.length > 0) {\\n            // Container case\\n            offset = node.childNodes.length;\\n          } else {\\n            // Embed case\\n            offset = node.childNodes.length + 1;\\n          }\\n        } else {\\n          break;\\n        }\\n      }\\n      position.node = node;\\n      position.offset = offset;\\n    });\\n    return range;\\n  }\\n\\n  rangeToNative(range) {\\n    const indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];\\n    const args = [];\\n    const scrollLength = this.scroll.length();\\n    indexes.forEach((index, i) => {\\n      index = Math.min(scrollLength - 1, index);\\n\\n      var _scroll$leaf5 = this.scroll.leaf(index),\\n          _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2);\\n\\n      const leaf = _scroll$leaf6[0],\\n            leafOffset = _scroll$leaf6[1];\\n\\n      var _leaf$position5 = leaf.position(leafOffset, i !== 0),\\n          _leaf$position6 = _slicedToArray(_leaf$position5, 2);\\n\\n      const node = _leaf$position6[0],\\n            offset = _leaf$position6[1];\\n\\n      args.push(node, offset);\\n    });\\n    if (args.length < 2) {\\n      return args.concat(args);\\n    }\\n    return args;\\n  }\\n\\n  scrollIntoView(scrollingContainer) {\\n    const range = this.lastRange;\\n    if (range == null) return;\\n    const bounds = this.getBounds(range.index, range.length);\\n    if (bounds == null) return;\\n    const limit = this.scroll.length() - 1;\\n\\n    var _scroll$line = this.scroll.line(Math.min(range.index, limit)),\\n        _scroll$line2 = _slicedToArray(_scroll$line, 1);\\n\\n    const first = _scroll$line2[0];\\n\\n    let last = first;\\n    if (range.length > 0) {\\n      var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));\\n\\n      var _scroll$line4 = _slicedToArray(_scroll$line3, 1);\\n\\n      last = _scroll$line4[0];\\n    }\\n    if (first == null || last == null) return;\\n    const scrollBounds = scrollingContainer.getBoundingClientRect();\\n    if (bounds.top < scrollBounds.top) {\\n      scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;\\n    } else if (bounds.bottom > scrollBounds.bottom) {\\n      scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;\\n    }\\n  }\\n\\n  setNativeRange(startNode, startOffset, endNode = startNode, endOffset = startOffset, force = false) {\\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\\n    if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {\\n      return;\\n    }\\n    const selection = document.getSelection();\\n    if (selection == null) return;\\n    if (startNode != null) {\\n      if (!this.hasFocus()) this.root.focus();\\n\\n      var _ref = this.getNativeRange() || {};\\n\\n      const native = _ref.native;\\n\\n      if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {\\n        if (startNode.tagName === 'BR') {\\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(startNode);\\n          startNode = startNode.parentNode;\\n        }\\n        if (endNode.tagName === 'BR') {\\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(endNode);\\n          endNode = endNode.parentNode;\\n        }\\n        const range = document.createRange();\\n        range.setStart(startNode, startOffset);\\n        range.setEnd(endNode, endOffset);\\n        selection.removeAllRanges();\\n        selection.addRange(range);\\n      }\\n    } else {\\n      selection.removeAllRanges();\\n      this.root.blur();\\n    }\\n  }\\n\\n  setRange(range, force = false, source = _emitter2.default.sources.API) {\\n    if (typeof force === 'string') {\\n      source = force;\\n      force = false;\\n    }\\n    debug.info('setRange', range);\\n    if (range != null) {\\n      const args = this.rangeToNative(range);\\n      this.setNativeRange(...args, force);\\n    } else {\\n      this.setNativeRange(null);\\n    }\\n    this.update(source);\\n  }\\n\\n  update(source = _emitter2.default.sources.USER) {\\n    const oldRange = this.lastRange;\\n\\n    var _getRange = this.getRange(),\\n        _getRange2 = _slicedToArray(_getRange, 2);\\n\\n    const lastRange = _getRange2[0],\\n          nativeRange = _getRange2[1];\\n\\n    this.lastRange = lastRange;\\n    if (this.lastRange != null) {\\n      this.savedRange = this.lastRange;\\n    }\\n    if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {\\n      if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {\\n        const range = this.cursor.restore();\\n        if (range) {\\n          this.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);\\n        }\\n      }\\n      const args = [_emitter2.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];\\n      this.emitter.emit(_emitter2.default.events.EDITOR_CHANGE, ...args);\\n      if (source !== _emitter2.default.sources.SILENT) {\\n        this.emitter.emit(...args);\\n      }\\n    }\\n  }\\n}\\n\\nfunction contains(parent, descendant) {\\n  try {\\n    // Firefox inserts inaccessible nodes around video elements\\n    descendant.parentNode; // eslint-disable-line no-unused-expressions\\n  } catch (e) {\\n    return false;\\n  }\\n  return parent.contains(descendant);\\n}\\n\\nexports.Range = Range;\\nexports.default = Selection;\\n\\n//# sourceURL=webpack://Quill/./core/selection.js?\");\n\n/***/ }),\n\n/***/ \"./core/theme.js\":\n/*!***********************!*\\\n  !*** ./core/theme.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nclass Theme {\\n  constructor(quill, options) {\\n    this.quill = quill;\\n    this.options = options;\\n    this.modules = {};\\n  }\\n\\n  init() {\\n    Object.keys(this.options.modules).forEach(name => {\\n      if (this.modules[name] == null) {\\n        this.addModule(name);\\n      }\\n    });\\n  }\\n\\n  addModule(name) {\\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\\n    this.modules[name] = new ModuleClass(this.quill, this.options.modules[name] || {});\\n    return this.modules[name];\\n  }\\n}\\nTheme.DEFAULTS = {\\n  modules: {}\\n};\\nTheme.themes = {\\n  default: Theme\\n};\\n\\nexports.default = Theme;\\n\\n//# sourceURL=webpack://Quill/./core/theme.js?\");\n\n/***/ }),\n\n/***/ \"./formats/align.js\":\n/*!**************************!*\\\n  !*** ./formats/align.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nconst config = {\\n  scope: _parchment.Scope.BLOCK,\\n  whitelist: ['right', 'center', 'justify']\\n};\\n\\nconst AlignAttribute = new _parchment.Attributor('align', 'align', config);\\nconst AlignClass = new _parchment.ClassAttributor('align', 'ql-align', config);\\nconst AlignStyle = new _parchment.StyleAttributor('align', 'text-align', config);\\n\\nexports.AlignAttribute = AlignAttribute;\\nexports.AlignClass = AlignClass;\\nexports.AlignStyle = AlignStyle;\\n\\n//# sourceURL=webpack://Quill/./formats/align.js?\");\n\n/***/ }),\n\n/***/ \"./formats/background.js\":\n/*!*******************************!*\\\n  !*** ./formats/background.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.BackgroundStyle = exports.BackgroundClass = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _color = __webpack_require__(/*! ./color */ \\\"./formats/color.js\\\");\\n\\nconst BackgroundClass = new _parchment.ClassAttributor('background', 'ql-bg', {\\n  scope: _parchment.Scope.INLINE\\n});\\nconst BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {\\n  scope: _parchment.Scope.INLINE\\n});\\n\\nexports.BackgroundClass = BackgroundClass;\\nexports.BackgroundStyle = BackgroundStyle;\\n\\n//# sourceURL=webpack://Quill/./formats/background.js?\");\n\n/***/ }),\n\n/***/ \"./formats/blockquote.js\":\n/*!*******************************!*\\\n  !*** ./formats/blockquote.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Blockquote extends _block2.default {}\\nBlockquote.blotName = 'blockquote';\\nBlockquote.tagName = 'blockquote';\\n\\nexports.default = Blockquote;\\n\\n//# sourceURL=webpack://Quill/./formats/blockquote.js?\");\n\n/***/ }),\n\n/***/ \"./formats/bold.js\":\n/*!*************************!*\\\n  !*** ./formats/bold.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Bold extends _inline2.default {\\n  static create() {\\n    return super.create();\\n  }\\n\\n  static formats() {\\n    return true;\\n  }\\n\\n  optimize(context) {\\n    super.optimize(context);\\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\\n      this.replaceWith(this.statics.blotName);\\n    }\\n  }\\n}\\nBold.blotName = 'bold';\\nBold.tagName = ['STRONG', 'B'];\\n\\nexports.default = Bold;\\n\\n//# sourceURL=webpack://Quill/./formats/bold.js?\");\n\n/***/ }),\n\n/***/ \"./formats/code.js\":\n/*!*************************!*\\\n  !*** ./formats/code.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.CodeBlockContainer = exports.Code = undefined;\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _break = __webpack_require__(/*! ../blots/break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _cursor = __webpack_require__(/*! ../blots/cursor */ \\\"./blots/cursor.js\\\");\\n\\nvar _cursor2 = _interopRequireDefault(_cursor);\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nvar _text = __webpack_require__(/*! ../blots/text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nvar _container = __webpack_require__(/*! ../blots/container */ \\\"./blots/container.js\\\");\\n\\nvar _container2 = _interopRequireDefault(_container);\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass CodeBlockContainer extends _container2.default {\\n  static create(value) {\\n    const domNode = super.create(value);\\n    domNode.setAttribute('spellcheck', false);\\n    return domNode;\\n  }\\n\\n  html(index, length) {\\n    const text = this.children.map(child => child.domNode.innerText).join('\\\\n').slice(index, index + length);\\n    return `<pre>${(0, _text.escapeText)(text)}</pre>`;\\n  }\\n}\\n\\nclass CodeBlock extends _block2.default {\\n  static register() {\\n    _quill2.default.register(CodeBlockContainer);\\n  }\\n}\\n\\nclass Code extends _inline2.default {}\\nCode.blotName = 'code';\\nCode.tagName = 'CODE';\\n\\nCodeBlock.blotName = 'code-block';\\nCodeBlock.className = 'ql-code-block';\\nCodeBlock.tagName = 'DIV';\\nCodeBlockContainer.blotName = 'code-block-container';\\nCodeBlockContainer.className = 'ql-code-block-container';\\nCodeBlockContainer.tagName = 'DIV';\\n\\nCodeBlockContainer.allowedChildren = [CodeBlock];\\n\\nCodeBlock.allowedChildren = [_text2.default, _break2.default, _cursor2.default];\\nCodeBlock.requiredContainer = CodeBlockContainer;\\nCodeBlock.TAB = '  ';\\n\\nexports.Code = Code;\\nexports.CodeBlockContainer = CodeBlockContainer;\\nexports.default = CodeBlock;\\n\\n//# sourceURL=webpack://Quill/./formats/code.js?\");\n\n/***/ }),\n\n/***/ \"./formats/color.js\":\n/*!**************************!*\\\n  !*** ./formats/color.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nclass ColorAttributor extends _parchment.StyleAttributor {\\n  value(domNode) {\\n    let value = super.value(domNode);\\n    if (!value.startsWith('rgb(')) return value;\\n    value = value.replace(/^[^\\\\d]+/, '').replace(/[^\\\\d]+$/, '');\\n    const hex = value.split(',').map(component => `00${parseInt(component, 10).toString(16)}`.slice(-2)).join('');\\n    return `#${hex}`;\\n  }\\n}\\n\\nconst ColorClass = new _parchment.ClassAttributor('color', 'ql-color', {\\n  scope: _parchment.Scope.INLINE\\n});\\nconst ColorStyle = new ColorAttributor('color', 'color', {\\n  scope: _parchment.Scope.INLINE\\n});\\n\\nexports.ColorAttributor = ColorAttributor;\\nexports.ColorClass = ColorClass;\\nexports.ColorStyle = ColorStyle;\\n\\n//# sourceURL=webpack://Quill/./formats/color.js?\");\n\n/***/ }),\n\n/***/ \"./formats/direction.js\":\n/*!******************************!*\\\n  !*** ./formats/direction.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nconst config = {\\n  scope: _parchment.Scope.BLOCK,\\n  whitelist: ['rtl']\\n};\\n\\nconst DirectionAttribute = new _parchment.Attributor('direction', 'dir', config);\\nconst DirectionClass = new _parchment.ClassAttributor('direction', 'ql-direction', config);\\nconst DirectionStyle = new _parchment.StyleAttributor('direction', 'direction', config);\\n\\nexports.DirectionAttribute = DirectionAttribute;\\nexports.DirectionClass = DirectionClass;\\nexports.DirectionStyle = DirectionStyle;\\n\\n//# sourceURL=webpack://Quill/./formats/direction.js?\");\n\n/***/ }),\n\n/***/ \"./formats/font.js\":\n/*!*************************!*\\\n  !*** ./formats/font.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FontClass = exports.FontStyle = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nconst config = {\\n  scope: _parchment.Scope.INLINE,\\n  whitelist: ['serif', 'monospace']\\n};\\n\\nconst FontClass = new _parchment.ClassAttributor('font', 'ql-font', config);\\n\\nclass FontStyleAttributor extends _parchment.StyleAttributor {\\n  value(node) {\\n    return super.value(node).replace(/[\\\"']/g, '');\\n  }\\n}\\n\\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\\n\\nexports.FontStyle = FontStyle;\\nexports.FontClass = FontClass;\\n\\n//# sourceURL=webpack://Quill/./formats/font.js?\");\n\n/***/ }),\n\n/***/ \"./formats/formula.js\":\n/*!****************************!*\\\n  !*** ./formats/formula.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _embed = __webpack_require__(/*! ../blots/embed */ \\\"./blots/embed.js\\\");\\n\\nvar _embed2 = _interopRequireDefault(_embed);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Formula extends _embed2.default {\\n  static create(value) {\\n    if (window.katex == null) {\\n      throw new Error('Formula module requires KaTeX.');\\n    }\\n    const node = super.create(value);\\n    if (typeof value === 'string') {\\n      window.katex.render(value, node, {\\n        throwOnError: false,\\n        errorColor: '#f00'\\n      });\\n      node.setAttribute('data-value', value);\\n    }\\n    return node;\\n  }\\n\\n  static value(domNode) {\\n    return domNode.getAttribute('data-value');\\n  }\\n\\n  html() {\\n    var _value = this.value();\\n\\n    const formula = _value.formula;\\n\\n    return `<span>${formula}</span>`;\\n  }\\n}\\nFormula.blotName = 'formula';\\nFormula.className = 'ql-formula';\\nFormula.tagName = 'SPAN';\\n\\nexports.default = Formula;\\n\\n//# sourceURL=webpack://Quill/./formats/formula.js?\");\n\n/***/ }),\n\n/***/ \"./formats/header.js\":\n/*!***************************!*\\\n  !*** ./formats/header.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Header extends _block2.default {\\n  static formats(domNode) {\\n    return this.tagName.indexOf(domNode.tagName) + 1;\\n  }\\n}\\nHeader.blotName = 'header';\\nHeader.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\\n\\nexports.default = Header;\\n\\n//# sourceURL=webpack://Quill/./formats/header.js?\");\n\n/***/ }),\n\n/***/ \"./formats/image.js\":\n/*!**************************!*\\\n  !*** ./formats/image.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _link = __webpack_require__(/*! ./link */ \\\"./formats/link.js\\\");\\n\\nconst ATTRIBUTES = ['alt', 'height', 'width'];\\n\\nclass Image extends _parchment.EmbedBlot {\\n  static create(value) {\\n    const node = super.create(value);\\n    if (typeof value === 'string') {\\n      node.setAttribute('src', this.sanitize(value));\\n    }\\n    return node;\\n  }\\n\\n  static formats(domNode) {\\n    return ATTRIBUTES.reduce((formats, attribute) => {\\n      if (domNode.hasAttribute(attribute)) {\\n        formats[attribute] = domNode.getAttribute(attribute);\\n      }\\n      return formats;\\n    }, {});\\n  }\\n\\n  static match(url) {\\n    return (/\\\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\\\/.+;base64/.test(url)\\n    );\\n  }\\n\\n  static register() {\\n    if (/Firefox/i.test(navigator.userAgent)) {\\n      setTimeout(() => {\\n        // Disable image resizing in Firefox\\n        document.execCommand('enableObjectResizing', false, false);\\n      }, 1);\\n    }\\n  }\\n\\n  static sanitize(url) {\\n    return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';\\n  }\\n\\n  static value(domNode) {\\n    return domNode.getAttribute('src');\\n  }\\n\\n  format(name, value) {\\n    if (ATTRIBUTES.indexOf(name) > -1) {\\n      if (value) {\\n        this.domNode.setAttribute(name, value);\\n      } else {\\n        this.domNode.removeAttribute(name);\\n      }\\n    } else {\\n      super.format(name, value);\\n    }\\n  }\\n}\\nImage.blotName = 'image';\\nImage.tagName = 'IMG';\\n\\nexports.default = Image;\\n\\n//# sourceURL=webpack://Quill/./formats/image.js?\");\n\n/***/ }),\n\n/***/ \"./formats/indent.js\":\n/*!***************************!*\\\n  !*** ./formats/indent.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nclass IndentAttributor extends _parchment.ClassAttributor {\\n  add(node, value) {\\n    if (value === '+1' || value === '-1') {\\n      const indent = this.value(node) || 0;\\n      value = value === '+1' ? indent + 1 : indent - 1;\\n    }\\n    if (value === 0) {\\n      this.remove(node);\\n      return true;\\n    }\\n    return super.add(node, value);\\n  }\\n\\n  canAdd(node, value) {\\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\\n  }\\n\\n  value(node) {\\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\\n  }\\n}\\n\\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\\n  scope: _parchment.Scope.BLOCK,\\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]\\n});\\n\\nexports.default = IndentClass;\\n\\n//# sourceURL=webpack://Quill/./formats/indent.js?\");\n\n/***/ }),\n\n/***/ \"./formats/italic.js\":\n/*!***************************!*\\\n  !*** ./formats/italic.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _bold = __webpack_require__(/*! ./bold */ \\\"./formats/bold.js\\\");\\n\\nvar _bold2 = _interopRequireDefault(_bold);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Italic extends _bold2.default {}\\nItalic.blotName = 'italic';\\nItalic.tagName = ['EM', 'I'];\\n\\nexports.default = Italic;\\n\\n//# sourceURL=webpack://Quill/./formats/italic.js?\");\n\n/***/ }),\n\n/***/ \"./formats/link.js\":\n/*!*************************!*\\\n  !*** ./formats/link.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.sanitize = exports.default = undefined;\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Link extends _inline2.default {\\n  static create(value) {\\n    const node = super.create(value);\\n    node.setAttribute('href', this.sanitize(value));\\n    node.setAttribute('target', '_blank');\\n    return node;\\n  }\\n\\n  static formats(domNode) {\\n    return domNode.getAttribute('href');\\n  }\\n\\n  static sanitize(url) {\\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\\n  }\\n\\n  format(name, value) {\\n    if (name !== this.statics.blotName || !value) {\\n      super.format(name, value);\\n    } else {\\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\\n    }\\n  }\\n}\\nLink.blotName = 'link';\\nLink.tagName = 'A';\\nLink.SANITIZED_URL = 'about:blank';\\nLink.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];\\n\\nfunction sanitize(url, protocols) {\\n  const anchor = document.createElement('a');\\n  anchor.href = url;\\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\\n  return protocols.indexOf(protocol) > -1;\\n}\\n\\nexports.default = Link;\\nexports.sanitize = sanitize;\\n\\n//# sourceURL=webpack://Quill/./formats/link.js?\");\n\n/***/ }),\n\n/***/ \"./formats/list.js\":\n/*!*************************!*\\\n  !*** ./formats/list.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.ListContainer = undefined;\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _container = __webpack_require__(/*! ../blots/container */ \\\"./blots/container.js\\\");\\n\\nvar _container2 = _interopRequireDefault(_container);\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass ListContainer extends _container2.default {}\\nListContainer.blotName = 'list-container';\\nListContainer.tagName = 'OL';\\n\\nclass ListItem extends _block2.default {\\n  static create(value) {\\n    const node = super.create();\\n    node.setAttribute('data-list', value);\\n    return node;\\n  }\\n\\n  static formats(domNode) {\\n    return domNode.getAttribute('data-list') || undefined;\\n  }\\n\\n  static register() {\\n    _quill2.default.register(ListContainer);\\n  }\\n\\n  constructor(scroll, domNode) {\\n    super(scroll, domNode);\\n    const ui = domNode.ownerDocument.createElement('span');\\n    const listEventHandler = e => {\\n      if (!scroll.isEnabled()) return;\\n      const format = this.statics.formats(domNode, scroll);\\n      if (format === 'checked') {\\n        this.format('list', 'unchecked');\\n        e.preventDefault();\\n      } else if (format === 'unchecked') {\\n        this.format('list', 'checked');\\n        e.preventDefault();\\n      }\\n    };\\n    ui.addEventListener('mousedown', listEventHandler);\\n    ui.addEventListener('touchstart', listEventHandler);\\n    this.attachUI(ui);\\n  }\\n\\n  format(name, value) {\\n    if (name === this.statics.blotName && value) {\\n      this.domNode.setAttribute('data-list', value);\\n    } else {\\n      super.format(name, value);\\n    }\\n  }\\n}\\nListItem.blotName = 'list';\\nListItem.tagName = 'LI';\\n\\nListContainer.allowedChildren = [ListItem];\\nListItem.requiredContainer = ListContainer;\\n\\nexports.ListContainer = ListContainer;\\nexports.default = ListItem;\\n\\n//# sourceURL=webpack://Quill/./formats/list.js?\");\n\n/***/ }),\n\n/***/ \"./formats/script.js\":\n/*!***************************!*\\\n  !*** ./formats/script.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Script extends _inline2.default {\\n  static create(value) {\\n    if (value === 'super') {\\n      return document.createElement('sup');\\n    }\\n    if (value === 'sub') {\\n      return document.createElement('sub');\\n    }\\n    return super.create(value);\\n  }\\n\\n  static formats(domNode) {\\n    if (domNode.tagName === 'SUB') return 'sub';\\n    if (domNode.tagName === 'SUP') return 'super';\\n    return undefined;\\n  }\\n}\\nScript.blotName = 'script';\\nScript.tagName = ['SUB', 'SUP'];\\n\\nexports.default = Script;\\n\\n//# sourceURL=webpack://Quill/./formats/script.js?\");\n\n/***/ }),\n\n/***/ \"./formats/size.js\":\n/*!*************************!*\\\n  !*** ./formats/size.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SizeStyle = exports.SizeClass = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nconst SizeClass = new _parchment.ClassAttributor('size', 'ql-size', {\\n  scope: _parchment.Scope.INLINE,\\n  whitelist: ['small', 'large', 'huge']\\n});\\nconst SizeStyle = new _parchment.StyleAttributor('size', 'font-size', {\\n  scope: _parchment.Scope.INLINE,\\n  whitelist: ['10px', '18px', '32px']\\n});\\n\\nexports.SizeClass = SizeClass;\\nexports.SizeStyle = SizeStyle;\\n\\n//# sourceURL=webpack://Quill/./formats/size.js?\");\n\n/***/ }),\n\n/***/ \"./formats/strike.js\":\n/*!***************************!*\\\n  !*** ./formats/strike.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Strike extends _inline2.default {}\\nStrike.blotName = 'strike';\\nStrike.tagName = 'S';\\n\\nexports.default = Strike;\\n\\n//# sourceURL=webpack://Quill/./formats/strike.js?\");\n\n/***/ }),\n\n/***/ \"./formats/table.js\":\n/*!**************************!*\\\n  !*** ./formats/table.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.tableId = exports.TableContainer = exports.TableBody = exports.TableRow = exports.TableCell = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _block2 = _interopRequireDefault(_block);\\n\\nvar _container = __webpack_require__(/*! ../blots/container */ \\\"./blots/container.js\\\");\\n\\nvar _container2 = _interopRequireDefault(_container);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass TableCell extends _block2.default {\\n  static create(value) {\\n    const node = super.create();\\n    if (value) {\\n      node.setAttribute('data-row', value);\\n    } else {\\n      node.setAttribute('data-row', tableId());\\n    }\\n    return node;\\n  }\\n\\n  static formats(domNode) {\\n    if (domNode.hasAttribute('data-row')) {\\n      return domNode.getAttribute('data-row');\\n    }\\n    return undefined;\\n  }\\n\\n  cellOffset() {\\n    if (this.parent) {\\n      return this.parent.children.indexOf(this);\\n    }\\n    return -1;\\n  }\\n\\n  format(name, value) {\\n    if (name === TableCell.blotName && value) {\\n      this.domNode.setAttribute('data-row', value);\\n    } else {\\n      super.format(name, value);\\n    }\\n  }\\n\\n  row() {\\n    return this.parent;\\n  }\\n\\n  rowOffset() {\\n    if (this.row()) {\\n      return this.row().rowOffset();\\n    }\\n    return -1;\\n  }\\n\\n  table() {\\n    return this.row() && this.row().table();\\n  }\\n}\\nTableCell.blotName = 'table';\\nTableCell.tagName = 'TD';\\n\\nclass TableRow extends _container2.default {\\n  checkMerge() {\\n    if (super.checkMerge() && this.next.children.head != null) {\\n      const thisHead = this.children.head.formats();\\n      const thisTail = this.children.tail.formats();\\n      const nextHead = this.next.children.head.formats();\\n      const nextTail = this.next.children.tail.formats();\\n      return thisHead.table === thisTail.table && thisHead.table === nextHead.table && thisHead.table === nextTail.table;\\n    }\\n    return false;\\n  }\\n\\n  optimize(...args) {\\n    super.optimize(...args);\\n    this.children.forEach(child => {\\n      if (child.next == null) return;\\n      const childFormats = child.formats();\\n      const nextFormats = child.next.formats();\\n      if (childFormats.table !== nextFormats.table) {\\n        const next = this.splitAfter(child);\\n        if (next) {\\n          next.optimize();\\n        }\\n        // We might be able to merge with prev now\\n        if (this.prev) {\\n          this.prev.optimize();\\n        }\\n      }\\n    });\\n  }\\n\\n  rowOffset() {\\n    if (this.parent) {\\n      return this.parent.children.indexOf(this);\\n    }\\n    return -1;\\n  }\\n\\n  table() {\\n    return this.parent && this.parent.parent;\\n  }\\n}\\nTableRow.blotName = 'table-row';\\nTableRow.tagName = 'TR';\\n\\nclass TableBody extends _container2.default {}\\nTableBody.blotName = 'table-body';\\nTableBody.tagName = 'TBODY';\\n\\nclass TableContainer extends _container2.default {\\n  balanceCells() {\\n    const rows = this.descendants(TableRow);\\n    const maxColumns = rows.reduce((max, row) => {\\n      return Math.max(row.children.length, max);\\n    }, 0);\\n    rows.forEach(row => {\\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\\n        let value;\\n        if (row.children.head != null) {\\n          value = TableCell.formats(row.children.head.domNode);\\n        }\\n        const blot = this.scroll.create(TableCell.blotName, value);\\n        row.appendChild(blot);\\n        blot.optimize(); // Add break blot\\n      });\\n    });\\n  }\\n\\n  cells(column) {\\n    return this.rows().map(row => row.children.at(column));\\n  }\\n\\n  deleteColumn(index) {\\n    var _descendant = this.descendant(TableBody),\\n        _descendant2 = _slicedToArray(_descendant, 1);\\n\\n    const body = _descendant2[0];\\n\\n    if (body == null || body.children.head == null) return;\\n    body.children.forEach(row => {\\n      const cell = row.children.at(index);\\n      if (cell != null) {\\n        cell.remove();\\n      }\\n    });\\n  }\\n\\n  insertColumn(index) {\\n    var _descendant3 = this.descendant(TableBody),\\n        _descendant4 = _slicedToArray(_descendant3, 1);\\n\\n    const body = _descendant4[0];\\n\\n    if (body == null || body.children.head == null) return;\\n    body.children.forEach(row => {\\n      const ref = row.children.at(index);\\n      const value = TableCell.formats(row.children.head.domNode);\\n      const cell = this.scroll.create(TableCell.blotName, value);\\n      row.insertBefore(cell, ref);\\n    });\\n  }\\n\\n  insertRow(index) {\\n    var _descendant5 = this.descendant(TableBody),\\n        _descendant6 = _slicedToArray(_descendant5, 1);\\n\\n    const body = _descendant6[0];\\n\\n    if (body == null || body.children.head == null) return;\\n    const id = tableId();\\n    const row = this.scroll.create(TableRow.blotName);\\n    body.children.head.children.forEach(() => {\\n      const cell = this.scroll.create(TableCell.blotName, id);\\n      row.appendChild(cell);\\n    });\\n    const ref = body.children.at(index);\\n    body.insertBefore(row, ref);\\n  }\\n\\n  rows() {\\n    const body = this.children.head;\\n    if (body == null) return [];\\n    return body.children.map(row => row);\\n  }\\n}\\nTableContainer.blotName = 'table-container';\\nTableContainer.tagName = 'TABLE';\\n\\nTableContainer.allowedChildren = [TableBody];\\nTableBody.requiredContainer = TableContainer;\\n\\nTableBody.allowedChildren = [TableRow];\\nTableRow.requiredContainer = TableBody;\\n\\nTableRow.allowedChildren = [TableCell];\\nTableCell.requiredContainer = TableRow;\\n\\nfunction tableId() {\\n  const id = Math.random().toString(36).slice(2, 6);\\n  return `row-${id}`;\\n}\\n\\nexports.TableCell = TableCell;\\nexports.TableRow = TableRow;\\nexports.TableBody = TableBody;\\nexports.TableContainer = TableContainer;\\nexports.tableId = tableId;\\n\\n//# sourceURL=webpack://Quill/./formats/table.js?\");\n\n/***/ }),\n\n/***/ \"./formats/underline.js\":\n/*!******************************!*\\\n  !*** ./formats/underline.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Underline extends _inline2.default {}\\nUnderline.blotName = 'underline';\\nUnderline.tagName = 'U';\\n\\nexports.default = Underline;\\n\\n//# sourceURL=webpack://Quill/./formats/underline.js?\");\n\n/***/ }),\n\n/***/ \"./formats/video.js\":\n/*!**************************!*\\\n  !*** ./formats/video.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _link = __webpack_require__(/*! ./link */ \\\"./formats/link.js\\\");\\n\\nvar _link2 = _interopRequireDefault(_link);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst ATTRIBUTES = ['height', 'width'];\\n\\nclass Video extends _block.BlockEmbed {\\n  static create(value) {\\n    const node = super.create(value);\\n    node.setAttribute('frameborder', '0');\\n    node.setAttribute('allowfullscreen', true);\\n    node.setAttribute('src', this.sanitize(value));\\n    return node;\\n  }\\n\\n  static formats(domNode) {\\n    return ATTRIBUTES.reduce((formats, attribute) => {\\n      if (domNode.hasAttribute(attribute)) {\\n        formats[attribute] = domNode.getAttribute(attribute);\\n      }\\n      return formats;\\n    }, {});\\n  }\\n\\n  static sanitize(url) {\\n    return _link2.default.sanitize(url); // eslint-disable-line import/no-named-as-default-member\\n  }\\n\\n  static value(domNode) {\\n    return domNode.getAttribute('src');\\n  }\\n\\n  format(name, value) {\\n    if (ATTRIBUTES.indexOf(name) > -1) {\\n      if (value) {\\n        this.domNode.setAttribute(name, value);\\n      } else {\\n        this.domNode.removeAttribute(name);\\n      }\\n    } else {\\n      super.format(name, value);\\n    }\\n  }\\n\\n  html() {\\n    var _value = this.value();\\n\\n    const video = _value.video;\\n\\n    return `<a href=\\\"${video}\\\">${video}</a>`;\\n  }\\n}\\nVideo.blotName = 'video';\\nVideo.className = 'ql-video';\\nVideo.tagName = 'IFRAME';\\n\\nexports.default = Video;\\n\\n//# sourceURL=webpack://Quill/./formats/video.js?\");\n\n/***/ }),\n\n/***/ \"./modules/clipboard.js\":\n/*!******************************!*\\\n  !*** ./modules/clipboard.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.traverse = exports.matchText = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _logger = __webpack_require__(/*! ../core/logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nvar _align = __webpack_require__(/*! ../formats/align */ \\\"./formats/align.js\\\");\\n\\nvar _background = __webpack_require__(/*! ../formats/background */ \\\"./formats/background.js\\\");\\n\\nvar _code = __webpack_require__(/*! ../formats/code */ \\\"./formats/code.js\\\");\\n\\nvar _code2 = _interopRequireDefault(_code);\\n\\nvar _color = __webpack_require__(/*! ../formats/color */ \\\"./formats/color.js\\\");\\n\\nvar _direction = __webpack_require__(/*! ../formats/direction */ \\\"./formats/direction.js\\\");\\n\\nvar _font = __webpack_require__(/*! ../formats/font */ \\\"./formats/font.js\\\");\\n\\nvar _size = __webpack_require__(/*! ../formats/size */ \\\"./formats/size.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill:clipboard');\\n\\nconst CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['ol, ul', matchList], ['pre', matchCodeBlock], ['tr', matchTable], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];\\n\\nconst ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce((memo, attr) => {\\n  memo[attr.keyName] = attr;\\n  return memo;\\n}, {});\\n\\nconst STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce((memo, attr) => {\\n  memo[attr.keyName] = attr;\\n  return memo;\\n}, {});\\n\\nclass Clipboard extends _module2.default {\\n  constructor(quill, options) {\\n    super(quill, options);\\n    this.quill.root.addEventListener('copy', e => this.onCaptureCopy(e, false));\\n    this.quill.root.addEventListener('cut', e => this.onCaptureCopy(e, true));\\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\\n    this.matchers = [];\\n    CLIPBOARD_CONFIG.concat(this.options.matchers).forEach(([selector, matcher]) => {\\n      this.addMatcher(selector, matcher);\\n    });\\n  }\\n\\n  addMatcher(selector, matcher) {\\n    this.matchers.push([selector, matcher]);\\n  }\\n\\n  convert({ html, text }, formats = {}) {\\n    if (formats[_code2.default.blotName]) {\\n      return new _quillDelta2.default().insert(text, {\\n        [_code2.default.blotName]: formats[_code2.default.blotName]\\n      });\\n    }\\n    if (!html) {\\n      return new _quillDelta2.default().insert(text || '');\\n    }\\n    const doc = new DOMParser().parseFromString(html, 'text/html');\\n    const container = doc.body;\\n    const nodeMatches = new WeakMap();\\n\\n    var _prepareMatching = this.prepareMatching(container, nodeMatches),\\n        _prepareMatching2 = _slicedToArray(_prepareMatching, 2);\\n\\n    const elementMatchers = _prepareMatching2[0],\\n          textMatchers = _prepareMatching2[1];\\n\\n    const delta = traverse(this.quill.scroll, container, elementMatchers, textMatchers, nodeMatches);\\n    // Remove trailing newline\\n    if (deltaEndsWith(delta, '\\\\n') && (delta.ops[delta.ops.length - 1].attributes == null || formats.table)) {\\n      return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));\\n    }\\n    return delta;\\n  }\\n\\n  dangerouslyPasteHTML(index, html, source = _quill2.default.sources.API) {\\n    if (typeof index === 'string') {\\n      const delta = this.convert({ html: index, text: '' });\\n      this.quill.setContents(delta, html);\\n      this.quill.setSelection(0, _quill2.default.sources.SILENT);\\n    } else {\\n      const paste = this.convert({ html, text: '' });\\n      this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);\\n      this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);\\n    }\\n  }\\n\\n  onCaptureCopy(e, isCut = false) {\\n    if (e.defaultPrevented) return;\\n    e.preventDefault();\\n\\n    var _quill$selection$getR = this.quill.selection.getRange(),\\n        _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1);\\n\\n    const range = _quill$selection$getR2[0];\\n\\n    if (range == null) return;\\n\\n    var _onCopy = this.onCopy(range, isCut);\\n\\n    const html = _onCopy.html,\\n          text = _onCopy.text;\\n\\n    e.clipboardData.setData('text/plain', text);\\n    e.clipboardData.setData('text/html', html);\\n    if (isCut) {\\n      this.quill.deleteText(range, _quill2.default.sources.USER);\\n    }\\n  }\\n\\n  onCapturePaste(e) {\\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\\n    e.preventDefault();\\n    const range = this.quill.getSelection(true);\\n    if (range == null) return;\\n    const html = e.clipboardData.getData('text/html');\\n    const text = e.clipboardData.getData('text/plain');\\n    const files = Array.from(e.clipboardData.files || []);\\n    if (!html && files.length > 0) {\\n      this.quill.uploader.upload(range, files);\\n    } else {\\n      this.onPaste(range, { html, text });\\n    }\\n  }\\n\\n  onCopy(range) {\\n    const text = this.quill.getText(range);\\n    const html = this.quill.getSemanticHTML(range);\\n    return { html, text };\\n  }\\n\\n  onPaste(range, { text, html }) {\\n    const formats = this.quill.getFormat(range.index);\\n    const pastedDelta = this.convert({ text, html }, formats);\\n    debug.log('onPaste', pastedDelta, { text, html });\\n    const delta = new _quillDelta2.default().retain(range.index).delete(range.length).concat(pastedDelta);\\n    this.quill.updateContents(delta, _quill2.default.sources.USER);\\n    // range.length contributes to delta.length()\\n    this.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);\\n    this.quill.scrollIntoView();\\n  }\\n\\n  prepareMatching(container, nodeMatches) {\\n    const elementMatchers = [];\\n    const textMatchers = [];\\n    this.matchers.forEach(pair => {\\n      var _pair = _slicedToArray(pair, 2);\\n\\n      const selector = _pair[0],\\n            matcher = _pair[1];\\n\\n      switch (selector) {\\n        case Node.TEXT_NODE:\\n          textMatchers.push(matcher);\\n          break;\\n        case Node.ELEMENT_NODE:\\n          elementMatchers.push(matcher);\\n          break;\\n        default:\\n          Array.from(container.querySelectorAll(selector)).forEach(node => {\\n            if (nodeMatches.has(node)) {\\n              const matches = nodeMatches.get(node);\\n              matches.push(matcher);\\n            } else {\\n              nodeMatches.set(node, [matcher]);\\n            }\\n          });\\n          break;\\n      }\\n    });\\n    return [elementMatchers, textMatchers];\\n  }\\n}\\nClipboard.DEFAULTS = {\\n  matchers: []\\n};\\n\\nfunction applyFormat(delta, format, value) {\\n  if (typeof format === 'object') {\\n    return Object.keys(format).reduce((newDelta, key) => {\\n      return applyFormat(newDelta, key, format[key]);\\n    }, delta);\\n  }\\n  return delta.reduce((newDelta, op) => {\\n    if (op.attributes && op.attributes[format]) {\\n      return newDelta.push(op);\\n    }\\n    return newDelta.insert(op.insert, (0, _extend2.default)({}, { [format]: value }, op.attributes));\\n  }, new _quillDelta2.default());\\n}\\n\\nfunction deltaEndsWith(delta, text) {\\n  let endText = '';\\n  for (let i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i // eslint-disable-line no-plusplus\\n  ) {\\n    const op = delta.ops[i];\\n    if (typeof op.insert !== 'string') break;\\n    endText = op.insert + endText;\\n  }\\n  return endText.slice(-1 * text.length) === text;\\n}\\n\\nfunction isLine(node) {\\n  if (node.childNodes.length === 0) return false; // Exclude embed blocks\\n  return ['address', 'article', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'iframe', 'li', 'main', 'nav', 'ol', 'output', 'p', 'pre', 'section', 'table', 'td', 'tr', 'ul', 'video'].includes(node.tagName.toLowerCase());\\n}\\n\\nconst preNodes = new WeakMap();\\nfunction isPre(node) {\\n  if (node == null) return false;\\n  if (!preNodes.has(node)) {\\n    if (node.tagName === 'PRE') {\\n      preNodes.set(node, true);\\n    } else {\\n      preNodes.set(node, isPre(node.parentNode));\\n    }\\n  }\\n  return preNodes.get(node);\\n}\\n\\nfunction traverse(scroll, node, elementMatchers, textMatchers, nodeMatches) {\\n  // Post-order\\n  if (node.nodeType === node.TEXT_NODE) {\\n    return textMatchers.reduce((delta, matcher) => {\\n      return matcher(node, delta, scroll);\\n    }, new _quillDelta2.default());\\n  }\\n  if (node.nodeType === node.ELEMENT_NODE) {\\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\\n      let childrenDelta = traverse(scroll, childNode, elementMatchers, textMatchers, nodeMatches);\\n      if (childNode.nodeType === node.ELEMENT_NODE) {\\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\\n          return matcher(childNode, reducedDelta, scroll);\\n        }, childrenDelta);\\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce((reducedDelta, matcher) => {\\n          return matcher(childNode, reducedDelta, scroll);\\n        }, childrenDelta);\\n      }\\n      return delta.concat(childrenDelta);\\n    }, new _quillDelta2.default());\\n  }\\n  return new _quillDelta2.default();\\n}\\n\\nfunction matchAlias(format, node, delta) {\\n  return applyFormat(delta, format, true);\\n}\\n\\nfunction matchAttributor(node, delta, scroll) {\\n  const attributes = _parchment.Attributor.keys(node);\\n  const classes = _parchment.ClassAttributor.keys(node);\\n  const styles = _parchment.StyleAttributor.keys(node);\\n  const formats = {};\\n  attributes.concat(classes).concat(styles).forEach(name => {\\n    let attr = scroll.query(name, _parchment.Scope.ATTRIBUTE);\\n    if (attr != null) {\\n      formats[attr.attrName] = attr.value(node);\\n      if (formats[attr.attrName]) return;\\n    }\\n    attr = ATTRIBUTE_ATTRIBUTORS[name];\\n    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\\n      formats[attr.attrName] = attr.value(node) || undefined;\\n    }\\n    attr = STYLE_ATTRIBUTORS[name];\\n    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\\n      attr = STYLE_ATTRIBUTORS[name];\\n      formats[attr.attrName] = attr.value(node) || undefined;\\n    }\\n  });\\n  if (Object.keys(formats).length > 0) {\\n    return applyFormat(delta, formats);\\n  }\\n  return delta;\\n}\\n\\nfunction matchBlot(node, delta, scroll) {\\n  const match = scroll.query(node);\\n  if (match == null) return delta;\\n  if (match.prototype instanceof _parchment.EmbedBlot) {\\n    const embed = {};\\n    const value = match.value(node);\\n    if (value != null) {\\n      embed[match.blotName] = value;\\n      return new _quillDelta2.default().insert(embed, match.formats(node, scroll));\\n    }\\n  } else {\\n    if (match.prototype instanceof _parchment.BlockBlot && !deltaEndsWith(delta, '\\\\n')) {\\n      delta.insert('\\\\n');\\n    }\\n    if (typeof match.formats === 'function') {\\n      return applyFormat(delta, match.blotName, match.formats(node, scroll));\\n    }\\n  }\\n  return delta;\\n}\\n\\nfunction matchBreak(node, delta) {\\n  if (!deltaEndsWith(delta, '\\\\n')) {\\n    delta.insert('\\\\n');\\n  }\\n  return delta;\\n}\\n\\nfunction matchCodeBlock(node, delta, scroll) {\\n  const match = scroll.query('code-block');\\n  const language = match ? match.formats(node, scroll) : true;\\n  return applyFormat(delta, 'code-block', language);\\n}\\n\\nfunction matchIgnore() {\\n  return new _quillDelta2.default();\\n}\\n\\nfunction matchIndent(node, delta, scroll) {\\n  const match = scroll.query(node);\\n  if (match == null || match.blotName !== 'list' || !deltaEndsWith(delta, '\\\\n')) {\\n    return delta;\\n  }\\n  let indent = -1;\\n  let parent = node.parentNode;\\n  while (parent != null) {\\n    if (['OL', 'UL'].includes(parent.tagName)) {\\n      indent += 1;\\n    }\\n    parent = parent.parentNode;\\n  }\\n  if (indent <= 0) return delta;\\n  return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent }));\\n}\\n\\nfunction matchList(node, delta) {\\n  const list = node.tagName === 'OL' ? 'ordered' : 'bullet';\\n  return applyFormat(delta, 'list', list);\\n}\\n\\nfunction matchNewline(node, delta) {\\n  if (!deltaEndsWith(delta, '\\\\n')) {\\n    if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {\\n      delta.insert('\\\\n');\\n    }\\n  }\\n  return delta;\\n}\\n\\nfunction matchStyles(node, delta) {\\n  const formats = {};\\n  const style = node.style || {};\\n  if (style.fontStyle === 'italic') {\\n    formats.italic = true;\\n  }\\n  if (style.fontWeight.startsWith('bold') || parseInt(style.fontWeight, 10) >= 700) {\\n    formats.bold = true;\\n  }\\n  if (Object.keys(formats).length > 0) {\\n    delta = applyFormat(delta, formats);\\n  }\\n  if (parseFloat(style.textIndent || 0) > 0) {\\n    // Could be 0.5in\\n    return new _quillDelta2.default().insert('\\\\t').concat(delta);\\n  }\\n  return delta;\\n}\\n\\nfunction matchTable(node, delta) {\\n  const table = node.parentNode.tagName === 'TABLE' ? node.parentNode : node.parentNode.parentNode;\\n  const rows = Array.from(table.querySelectorAll('tr'));\\n  const row = rows.indexOf(node) + 1;\\n  return applyFormat(delta, 'table', row);\\n}\\n\\nfunction matchText(node, delta) {\\n  let text = node.data;\\n  // Word represents empty line with <o:p>&nbsp;</o:p>\\n  if (node.parentNode.tagName === 'O:P') {\\n    return delta.insert(text.trim());\\n  }\\n  if (text.trim().length === 0) {\\n    return delta;\\n  }\\n  if (!isPre(node)) {\\n    const replacer = (collapse, match) => {\\n      const replaced = match.replace(/[^\\\\u00a0]/g, ''); // \\\\u00a0 is nbsp;\\n      return replaced.length < 1 && collapse ? ' ' : replaced;\\n    };\\n    text = text.replace(/\\\\r\\\\n/g, ' ').replace(/\\\\n/g, ' ');\\n    text = text.replace(/\\\\s\\\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\\n    if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {\\n      text = text.replace(/^\\\\s+/, replacer.bind(replacer, false));\\n    }\\n    if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {\\n      text = text.replace(/\\\\s+$/, replacer.bind(replacer, false));\\n    }\\n  }\\n  return delta.insert(text);\\n}\\n\\nexports.default = Clipboard;\\nexports.matchAttributor = matchAttributor;\\nexports.matchBlot = matchBlot;\\nexports.matchNewline = matchNewline;\\nexports.matchText = matchText;\\nexports.traverse = traverse;\\n\\n//# sourceURL=webpack://Quill/./modules/clipboard.js?\");\n\n/***/ }),\n\n/***/ \"./modules/history.js\":\n/*!****************************!*\\\n  !*** ./modules/history.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getLastChangeIndex = exports.default = undefined;\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass History extends _module2.default {\\n  constructor(quill, options) {\\n    super(quill, options);\\n    this.lastRecorded = 0;\\n    this.ignoreChange = false;\\n    this.clear();\\n    this.quill.on(_quill2.default.events.EDITOR_CHANGE, (eventName, delta, oldDelta, source) => {\\n      if (eventName !== _quill2.default.events.TEXT_CHANGE || this.ignoreChange) return;\\n      if (!this.options.userOnly || source === _quill2.default.sources.USER) {\\n        this.record(delta, oldDelta);\\n      } else {\\n        this.transform(delta);\\n      }\\n    });\\n    this.quill.keyboard.addBinding({ key: 'z', shortKey: true }, this.undo.bind(this));\\n    this.quill.keyboard.addBinding({ key: 'z', shortKey: true, shiftKey: true }, this.redo.bind(this));\\n    if (/Win/i.test(navigator.platform)) {\\n      this.quill.keyboard.addBinding({ key: 'y', shortKey: true }, this.redo.bind(this));\\n    }\\n  }\\n\\n  change(source, dest) {\\n    if (this.stack[source].length === 0) return;\\n    const delta = this.stack[source].pop();\\n    this.stack[dest].push(delta);\\n    this.lastRecorded = 0;\\n    this.ignoreChange = true;\\n    this.quill.updateContents(delta[source], _quill2.default.sources.USER);\\n    this.ignoreChange = false;\\n    const index = getLastChangeIndex(this.quill.scroll, delta[source]);\\n    this.quill.setSelection(index);\\n  }\\n\\n  clear() {\\n    this.stack = { undo: [], redo: [] };\\n  }\\n\\n  cutoff() {\\n    this.lastRecorded = 0;\\n  }\\n\\n  record(changeDelta, oldDelta) {\\n    if (changeDelta.ops.length === 0) return;\\n    this.stack.redo = [];\\n    let undoDelta = guessUndoDelta(changeDelta);\\n    if (undoDelta == null) {\\n      undoDelta = this.quill.getContents().diff(oldDelta);\\n    }\\n    const timestamp = Date.now();\\n    if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\\n      const delta = this.stack.undo.pop();\\n      undoDelta = undoDelta.compose(delta.undo);\\n      changeDelta = delta.redo.compose(changeDelta);\\n    } else {\\n      this.lastRecorded = timestamp;\\n    }\\n    this.stack.undo.push({\\n      redo: changeDelta,\\n      undo: undoDelta\\n    });\\n    if (this.stack.undo.length > this.options.maxStack) {\\n      this.stack.undo.shift();\\n    }\\n  }\\n\\n  redo() {\\n    this.change('redo', 'undo');\\n  }\\n\\n  transform(delta) {\\n    this.stack.undo.forEach(change => {\\n      change.undo = delta.transform(change.undo, true);\\n      change.redo = delta.transform(change.redo, true);\\n    });\\n    this.stack.redo.forEach(change => {\\n      change.undo = delta.transform(change.undo, true);\\n      change.redo = delta.transform(change.redo, true);\\n    });\\n  }\\n\\n  undo() {\\n    this.change('undo', 'redo');\\n  }\\n}\\nHistory.DEFAULTS = {\\n  delay: 1000,\\n  maxStack: 100,\\n  userOnly: false\\n};\\n\\nfunction endsWithNewlineChange(scroll, delta) {\\n  const lastOp = delta.ops[delta.ops.length - 1];\\n  if (lastOp == null) return false;\\n  if (lastOp.insert != null) {\\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\\\n');\\n  }\\n  if (lastOp.attributes != null) {\\n    return Object.keys(lastOp.attributes).some(attr => {\\n      return scroll.query(attr, _parchment.Scope.BLOCK) != null;\\n    });\\n  }\\n  return false;\\n}\\n\\nfunction getLastChangeIndex(scroll, delta) {\\n  const deleteLength = delta.reduce((length, op) => {\\n    return length + (op.delete || 0);\\n  }, 0);\\n  let changeIndex = delta.length() - deleteLength;\\n  if (endsWithNewlineChange(scroll, delta)) {\\n    changeIndex -= 1;\\n  }\\n  return changeIndex;\\n}\\n\\nfunction guessUndoDelta(delta) {\\n  const undoDelta = new _quillDelta2.default();\\n  let failed = false;\\n  delta.forEach(op => {\\n    if (op.insert) {\\n      undoDelta.delete(_quillDelta.Op.length(op));\\n    } else if (op.retain && op.attributes == null) {\\n      undoDelta.retain(op.retain);\\n    } else {\\n      failed = true;\\n      return false;\\n    }\\n    return true;\\n  });\\n  return failed ? null : undoDelta;\\n}\\n\\nexports.default = History;\\nexports.getLastChangeIndex = getLastChangeIndex;\\n\\n//# sourceURL=webpack://Quill/./modules/history.js?\");\n\n/***/ }),\n\n/***/ \"./modules/keyboard.js\":\n/*!*****************************!*\\\n  !*** ./modules/keyboard.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.normalize = exports.SHORTKEY = exports.default = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _clone = __webpack_require__(/*! clone */ \\\"./node_modules/clone/clone.js\\\");\\n\\nvar _clone2 = _interopRequireDefault(_clone);\\n\\nvar _deepEqual = __webpack_require__(/*! deep-equal */ \\\"./node_modules/deep-equal/index.js\\\");\\n\\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _logger = __webpack_require__(/*! ../core/logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill:keyboard');\\n\\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\\n\\nclass Keyboard extends _module2.default {\\n  static match(evt, binding) {\\n    if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(key => {\\n      return !!binding[key] !== evt[key] && binding[key] !== null;\\n    })) {\\n      return false;\\n    }\\n    return binding.key === evt.key || binding.key === evt.which;\\n  }\\n\\n  constructor(quill, options) {\\n    super(quill, options);\\n    this.bindings = {};\\n    Object.keys(this.options.bindings).forEach(name => {\\n      if (this.options.bindings[name]) {\\n        this.addBinding(this.options.bindings[name]);\\n      }\\n    });\\n    this.addBinding({ key: 'Enter', shiftKey: null }, handleEnter);\\n    this.addBinding({ key: 'Enter', metaKey: null, ctrlKey: null, altKey: null }, () => {});\\n    if (/Firefox/i.test(navigator.userAgent)) {\\n      // Need to handle delete and backspace for Firefox in the general case #1171\\n      this.addBinding({ key: 'Backspace' }, { collapsed: true }, handleBackspace);\\n      this.addBinding({ key: 'Delete' }, { collapsed: true }, handleDelete);\\n    } else {\\n      this.addBinding({ key: 'Backspace' }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);\\n      this.addBinding({ key: 'Delete' }, { collapsed: true, suffix: /^.?$/ }, handleDelete);\\n    }\\n    this.addBinding({ key: 'Backspace' }, { collapsed: false }, handleDeleteRange);\\n    this.addBinding({ key: 'Delete' }, { collapsed: false }, handleDeleteRange);\\n    this.addBinding({\\n      key: 'Backspace',\\n      altKey: null,\\n      ctrlKey: null,\\n      metaKey: null,\\n      shiftKey: null\\n    }, { collapsed: true, offset: 0 }, handleBackspace);\\n    this.listen();\\n  }\\n\\n  addBinding(keyBinding, context = {}, handler = {}) {\\n    const binding = normalize(keyBinding);\\n    if (binding == null) {\\n      debug.warn('Attempted to add invalid keyboard binding', binding);\\n      return;\\n    }\\n    if (typeof context === 'function') {\\n      context = { handler: context };\\n    }\\n    if (typeof handler === 'function') {\\n      handler = { handler };\\n    }\\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\\n    keys.forEach(key => {\\n      const singleBinding = (0, _extend2.default)({}, binding, { key }, context, handler);\\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\\n      this.bindings[singleBinding.key].push(singleBinding);\\n    });\\n  }\\n\\n  listen() {\\n    this.quill.root.addEventListener('keydown', evt => {\\n      if (evt.defaultPrevented) return;\\n      const bindings = (this.bindings[evt.key] || []).concat(this.bindings[evt.which] || []);\\n      const matches = bindings.filter(binding => Keyboard.match(evt, binding));\\n      if (matches.length === 0) return;\\n      const range = this.quill.getSelection();\\n      if (range == null || !this.quill.hasFocus()) return;\\n\\n      var _quill$getLine = this.quill.getLine(range.index),\\n          _quill$getLine2 = _slicedToArray(_quill$getLine, 2);\\n\\n      const line = _quill$getLine2[0],\\n            offset = _quill$getLine2[1];\\n\\n      var _quill$getLeaf = this.quill.getLeaf(range.index),\\n          _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2);\\n\\n      const leafStart = _quill$getLeaf2[0],\\n            offsetStart = _quill$getLeaf2[1];\\n\\n      var _ref = range.length === 0 ? [leafStart, offsetStart] : this.quill.getLeaf(range.index + range.length),\\n          _ref2 = _slicedToArray(_ref, 2);\\n\\n      const leafEnd = _ref2[0],\\n            offsetEnd = _ref2[1];\\n\\n      const prefixText = leafStart instanceof _parchment.TextBlot ? leafStart.value().slice(0, offsetStart) : '';\\n      const suffixText = leafEnd instanceof _parchment.TextBlot ? leafEnd.value().slice(offsetEnd) : '';\\n      const curContext = {\\n        collapsed: range.length === 0,\\n        empty: range.length === 0 && line.length() <= 1,\\n        format: this.quill.getFormat(range),\\n        line,\\n        offset,\\n        prefix: prefixText,\\n        suffix: suffixText,\\n        event: evt\\n      };\\n      const prevented = matches.some(binding => {\\n        if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) {\\n          return false;\\n        }\\n        if (binding.empty != null && binding.empty !== curContext.empty) {\\n          return false;\\n        }\\n        if (binding.offset != null && binding.offset !== curContext.offset) {\\n          return false;\\n        }\\n        if (Array.isArray(binding.format)) {\\n          // any format is present\\n          if (binding.format.every(name => curContext.format[name] == null)) {\\n            return false;\\n          }\\n        } else if (typeof binding.format === 'object') {\\n          // all formats must match\\n          if (!Object.keys(binding.format).every(name => {\\n            if (binding.format[name] === true) return curContext.format[name] != null;\\n            if (binding.format[name] === false) return curContext.format[name] == null;\\n            return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);\\n          })) {\\n            return false;\\n          }\\n        }\\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\\n          return false;\\n        }\\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\\n          return false;\\n        }\\n        return binding.handler.call(this, range, curContext, binding) !== true;\\n      });\\n      if (prevented) {\\n        evt.preventDefault();\\n      }\\n    });\\n  }\\n}\\n\\nKeyboard.DEFAULTS = {\\n  bindings: {\\n    bold: makeFormatHandler('bold'),\\n    italic: makeFormatHandler('italic'),\\n    underline: makeFormatHandler('underline'),\\n    indent: {\\n      // highlight tab or tab at beginning of list, indent or blockquote\\n      key: 'Tab',\\n      format: ['blockquote', 'indent', 'list'],\\n      handler(range, context) {\\n        if (context.collapsed && context.offset !== 0) return true;\\n        this.quill.format('indent', '+1', _quill2.default.sources.USER);\\n        return false;\\n      }\\n    },\\n    outdent: {\\n      key: 'Tab',\\n      shiftKey: true,\\n      format: ['blockquote', 'indent', 'list'],\\n      // highlight tab or tab at beginning of list, indent or blockquote\\n      handler(range, context) {\\n        if (context.collapsed && context.offset !== 0) return true;\\n        this.quill.format('indent', '-1', _quill2.default.sources.USER);\\n        return false;\\n      }\\n    },\\n    'outdent backspace': {\\n      key: 'Backspace',\\n      collapsed: true,\\n      shiftKey: null,\\n      metaKey: null,\\n      ctrlKey: null,\\n      altKey: null,\\n      format: ['indent', 'list'],\\n      offset: 0,\\n      handler(range, context) {\\n        if (context.format.indent != null) {\\n          this.quill.format('indent', '-1', _quill2.default.sources.USER);\\n        } else if (context.format.list != null) {\\n          this.quill.format('list', false, _quill2.default.sources.USER);\\n        }\\n      }\\n    },\\n    'indent code-block': makeCodeBlockHandler(true),\\n    'outdent code-block': makeCodeBlockHandler(false),\\n    'remove tab': {\\n      key: 'Tab',\\n      shiftKey: true,\\n      collapsed: true,\\n      prefix: /\\\\t$/,\\n      handler(range) {\\n        this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);\\n      }\\n    },\\n    tab: {\\n      key: 'Tab',\\n      handler(range, context) {\\n        if (context.format.table) return true;\\n        this.quill.history.cutoff();\\n        const delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert('\\\\t');\\n        this.quill.updateContents(delta, _quill2.default.sources.USER);\\n        this.quill.history.cutoff();\\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\\n        return false;\\n      }\\n    },\\n    'blockquote empty enter': {\\n      key: 'Enter',\\n      collapsed: true,\\n      format: ['blockquote'],\\n      empty: true,\\n      handler() {\\n        this.quill.format('blockquote', false, _quill2.default.sources.USER);\\n      }\\n    },\\n    'list empty enter': {\\n      key: 'Enter',\\n      collapsed: true,\\n      format: ['list'],\\n      empty: true,\\n      handler(range, context) {\\n        const formats = { list: false };\\n        if (context.format.indent) {\\n          formats.indent = false;\\n        }\\n        this.quill.formatLine(range.index, range.length, formats, _quill2.default.sources.USER);\\n      }\\n    },\\n    'checklist enter': {\\n      key: 'Enter',\\n      collapsed: true,\\n      format: { list: 'checked' },\\n      handler(range) {\\n        var _quill$getLine3 = this.quill.getLine(range.index),\\n            _quill$getLine4 = _slicedToArray(_quill$getLine3, 2);\\n\\n        const line = _quill$getLine4[0],\\n              offset = _quill$getLine4[1];\\n\\n        const formats = (0, _extend2.default)({}, line.formats(), { list: 'checked' });\\n        const delta = new _quillDelta2.default().retain(range.index).insert('\\\\n', formats).retain(line.length() - offset - 1).retain(1, { list: 'unchecked' });\\n        this.quill.updateContents(delta, _quill2.default.sources.USER);\\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\\n        this.quill.scrollIntoView();\\n      }\\n    },\\n    'header enter': {\\n      key: 'Enter',\\n      collapsed: true,\\n      format: ['header'],\\n      suffix: /^$/,\\n      handler(range, context) {\\n        var _quill$getLine5 = this.quill.getLine(range.index),\\n            _quill$getLine6 = _slicedToArray(_quill$getLine5, 2);\\n\\n        const line = _quill$getLine6[0],\\n              offset = _quill$getLine6[1];\\n\\n        const delta = new _quillDelta2.default().retain(range.index).insert('\\\\n', context.format).retain(line.length() - offset - 1).retain(1, { header: null });\\n        this.quill.updateContents(delta, _quill2.default.sources.USER);\\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\\n        this.quill.scrollIntoView();\\n      }\\n    },\\n    'table backspace': {\\n      key: 'Backspace',\\n      format: ['table'],\\n      collapsed: true,\\n      offset: 0,\\n      handler() {}\\n    },\\n    'table delete': {\\n      key: 'Delete',\\n      format: ['table'],\\n      collapsed: true,\\n      suffix: /^$/,\\n      handler() {}\\n    },\\n    'table enter': {\\n      key: 'Enter',\\n      shiftKey: null,\\n      format: ['table'],\\n      handler(range) {\\n        const module = this.quill.getModule('table');\\n        if (module) {\\n          var _module$getTable = module.getTable(range),\\n              _module$getTable2 = _slicedToArray(_module$getTable, 4);\\n\\n          const table = _module$getTable2[0],\\n                row = _module$getTable2[1],\\n                cell = _module$getTable2[2],\\n                offset = _module$getTable2[3];\\n\\n          const shift = tableSide(table, row, cell, offset);\\n          if (shift == null) return;\\n          let index = table.offset();\\n          if (shift < 0) {\\n            const delta = new _quillDelta2.default().retain(index).insert('\\\\n');\\n            this.quill.updateContents(delta, _quill2.default.sources.USER);\\n            this.quill.setSelection(range.index + 1, range.length, _quill2.default.sources.SILENT);\\n          } else if (shift > 0) {\\n            index += table.length();\\n            const delta = new _quillDelta2.default().retain(index).insert('\\\\n');\\n            this.quill.updateContents(delta, _quill2.default.sources.USER);\\n            this.quill.setSelection(index, _quill2.default.sources.USER);\\n          }\\n        }\\n      }\\n    },\\n    'table tab': {\\n      key: 'Tab',\\n      shiftKey: null,\\n      format: ['table'],\\n      handler(range, context) {\\n        const event = context.event,\\n              cell = context.line;\\n\\n        const offset = cell.offset(this.quill.scroll);\\n        if (event.shiftKey) {\\n          this.quill.setSelection(offset - 1, _quill2.default.sources.USER);\\n        } else {\\n          this.quill.setSelection(offset + cell.length(), _quill2.default.sources.USER);\\n        }\\n      }\\n    },\\n    'list autofill': {\\n      key: ' ',\\n      shiftKey: null,\\n      collapsed: true,\\n      format: {\\n        list: false,\\n        'code-block': false,\\n        blockquote: false,\\n        header: false,\\n        table: false\\n      },\\n      prefix: /^\\\\s*?(\\\\d+\\\\.|-|\\\\*|\\\\[ ?\\\\]|\\\\[x\\\\])$/,\\n      handler(range, context) {\\n        if (this.quill.scroll.query('list') == null) return true;\\n        const length = context.prefix.length;\\n\\n        var _quill$getLine7 = this.quill.getLine(range.index),\\n            _quill$getLine8 = _slicedToArray(_quill$getLine7, 2);\\n\\n        const line = _quill$getLine8[0],\\n              offset = _quill$getLine8[1];\\n\\n        if (offset > length) return true;\\n        let value;\\n        switch (context.prefix.trim()) {\\n          case '[]':\\n          case '[ ]':\\n            value = 'unchecked';\\n            break;\\n          case '[x]':\\n            value = 'checked';\\n            break;\\n          case '-':\\n          case '*':\\n            value = 'bullet';\\n            break;\\n          default:\\n            value = 'ordered';\\n        }\\n        this.quill.insertText(range.index, ' ', _quill2.default.sources.USER);\\n        this.quill.history.cutoff();\\n        const delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, { list: value });\\n        this.quill.updateContents(delta, _quill2.default.sources.USER);\\n        this.quill.history.cutoff();\\n        this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);\\n        return false;\\n      }\\n    },\\n    'code exit': {\\n      key: 'Enter',\\n      collapsed: true,\\n      format: ['code-block'],\\n      prefix: /^$/,\\n      suffix: /^\\\\s*$/,\\n      handler(range) {\\n        var _quill$getLine9 = this.quill.getLine(range.index),\\n            _quill$getLine10 = _slicedToArray(_quill$getLine9, 2);\\n\\n        const line = _quill$getLine10[0],\\n              offset = _quill$getLine10[1];\\n\\n        let numLines = 2;\\n        let cur = line;\\n        while (cur != null && cur.length() <= 1 && cur.formats()['code-block']) {\\n          cur = cur.prev;\\n          numLines -= 1;\\n          // Requisite prev lines are empty\\n          if (numLines <= 0) {\\n            const delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, { 'code-block': null }).delete(1);\\n            this.quill.updateContents(delta, _quill2.default.sources.USER);\\n            this.quill.setSelection(range.index - 1, _quill2.default.sources.SILENT);\\n            return false;\\n          }\\n        }\\n        return true;\\n      }\\n    },\\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\\n    'table down': makeTableArrowHandler(false),\\n    'table up': makeTableArrowHandler(true)\\n  }\\n};\\n\\nfunction handleBackspace(range, context) {\\n  if (range.index === 0 || this.quill.getLength() <= 1) return;\\n\\n  var _quill$getLine11 = this.quill.getLine(range.index),\\n      _quill$getLine12 = _slicedToArray(_quill$getLine11, 1);\\n\\n  const line = _quill$getLine12[0];\\n\\n  let formats = {};\\n  if (context.offset === 0) {\\n    var _quill$getLine13 = this.quill.getLine(range.index - 1),\\n        _quill$getLine14 = _slicedToArray(_quill$getLine13, 1);\\n\\n    const prev = _quill$getLine14[0];\\n\\n    if (prev != null) {\\n      if (prev.length() > 1 || prev.statics.blotName === 'table') {\\n        const curFormats = line.formats();\\n        const prevFormats = this.quill.getFormat(range.index - 1, 1);\\n        formats = _quillDelta.AttributeMap.diff(curFormats, prevFormats) || {};\\n      }\\n    }\\n  }\\n  // Check for astral symbols\\n  const length = /[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]$/.test(context.prefix) ? 2 : 1;\\n  this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);\\n  if (Object.keys(formats).length > 0) {\\n    this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);\\n  }\\n  this.quill.focus();\\n}\\n\\nfunction handleDelete(range, context) {\\n  // Check for astral symbols\\n  const length = /^[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/.test(context.suffix) ? 2 : 1;\\n  if (range.index >= this.quill.getLength() - length) return;\\n  let formats = {};\\n  let nextLength = 0;\\n\\n  var _quill$getLine15 = this.quill.getLine(range.index),\\n      _quill$getLine16 = _slicedToArray(_quill$getLine15, 1);\\n\\n  const line = _quill$getLine16[0];\\n\\n  if (context.offset >= line.length() - 1) {\\n    var _quill$getLine17 = this.quill.getLine(range.index + 1),\\n        _quill$getLine18 = _slicedToArray(_quill$getLine17, 1);\\n\\n    const next = _quill$getLine18[0];\\n\\n    if (next) {\\n      const curFormats = line.formats();\\n      const nextFormats = this.quill.getFormat(range.index, 1);\\n      formats = _quillDelta.AttributeMap.diff(curFormats, nextFormats) || {};\\n      nextLength = next.length();\\n    }\\n  }\\n  this.quill.deleteText(range.index, length, _quill2.default.sources.USER);\\n  if (Object.keys(formats).length > 0) {\\n    this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);\\n  }\\n}\\n\\nfunction handleDeleteRange(range) {\\n  const lines = this.quill.getLines(range);\\n  let formats = {};\\n  if (lines.length > 1) {\\n    const firstFormats = lines[0].formats();\\n    const lastFormats = lines[lines.length - 1].formats();\\n    formats = _quillDelta.AttributeMap.diff(lastFormats, firstFormats) || {};\\n  }\\n  this.quill.deleteText(range, _quill2.default.sources.USER);\\n  if (Object.keys(formats).length > 0) {\\n    this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);\\n  }\\n  this.quill.setSelection(range.index, _quill2.default.sources.SILENT);\\n  this.quill.focus();\\n}\\n\\n// TODO use just updateContents()\\nfunction handleEnter(range, context) {\\n  if (range.length > 0) {\\n    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change\\n  }\\n  const lineFormats = Object.keys(context.format).reduce((formats, format) => {\\n    if (this.quill.scroll.query(format, _parchment.Scope.BLOCK) && !Array.isArray(context.format[format])) {\\n      formats[format] = context.format[format];\\n    }\\n    return formats;\\n  }, {});\\n  this.quill.insertText(range.index, '\\\\n', lineFormats, _quill2.default.sources.USER);\\n  // Earlier scroll.deleteAt might have messed up our selection,\\n  // so insertText's built in selection preservation is not reliable\\n  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\\n  this.quill.focus();\\n  Object.keys(context.format).forEach(name => {\\n    if (lineFormats[name] != null) return;\\n    if (Array.isArray(context.format[name])) return;\\n    if (name === 'link') return;\\n    this.quill.format(name, context.format[name], _quill2.default.sources.USER);\\n  });\\n}\\n\\nfunction makeCodeBlockHandler(indent) {\\n  return {\\n    key: 'Tab',\\n    shiftKey: !indent,\\n    format: { 'code-block': true },\\n    handler(range) {\\n      const CodeBlock = this.quill.scroll.query('code-block');\\n      const lines = range.length === 0 ? this.quill.getLines(range.index, 1) : this.quill.getLines(range);\\n      let index = range.index,\\n          length = range.length;\\n\\n      lines.forEach((line, i) => {\\n        if (indent) {\\n          line.insertAt(0, CodeBlock.TAB);\\n          if (i === 0) {\\n            index += CodeBlock.TAB.length;\\n          } else {\\n            length += CodeBlock.TAB.length;\\n          }\\n        } else if (line.domNode.textContent.startsWith(CodeBlock.TAB)) {\\n          line.deleteAt(0, CodeBlock.TAB.length);\\n          if (i === 0) {\\n            index -= CodeBlock.TAB.length;\\n          } else {\\n            length -= CodeBlock.TAB.length;\\n          }\\n        }\\n      });\\n      this.quill.update(_quill2.default.sources.USER);\\n      this.quill.setSelection(index, length, _quill2.default.sources.SILENT);\\n    }\\n  };\\n}\\n\\nfunction makeEmbedArrowHandler(key, shiftKey) {\\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\\n  return {\\n    key,\\n    shiftKey,\\n    altKey: null,\\n    [where]: /^$/,\\n    handler(range) {\\n      let index = range.index;\\n\\n      if (key === 'ArrowRight') {\\n        index += range.length + 1;\\n      }\\n\\n      var _quill$getLeaf3 = this.quill.getLeaf(index),\\n          _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1);\\n\\n      const leaf = _quill$getLeaf4[0];\\n\\n      if (!(leaf instanceof _parchment.EmbedBlot)) return true;\\n      if (key === 'ArrowLeft') {\\n        if (shiftKey) {\\n          this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);\\n        } else {\\n          this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);\\n        }\\n      } else if (shiftKey) {\\n        this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);\\n      } else {\\n        this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);\\n      }\\n      return false;\\n    }\\n  };\\n}\\n\\nfunction makeFormatHandler(format) {\\n  return {\\n    key: format[0],\\n    shortKey: true,\\n    handler(range, context) {\\n      this.quill.format(format, !context.format[format], _quill2.default.sources.USER);\\n    }\\n  };\\n}\\n\\nfunction makeTableArrowHandler(up) {\\n  return {\\n    key: up ? 'ArrowUp' : 'ArrowDown',\\n    collapsed: true,\\n    format: ['table'],\\n    handler(range, context) {\\n      // TODO move to table module\\n      const key = up ? 'prev' : 'next';\\n      const cell = context.line;\\n      const targetRow = cell.parent[key];\\n      if (targetRow != null) {\\n        if (targetRow.statics.blotName === 'table-row') {\\n          let targetCell = targetRow.children.head;\\n          let cur = cell;\\n          while (cur.prev != null) {\\n            cur = cur.prev;\\n            targetCell = targetCell.next;\\n          }\\n          const index = targetCell.offset(this.quill.scroll) + Math.min(context.offset, targetCell.length() - 1);\\n          this.quill.setSelection(index, 0, _quill2.default.sources.USER);\\n        }\\n      } else {\\n        const targetLine = cell.table()[key];\\n        if (targetLine != null) {\\n          if (up) {\\n            this.quill.setSelection(targetLine.offset(this.quill.scroll) + targetLine.length() - 1, 0, _quill2.default.sources.USER);\\n          } else {\\n            this.quill.setSelection(targetLine.offset(this.quill.scroll), 0, _quill2.default.sources.USER);\\n          }\\n        }\\n      }\\n      return false;\\n    }\\n  };\\n}\\n\\nfunction normalize(binding) {\\n  if (typeof binding === 'string' || typeof binding === 'number') {\\n    binding = { key: binding };\\n  } else if (typeof binding === 'object') {\\n    binding = (0, _clone2.default)(binding, false);\\n  } else {\\n    return null;\\n  }\\n  if (binding.shortKey) {\\n    binding[SHORTKEY] = binding.shortKey;\\n    delete binding.shortKey;\\n  }\\n  return binding;\\n}\\n\\nfunction tableSide(table, row, cell, offset) {\\n  if (row.prev == null && row.next == null) {\\n    if (cell.prev == null && cell.next == null) {\\n      return offset === 0 ? -1 : 1;\\n    }\\n    return cell.prev == null ? -1 : 1;\\n  }\\n  if (row.prev == null) {\\n    return -1;\\n  }\\n  if (row.next == null) {\\n    return 1;\\n  }\\n  return null;\\n}\\n\\nexports.default = Keyboard;\\nexports.SHORTKEY = SHORTKEY;\\nexports.normalize = normalize;\\n\\n//# sourceURL=webpack://Quill/./modules/keyboard.js?\");\n\n/***/ }),\n\n/***/ \"./modules/syntax.js\":\n/*!***************************!*\\\n  !*** ./modules/syntax.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.CodeToken = exports.CodeBlock = undefined;\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _inline = __webpack_require__(/*! ../blots/inline */ \\\"./blots/inline.js\\\");\\n\\nvar _inline2 = _interopRequireDefault(_inline);\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nvar _block = __webpack_require__(/*! ../blots/block */ \\\"./blots/block.js\\\");\\n\\nvar _break = __webpack_require__(/*! ../blots/break */ \\\"./blots/break.js\\\");\\n\\nvar _break2 = _interopRequireDefault(_break);\\n\\nvar _cursor = __webpack_require__(/*! ../blots/cursor */ \\\"./blots/cursor.js\\\");\\n\\nvar _cursor2 = _interopRequireDefault(_cursor);\\n\\nvar _text = __webpack_require__(/*! ../blots/text */ \\\"./blots/text.js\\\");\\n\\nvar _text2 = _interopRequireDefault(_text);\\n\\nvar _code = __webpack_require__(/*! ../formats/code */ \\\"./formats/code.js\\\");\\n\\nvar _code2 = _interopRequireDefault(_code);\\n\\nvar _clipboard = __webpack_require__(/*! ./clipboard */ \\\"./modules/clipboard.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst TokenAttributor = new _parchment.ClassAttributor('code-token', 'hljs', {\\n  scope: _parchment.Scope.INLINE\\n});\\nclass CodeToken extends _inline2.default {\\n  static formats(node, scroll) {\\n    while (node != null && node !== scroll.domNode) {\\n      if (node.classList.contains(_code2.default.className)) {\\n        return super.formats(node, scroll);\\n      }\\n      node = node.parentNode;\\n    }\\n    return undefined;\\n  }\\n\\n  constructor(scroll, domNode, value) {\\n    super(scroll, domNode, value);\\n    TokenAttributor.add(this.domNode, value);\\n  }\\n\\n  format(format, value) {\\n    if (format !== CodeToken.blotName) {\\n      super.format(format, value);\\n    } else if (value) {\\n      TokenAttributor.add(this.domNode, value);\\n    } else {\\n      TokenAttributor.remove(this.domNode);\\n      this.domNode.classList.remove(this.statics.className);\\n    }\\n  }\\n\\n  optimize(...args) {\\n    super.optimize(...args);\\n    if (!TokenAttributor.value(this.domNode)) {\\n      this.unwrap();\\n    }\\n  }\\n}\\nCodeToken.blotName = 'code-token';\\nCodeToken.className = 'ql-token';\\n\\nclass SyntaxCodeBlock extends _code2.default {\\n  static create(value) {\\n    const domNode = super.create(value);\\n    if (typeof value === 'string') {\\n      domNode.setAttribute('data-language', value);\\n    }\\n    return domNode;\\n  }\\n\\n  static formats(domNode) {\\n    return domNode.getAttribute('data-language') || 'plain';\\n  }\\n\\n  static register() {} // Syntax module will register\\n\\n  format(name, value) {\\n    if (name === this.statics.blotName && value) {\\n      this.domNode.setAttribute('data-language', value);\\n    } else {\\n      super.format(name, value);\\n    }\\n  }\\n\\n  replaceWith(name, value) {\\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\\n    return super.replaceWith(name, value);\\n  }\\n}\\n\\nclass SyntaxCodeBlockContainer extends _code.CodeBlockContainer {\\n  attach() {\\n    super.attach();\\n    this.forceNext = false;\\n    this.scroll.emitMount(this);\\n  }\\n\\n  format(name, value) {\\n    if (name === SyntaxCodeBlock.blotName) {\\n      this.forceNext = true;\\n      this.children.forEach(child => {\\n        child.format(name, value);\\n      });\\n    }\\n  }\\n\\n  formatAt(index, length, name, value) {\\n    if (name === SyntaxCodeBlock.blotName) {\\n      this.forceNext = true;\\n    }\\n    super.formatAt(index, length, name, value);\\n  }\\n\\n  highlight(highlight, forced = false) {\\n    if (this.children.head == null) return;\\n    const nodes = Array.from(this.domNode.childNodes).filter(node => node !== this.uiNode);\\n    const text = `${nodes.map(node => node.textContent).join('\\\\n')}\\\\n`;\\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\\n    if (forced || this.forceNext || this.cachedText !== text) {\\n      if (text.trim().length > 0 || this.cachedText == null) {\\n        const oldDelta = this.children.reduce((delta, child) => {\\n          return delta.concat((0, _block.blockDelta)(child));\\n        }, new _quillDelta2.default());\\n        const delta = highlight(text, language);\\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\\n          // Should be all retains\\n          if (!retain) return index;\\n          if (attributes) {\\n            Object.keys(attributes).forEach(format => {\\n              if ([SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)) {\\n                this.formatAt(index, retain, format, attributes[format]);\\n              }\\n            });\\n          }\\n          return index + retain;\\n        }, 0);\\n      }\\n      this.cachedText = text;\\n      this.forceNext = false;\\n    }\\n  }\\n\\n  optimize(context) {\\n    super.optimize(context);\\n    if (this.parent != null && this.children.head != null && this.uiNode != null) {\\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\\n      if (language !== this.uiNode.value) {\\n        this.uiNode.value = language;\\n      }\\n    }\\n  }\\n}\\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\\nSyntaxCodeBlock.allowedChildren = [CodeToken, _cursor2.default, _text2.default, _break2.default];\\n\\nclass Syntax extends _module2.default {\\n  static register() {\\n    _quill2.default.register(CodeToken, true);\\n    _quill2.default.register(SyntaxCodeBlock, true);\\n    _quill2.default.register(SyntaxCodeBlockContainer, true);\\n  }\\n\\n  constructor(quill, options) {\\n    super(quill, options);\\n    if (this.options.hljs == null) {\\n      throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');\\n    }\\n    this.highlightBlot = this.highlightBlot.bind(this);\\n    this.initListener();\\n    this.initTimer();\\n  }\\n\\n  initListener() {\\n    this.quill.on(_quill2.default.events.SCROLL_BLOT_MOUNT, blot => {\\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\\n      const select = this.quill.root.ownerDocument.createElement('select');\\n      this.options.languages.forEach(({ key, label }) => {\\n        const option = select.ownerDocument.createElement('option');\\n        option.textContent = label;\\n        option.setAttribute('value', key);\\n        select.appendChild(option);\\n      });\\n      select.addEventListener('change', () => {\\n        blot.format(SyntaxCodeBlock.blotName, select.value);\\n        this.quill.root.focus(); // Prevent scrolling\\n        this.highlight(blot, true);\\n      });\\n      if (blot.uiNode == null) {\\n        blot.attachUI(select);\\n        if (blot.children.head) {\\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\\n        }\\n      }\\n    });\\n  }\\n\\n  initTimer() {\\n    let timer = null;\\n    this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, () => {\\n      clearTimeout(timer);\\n      timer = setTimeout(() => {\\n        this.highlight();\\n        timer = null;\\n      }, this.options.interval);\\n    });\\n  }\\n\\n  highlight(blot = null, force = false) {\\n    if (this.quill.selection.composing) return;\\n    this.quill.update(_quill2.default.sources.USER);\\n    const range = this.quill.getSelection();\\n    const blots = blot == null ? this.quill.scroll.descendants(SyntaxCodeBlockContainer) : [blot];\\n    blots.forEach(container => {\\n      container.highlight(this.highlightBlot, force);\\n    });\\n    this.quill.update(_quill2.default.sources.SILENT);\\n    if (range != null) {\\n      this.quill.setSelection(range, _quill2.default.sources.SILENT);\\n    }\\n  }\\n\\n  highlightBlot(text, language = 'plain') {\\n    if (language === 'plain') {\\n      return (0, _text.escapeText)(text).split('\\\\n').reduce((delta, line, i) => {\\n        if (i !== 0) {\\n          delta.insert('\\\\n', { [_code2.default.blotName]: language });\\n        }\\n        return delta.insert(line);\\n      }, new _quillDelta2.default());\\n    }\\n    const container = this.quill.root.ownerDocument.createElement('div');\\n    container.classList.add(_code2.default.className);\\n    container.innerHTML = this.options.hljs.highlight(language, text).value;\\n    return (0, _clipboard.traverse)(this.quill.scroll, container, [(node, delta) => {\\n      const value = TokenAttributor.value(node);\\n      if (value) {\\n        return delta.compose(new _quillDelta2.default().retain(delta.length(), {\\n          [CodeToken.blotName]: value\\n        }));\\n      }\\n      return delta;\\n    }], [(node, delta) => {\\n      return node.data.split('\\\\n').reduce((memo, nodeText, i) => {\\n        if (i !== 0) memo.insert('\\\\n', { [_code2.default.blotName]: language });\\n        return memo.insert(nodeText);\\n      }, delta);\\n    }], new WeakMap());\\n  }\\n}\\nSyntax.DEFAULTS = {\\n  hljs: (() => {\\n    return window.hljs;\\n  })(),\\n  interval: 1000,\\n  languages: [{ key: 'plain', label: 'Plain' }, { key: 'bash', label: 'Bash' }, { key: 'cpp', label: 'C++' }, { key: 'cs', label: 'C#' }, { key: 'css', label: 'CSS' }, { key: 'diff', label: 'Diff' }, { key: 'xml', label: 'HTML/XML' }, { key: 'java', label: 'Java' }, { key: 'javascript', label: 'Javascript' }, { key: 'markdown', label: 'Markdown' }, { key: 'php', label: 'PHP' }, { key: 'python', label: 'Python' }, { key: 'ruby', label: 'Ruby' }, { key: 'sql', label: 'SQL' }]\\n};\\n\\nexports.CodeBlock = SyntaxCodeBlock;\\nexports.CodeToken = CodeToken;\\nexports.default = Syntax;\\n\\n//# sourceURL=webpack://Quill/./modules/syntax.js?\");\n\n/***/ }),\n\n/***/ \"./modules/table.js\":\n/*!**************************!*\\\n  !*** ./modules/table.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nvar _table = __webpack_require__(/*! ../formats/table */ \\\"./formats/table.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Table extends _module2.default {\\n  static register() {\\n    _quill2.default.register(_table.TableCell);\\n    _quill2.default.register(_table.TableRow);\\n    _quill2.default.register(_table.TableBody);\\n    _quill2.default.register(_table.TableContainer);\\n  }\\n\\n  constructor(...args) {\\n    super(...args);\\n    this.listenBalanceCells();\\n  }\\n\\n  balanceTables() {\\n    this.quill.scroll.descendants(_table.TableContainer).forEach(table => {\\n      table.balanceCells();\\n    });\\n  }\\n\\n  deleteColumn() {\\n    var _getTable = this.getTable(),\\n        _getTable2 = _slicedToArray(_getTable, 3);\\n\\n    const table = _getTable2[0],\\n          cell = _getTable2[2];\\n\\n    if (cell == null) return;\\n    table.deleteColumn(cell.cellOffset());\\n    this.quill.update(_quill2.default.sources.USER);\\n  }\\n\\n  deleteRow() {\\n    var _getTable3 = this.getTable(),\\n        _getTable4 = _slicedToArray(_getTable3, 2);\\n\\n    const row = _getTable4[1];\\n\\n    if (row == null) return;\\n    row.remove();\\n    this.quill.update(_quill2.default.sources.USER);\\n  }\\n\\n  deleteTable() {\\n    var _getTable5 = this.getTable(),\\n        _getTable6 = _slicedToArray(_getTable5, 1);\\n\\n    const table = _getTable6[0];\\n\\n    if (table == null) return;\\n    const offset = table.offset();\\n    table.remove();\\n    this.quill.update(_quill2.default.sources.USER);\\n    this.quill.setSelection(offset, _quill2.default.sources.SILENT);\\n  }\\n\\n  getTable(range = this.quill.getSelection()) {\\n    if (range == null) return [null, null, null, -1];\\n\\n    var _quill$getLine = this.quill.getLine(range.index),\\n        _quill$getLine2 = _slicedToArray(_quill$getLine, 2);\\n\\n    const cell = _quill$getLine2[0],\\n          offset = _quill$getLine2[1];\\n\\n    if (cell == null || cell.statics.blotName !== _table.TableCell.blotName) {\\n      return [null, null, null, -1];\\n    }\\n    const row = cell.parent;\\n    const table = row.parent.parent;\\n    return [table, row, cell, offset];\\n  }\\n\\n  insertColumn(offset) {\\n    const range = this.quill.getSelection();\\n\\n    var _getTable7 = this.getTable(range),\\n        _getTable8 = _slicedToArray(_getTable7, 3);\\n\\n    const table = _getTable8[0],\\n          row = _getTable8[1],\\n          cell = _getTable8[2];\\n\\n    if (cell == null) return;\\n    const column = cell.cellOffset();\\n    table.insertColumn(column + offset);\\n    this.quill.update(_quill2.default.sources.USER);\\n    let shift = row.rowOffset();\\n    if (offset === 0) {\\n      shift += 1;\\n    }\\n    this.quill.setSelection(range.index + shift, range.length, _quill2.default.sources.SILENT);\\n  }\\n\\n  insertColumnLeft() {\\n    this.insertColumn(0);\\n  }\\n\\n  insertColumnRight() {\\n    this.insertColumn(1);\\n  }\\n\\n  insertRow(offset) {\\n    const range = this.quill.getSelection();\\n\\n    var _getTable9 = this.getTable(range),\\n        _getTable10 = _slicedToArray(_getTable9, 3);\\n\\n    const table = _getTable10[0],\\n          row = _getTable10[1],\\n          cell = _getTable10[2];\\n\\n    if (cell == null) return;\\n    const index = row.rowOffset();\\n    table.insertRow(index + offset);\\n    this.quill.update(_quill2.default.sources.USER);\\n    if (offset > 0) {\\n      this.quill.setSelection(range, _quill2.default.sources.SILENT);\\n    } else {\\n      this.quill.setSelection(range.index + row.children.length, range.length, _quill2.default.sources.SILENT);\\n    }\\n  }\\n\\n  insertRowAbove() {\\n    this.insertRow(0);\\n  }\\n\\n  insertRowBelow() {\\n    this.insertRow(1);\\n  }\\n\\n  insertTable(rows, columns) {\\n    const range = this.quill.getSelection();\\n    if (range == null) return;\\n    const delta = new Array(rows).fill(0).reduce(memo => {\\n      const text = new Array(columns).fill('\\\\n').join('');\\n      return memo.insert(text, { table: (0, _table.tableId)() });\\n    }, new _quillDelta2.default().retain(range.index));\\n    this.quill.updateContents(delta, _quill2.default.sources.USER);\\n    this.quill.setSelection(range.index, _quill2.default.sources.SILENT);\\n    this.balanceTables();\\n  }\\n\\n  listenBalanceCells() {\\n    this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, mutations => {\\n      mutations.some(mutation => {\\n        if (['TD', 'TR', 'TBODY', 'TABLE'].includes(mutation.target.tagName)) {\\n          this.quill.once(_quill2.default.events.TEXT_CHANGE, (delta, old, source) => {\\n            if (source !== _quill2.default.sources.USER) return;\\n            this.balanceTables();\\n          });\\n          return true;\\n        }\\n        return false;\\n      });\\n    });\\n  }\\n}\\n\\nexports.default = Table;\\n\\n//# sourceURL=webpack://Quill/./modules/table.js?\");\n\n/***/ }),\n\n/***/ \"./modules/toolbar.js\":\n/*!****************************!*\\\n  !*** ./modules/toolbar.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.addControls = exports.default = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _parchment = __webpack_require__(/*! parchment */ \\\"./node_modules/parchment/src/parchment.ts\\\");\\n\\nvar _quill = __webpack_require__(/*! ../core/quill */ \\\"./core/quill.js\\\");\\n\\nvar _quill2 = _interopRequireDefault(_quill);\\n\\nvar _logger = __webpack_require__(/*! ../core/logger */ \\\"./core/logger.js\\\");\\n\\nvar _logger2 = _interopRequireDefault(_logger);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst debug = (0, _logger2.default)('quill:toolbar');\\n\\nclass Toolbar extends _module2.default {\\n  constructor(quill, options) {\\n    super(quill, options);\\n    if (Array.isArray(this.options.container)) {\\n      const container = document.createElement('div');\\n      addControls(container, this.options.container);\\n      quill.container.parentNode.insertBefore(container, quill.container);\\n      this.container = container;\\n    } else if (typeof this.options.container === 'string') {\\n      this.container = document.querySelector(this.options.container);\\n    } else {\\n      this.container = this.options.container;\\n    }\\n    if (!(this.container instanceof HTMLElement)) {\\n      return debug.error('Container required for toolbar', this.options);\\n    }\\n    this.container.classList.add('ql-toolbar');\\n    this.controls = [];\\n    this.handlers = {};\\n    Object.keys(this.options.handlers).forEach(format => {\\n      this.addHandler(format, this.options.handlers[format]);\\n    });\\n    Array.from(this.container.querySelectorAll('button, select')).forEach(input => {\\n      this.attach(input);\\n    });\\n    this.quill.on(_quill2.default.events.EDITOR_CHANGE, (type, range) => {\\n      if (type === _quill2.default.events.SELECTION_CHANGE) {\\n        this.update(range);\\n      }\\n    });\\n    this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, () => {\\n      var _quill$selection$getR = this.quill.selection.getRange(),\\n          _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1);\\n\\n      const range = _quill$selection$getR2[0]; // quill.getSelection triggers update\\n\\n      this.update(range);\\n    });\\n  }\\n\\n  addHandler(format, handler) {\\n    this.handlers[format] = handler;\\n  }\\n\\n  attach(input) {\\n    let format = Array.from(input.classList).find(className => {\\n      return className.indexOf('ql-') === 0;\\n    });\\n    if (!format) return;\\n    format = format.slice('ql-'.length);\\n    if (input.tagName === 'BUTTON') {\\n      input.setAttribute('type', 'button');\\n    }\\n    if (this.handlers[format] == null && this.quill.scroll.query(format) == null) {\\n      debug.warn('ignoring attaching to nonexistent format', format, input);\\n      return;\\n    }\\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\\n    input.addEventListener(eventName, e => {\\n      let value;\\n      if (input.tagName === 'SELECT') {\\n        if (input.selectedIndex < 0) return;\\n        const selected = input.options[input.selectedIndex];\\n        if (selected.hasAttribute('selected')) {\\n          value = false;\\n        } else {\\n          value = selected.value || false;\\n        }\\n      } else {\\n        if (input.classList.contains('ql-active')) {\\n          value = false;\\n        } else {\\n          value = input.value || !input.hasAttribute('value');\\n        }\\n        e.preventDefault();\\n      }\\n      this.quill.focus();\\n\\n      var _quill$selection$getR3 = this.quill.selection.getRange(),\\n          _quill$selection$getR4 = _slicedToArray(_quill$selection$getR3, 1);\\n\\n      const range = _quill$selection$getR4[0];\\n\\n      if (this.handlers[format] != null) {\\n        this.handlers[format].call(this, value);\\n      } else if (this.quill.scroll.query(format).prototype instanceof _parchment.EmbedBlot) {\\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\\n        if (!value) return;\\n        this.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ [format]: value }), _quill2.default.sources.USER);\\n      } else {\\n        this.quill.format(format, value, _quill2.default.sources.USER);\\n      }\\n      this.update(range);\\n    });\\n    this.controls.push([format, input]);\\n  }\\n\\n  update(range) {\\n    const formats = range == null ? {} : this.quill.getFormat(range);\\n    this.controls.forEach(pair => {\\n      var _pair = _slicedToArray(pair, 2);\\n\\n      const format = _pair[0],\\n            input = _pair[1];\\n\\n      if (input.tagName === 'SELECT') {\\n        let option;\\n        if (range == null) {\\n          option = null;\\n        } else if (formats[format] == null) {\\n          option = input.querySelector('option[selected]');\\n        } else if (!Array.isArray(formats[format])) {\\n          let value = formats[format];\\n          if (typeof value === 'string') {\\n            value = value.replace(/\\\"/g, '\\\\\\\\\\\"');\\n          }\\n          option = input.querySelector(`option[value=\\\"${value}\\\"]`);\\n        }\\n        if (option == null) {\\n          input.value = ''; // TODO make configurable?\\n          input.selectedIndex = -1;\\n        } else {\\n          option.selected = true;\\n        }\\n      } else if (range == null) {\\n        input.classList.remove('ql-active');\\n      } else if (input.hasAttribute('value')) {\\n        // both being null should match (default values)\\n        // '1' should match with 1 (headers)\\n        const isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');\\n        input.classList.toggle('ql-active', isActive);\\n      } else {\\n        input.classList.toggle('ql-active', formats[format] != null);\\n      }\\n    });\\n  }\\n}\\nToolbar.DEFAULTS = {};\\n\\nfunction addButton(container, format, value) {\\n  const input = document.createElement('button');\\n  input.setAttribute('type', 'button');\\n  input.classList.add(`ql-${format}`);\\n  if (value != null) {\\n    input.value = value;\\n  }\\n  container.appendChild(input);\\n}\\n\\nfunction addControls(container, groups) {\\n  if (!Array.isArray(groups[0])) {\\n    groups = [groups];\\n  }\\n  groups.forEach(controls => {\\n    const group = document.createElement('span');\\n    group.classList.add('ql-formats');\\n    controls.forEach(control => {\\n      if (typeof control === 'string') {\\n        addButton(group, control);\\n      } else {\\n        const format = Object.keys(control)[0];\\n        const value = control[format];\\n        if (Array.isArray(value)) {\\n          addSelect(group, format, value);\\n        } else {\\n          addButton(group, format, value);\\n        }\\n      }\\n    });\\n    container.appendChild(group);\\n  });\\n}\\n\\nfunction addSelect(container, format, values) {\\n  const input = document.createElement('select');\\n  input.classList.add(`ql-${format}`);\\n  values.forEach(value => {\\n    const option = document.createElement('option');\\n    if (value !== false) {\\n      option.setAttribute('value', value);\\n    } else {\\n      option.setAttribute('selected', 'selected');\\n    }\\n    input.appendChild(option);\\n  });\\n  container.appendChild(input);\\n}\\n\\nToolbar.DEFAULTS = {\\n  container: null,\\n  handlers: {\\n    clean() {\\n      const range = this.quill.getSelection();\\n      if (range == null) return;\\n      if (range.length === 0) {\\n        const formats = this.quill.getFormat();\\n        Object.keys(formats).forEach(name => {\\n          // Clean functionality in existing apps only clean inline formats\\n          if (this.quill.scroll.query(name, _parchment.Scope.INLINE) != null) {\\n            this.quill.format(name, false, _quill2.default.sources.USER);\\n          }\\n        });\\n      } else {\\n        this.quill.removeFormat(range, _quill2.default.sources.USER);\\n      }\\n    },\\n    direction(value) {\\n      var _quill$getFormat = this.quill.getFormat();\\n\\n      const align = _quill$getFormat.align;\\n\\n      if (value === 'rtl' && align == null) {\\n        this.quill.format('align', 'right', _quill2.default.sources.USER);\\n      } else if (!value && align === 'right') {\\n        this.quill.format('align', false, _quill2.default.sources.USER);\\n      }\\n      this.quill.format('direction', value, _quill2.default.sources.USER);\\n    },\\n    indent(value) {\\n      const range = this.quill.getSelection();\\n      const formats = this.quill.getFormat(range);\\n      const indent = parseInt(formats.indent || 0, 10);\\n      if (value === '+1' || value === '-1') {\\n        let modifier = value === '+1' ? 1 : -1;\\n        if (formats.direction === 'rtl') modifier *= -1;\\n        this.quill.format('indent', indent + modifier, _quill2.default.sources.USER);\\n      }\\n    },\\n    link(value) {\\n      if (value === true) {\\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\\n      }\\n      this.quill.format('link', value, _quill2.default.sources.USER);\\n    },\\n    list(value) {\\n      const range = this.quill.getSelection();\\n      const formats = this.quill.getFormat(range);\\n      if (value === 'check') {\\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\\n          this.quill.format('list', false, _quill2.default.sources.USER);\\n        } else {\\n          this.quill.format('list', 'unchecked', _quill2.default.sources.USER);\\n        }\\n      } else {\\n        this.quill.format('list', value, _quill2.default.sources.USER);\\n      }\\n    }\\n  }\\n};\\n\\nexports.default = Toolbar;\\nexports.addControls = addControls;\\n\\n//# sourceURL=webpack://Quill/./modules/toolbar.js?\");\n\n/***/ }),\n\n/***/ \"./modules/uploader.js\":\n/*!*****************************!*\\\n  !*** ./modules/uploader.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _quillDelta = __webpack_require__(/*! quill-delta */ \\\"./node_modules/quill-delta/dist/Delta.js\\\");\\n\\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\\n\\nvar _emitter = __webpack_require__(/*! ../core/emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _module = __webpack_require__(/*! ../core/module */ \\\"./core/module.js\\\");\\n\\nvar _module2 = _interopRequireDefault(_module);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass Uploader extends _module2.default {\\n  constructor(quill, options) {\\n    super(quill, options);\\n    quill.root.addEventListener('drop', e => {\\n      e.preventDefault();\\n      let native;\\n      if (document.caretRangeFromPoint) {\\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\\n      } else if (document.caretPositionFromPoint) {\\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\\n        native = document.createRange();\\n        native.setStart(position.offsetNode, position.offset);\\n        native.setEnd(position.offsetNode, position.offset);\\n      } else {\\n        return;\\n      }\\n      const normalized = quill.selection.normalizeNative(native);\\n      const range = quill.selection.normalizedToRange(normalized);\\n      this.upload(range, e.dataTransfer.files);\\n    });\\n  }\\n\\n  upload(range, files) {\\n    const uploads = [];\\n    Array.from(files).forEach(file => {\\n      if (file && this.options.mimetypes.includes(file.type)) {\\n        uploads.push(file);\\n      }\\n    });\\n    if (uploads.length > 0) {\\n      this.options.handler.call(this, range, uploads);\\n    }\\n  }\\n}\\n\\nUploader.DEFAULTS = {\\n  mimetypes: ['image/png', 'image/jpeg'],\\n  handler(range, files) {\\n    const promises = files.map(file => {\\n      return new Promise(resolve => {\\n        const reader = new FileReader();\\n        reader.onload = e => {\\n          resolve(e.target.result);\\n        };\\n        reader.readAsDataURL(file);\\n      });\\n    });\\n    Promise.all(promises).then(images => {\\n      const update = images.reduce((delta, image) => {\\n        return delta.insert({ image });\\n      }, new _quillDelta2.default().retain(range.index).delete(range.length));\\n      this.quill.updateContents(update, _emitter2.default.sources.USER);\\n      this.quill.setSelection(range.index + images.length, _emitter2.default.sources.SILENT);\\n    });\\n  }\\n};\\n\\nexports.default = Uploader;\\n\\n//# sourceURL=webpack://Quill/./modules/uploader.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/clone/clone.js\":\n/*!*************************************!*\\\n  !*** ./node_modules/clone/clone.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var clone = (function() {\\n'use strict';\\n\\nfunction _instanceof(obj, type) {\\n  return type != null && obj instanceof type;\\n}\\n\\nvar nativeMap;\\ntry {\\n  nativeMap = Map;\\n} catch(_) {\\n  // maybe a reference error because no `Map`. Give it a dummy value that no\\n  // value will ever be an instanceof.\\n  nativeMap = function() {};\\n}\\n\\nvar nativeSet;\\ntry {\\n  nativeSet = Set;\\n} catch(_) {\\n  nativeSet = function() {};\\n}\\n\\nvar nativePromise;\\ntry {\\n  nativePromise = Promise;\\n} catch(_) {\\n  nativePromise = function() {};\\n}\\n\\n/**\\n * Clones (copies) an Object using deep copying.\\n *\\n * This function supports circular references by default, but if you are certain\\n * there are no circular references in your object, you can save some CPU time\\n * by calling clone(obj, false).\\n *\\n * Caution: if `circular` is false and `parent` contains circular references,\\n * your program may enter an infinite loop and crash.\\n *\\n * @param `parent` - the object to be cloned\\n * @param `circular` - set to true if the object to be cloned may contain\\n *    circular references. (optional - true by default)\\n * @param `depth` - set to a number if the object is only to be cloned to\\n *    a particular depth. (optional - defaults to Infinity)\\n * @param `prototype` - sets the prototype to be used when cloning an object.\\n *    (optional - defaults to parent prototype).\\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\\n *    should be cloned as well. Non-enumerable properties on the prototype\\n *    chain will be ignored. (optional - false by default)\\n*/\\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\\n  if (typeof circular === 'object') {\\n    depth = circular.depth;\\n    prototype = circular.prototype;\\n    includeNonEnumerable = circular.includeNonEnumerable;\\n    circular = circular.circular;\\n  }\\n  // maintain two arrays for circular references, where corresponding parents\\n  // and children have the same index\\n  var allParents = [];\\n  var allChildren = [];\\n\\n  var useBuffer = typeof Buffer != 'undefined';\\n\\n  if (typeof circular == 'undefined')\\n    circular = true;\\n\\n  if (typeof depth == 'undefined')\\n    depth = Infinity;\\n\\n  // recurse this function so we don't reset allParents and allChildren\\n  function _clone(parent, depth) {\\n    // cloning null always returns null\\n    if (parent === null)\\n      return null;\\n\\n    if (depth === 0)\\n      return parent;\\n\\n    var child;\\n    var proto;\\n    if (typeof parent != 'object') {\\n      return parent;\\n    }\\n\\n    if (_instanceof(parent, nativeMap)) {\\n      child = new nativeMap();\\n    } else if (_instanceof(parent, nativeSet)) {\\n      child = new nativeSet();\\n    } else if (_instanceof(parent, nativePromise)) {\\n      child = new nativePromise(function (resolve, reject) {\\n        parent.then(function(value) {\\n          resolve(_clone(value, depth - 1));\\n        }, function(err) {\\n          reject(_clone(err, depth - 1));\\n        });\\n      });\\n    } else if (clone.__isArray(parent)) {\\n      child = [];\\n    } else if (clone.__isRegExp(parent)) {\\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\\n    } else if (clone.__isDate(parent)) {\\n      child = new Date(parent.getTime());\\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\\n      if (Buffer.allocUnsafe) {\\n        // Node.js >= 4.5.0\\n        child = Buffer.allocUnsafe(parent.length);\\n      } else {\\n        // Older Node.js versions\\n        child = new Buffer(parent.length);\\n      }\\n      parent.copy(child);\\n      return child;\\n    } else if (_instanceof(parent, Error)) {\\n      child = Object.create(parent);\\n    } else {\\n      if (typeof prototype == 'undefined') {\\n        proto = Object.getPrototypeOf(parent);\\n        child = Object.create(proto);\\n      }\\n      else {\\n        child = Object.create(prototype);\\n        proto = prototype;\\n      }\\n    }\\n\\n    if (circular) {\\n      var index = allParents.indexOf(parent);\\n\\n      if (index != -1) {\\n        return allChildren[index];\\n      }\\n      allParents.push(parent);\\n      allChildren.push(child);\\n    }\\n\\n    if (_instanceof(parent, nativeMap)) {\\n      parent.forEach(function(value, key) {\\n        var keyChild = _clone(key, depth - 1);\\n        var valueChild = _clone(value, depth - 1);\\n        child.set(keyChild, valueChild);\\n      });\\n    }\\n    if (_instanceof(parent, nativeSet)) {\\n      parent.forEach(function(value) {\\n        var entryChild = _clone(value, depth - 1);\\n        child.add(entryChild);\\n      });\\n    }\\n\\n    for (var i in parent) {\\n      var attrs;\\n      if (proto) {\\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\\n      }\\n\\n      if (attrs && attrs.set == null) {\\n        continue;\\n      }\\n      child[i] = _clone(parent[i], depth - 1);\\n    }\\n\\n    if (Object.getOwnPropertySymbols) {\\n      var symbols = Object.getOwnPropertySymbols(parent);\\n      for (var i = 0; i < symbols.length; i++) {\\n        // Don't need to worry about cloning a symbol because it is a primitive,\\n        // like a number or string.\\n        var symbol = symbols[i];\\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\\n          continue;\\n        }\\n        child[symbol] = _clone(parent[symbol], depth - 1);\\n        if (!descriptor.enumerable) {\\n          Object.defineProperty(child, symbol, {\\n            enumerable: false\\n          });\\n        }\\n      }\\n    }\\n\\n    if (includeNonEnumerable) {\\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\\n      for (var i = 0; i < allPropertyNames.length; i++) {\\n        var propertyName = allPropertyNames[i];\\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\\n        if (descriptor && descriptor.enumerable) {\\n          continue;\\n        }\\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\\n        Object.defineProperty(child, propertyName, {\\n          enumerable: false\\n        });\\n      }\\n    }\\n\\n    return child;\\n  }\\n\\n  return _clone(parent, depth);\\n}\\n\\n/**\\n * Simple flat clone using prototype, accepts only objects, usefull for property\\n * override on FLAT configuration object (no nested props).\\n *\\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\\n * works.\\n */\\nclone.clonePrototype = function clonePrototype(parent) {\\n  if (parent === null)\\n    return null;\\n\\n  var c = function () {};\\n  c.prototype = parent;\\n  return new c();\\n};\\n\\n// private utility functions\\n\\nfunction __objToStr(o) {\\n  return Object.prototype.toString.call(o);\\n}\\nclone.__objToStr = __objToStr;\\n\\nfunction __isDate(o) {\\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\\n}\\nclone.__isDate = __isDate;\\n\\nfunction __isArray(o) {\\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\\n}\\nclone.__isArray = __isArray;\\n\\nfunction __isRegExp(o) {\\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\\n}\\nclone.__isRegExp = __isRegExp;\\n\\nfunction __getRegExpFlags(re) {\\n  var flags = '';\\n  if (re.global) flags += 'g';\\n  if (re.ignoreCase) flags += 'i';\\n  if (re.multiline) flags += 'm';\\n  return flags;\\n}\\nclone.__getRegExpFlags = __getRegExpFlags;\\n\\nreturn clone;\\n})();\\n\\nif (typeof module === 'object' && module.exports) {\\n  module.exports = clone;\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/clone/clone.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/deep-equal/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/deep-equal/index.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var pSlice = Array.prototype.slice;\\nvar objectKeys = __webpack_require__(/*! ./lib/keys.js */ \\\"./node_modules/deep-equal/lib/keys.js\\\");\\nvar isArguments = __webpack_require__(/*! ./lib/is_arguments.js */ \\\"./node_modules/deep-equal/lib/is_arguments.js\\\");\\n\\nvar deepEqual = module.exports = function (actual, expected, opts) {\\n  if (!opts) opts = {};\\n  // 7.1. All identical values are equivalent, as determined by ===.\\n  if (actual === expected) {\\n    return true;\\n\\n  } else if (actual instanceof Date && expected instanceof Date) {\\n    return actual.getTime() === expected.getTime();\\n\\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\\n  // equivalence is determined by ==.\\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\\n    return opts.strict ? actual === expected : actual == expected;\\n\\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\\n  // determined by having the same number of owned properties (as verified\\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\\n  // (although not necessarily the same order), equivalent values for every\\n  // corresponding key, and an identical 'prototype' property. Note: this\\n  // accounts for both named and indexed properties on Arrays.\\n  } else {\\n    return objEquiv(actual, expected, opts);\\n  }\\n}\\n\\nfunction isUndefinedOrNull(value) {\\n  return value === null || value === undefined;\\n}\\n\\nfunction isBuffer (x) {\\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\\n    return false;\\n  }\\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\\n  return true;\\n}\\n\\nfunction objEquiv(a, b, opts) {\\n  var i, key;\\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\\n    return false;\\n  // an identical 'prototype' property.\\n  if (a.prototype !== b.prototype) return false;\\n  //~~~I've managed to break Object.keys through screwy arguments passing.\\n  //   Converting to array solves the problem.\\n  if (isArguments(a)) {\\n    if (!isArguments(b)) {\\n      return false;\\n    }\\n    a = pSlice.call(a);\\n    b = pSlice.call(b);\\n    return deepEqual(a, b, opts);\\n  }\\n  if (isBuffer(a)) {\\n    if (!isBuffer(b)) {\\n      return false;\\n    }\\n    if (a.length !== b.length) return false;\\n    for (i = 0; i < a.length; i++) {\\n      if (a[i] !== b[i]) return false;\\n    }\\n    return true;\\n  }\\n  try {\\n    var ka = objectKeys(a),\\n        kb = objectKeys(b);\\n  } catch (e) {//happens when one is a string literal and the other isn't\\n    return false;\\n  }\\n  // having the same number of owned properties (keys incorporates\\n  // hasOwnProperty)\\n  if (ka.length != kb.length)\\n    return false;\\n  //the same set of keys (although not necessarily the same order),\\n  ka.sort();\\n  kb.sort();\\n  //~~~cheap key test\\n  for (i = ka.length - 1; i >= 0; i--) {\\n    if (ka[i] != kb[i])\\n      return false;\\n  }\\n  //equivalent values for every corresponding key, and\\n  //~~~possibly expensive deep test\\n  for (i = ka.length - 1; i >= 0; i--) {\\n    key = ka[i];\\n    if (!deepEqual(a[key], b[key], opts)) return false;\\n  }\\n  return typeof a === typeof b;\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/deep-equal/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/deep-equal/lib/is_arguments.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/deep-equal/lib/is_arguments.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var supportsArgumentsClass = (function(){\\n  return Object.prototype.toString.call(arguments)\\n})() == '[object Arguments]';\\n\\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\\n\\nexports.supported = supported;\\nfunction supported(object) {\\n  return Object.prototype.toString.call(object) == '[object Arguments]';\\n};\\n\\nexports.unsupported = unsupported;\\nfunction unsupported(object){\\n  return object &&\\n    typeof object == 'object' &&\\n    typeof object.length == 'number' &&\\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\\n    false;\\n};\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/deep-equal/lib/is_arguments.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/deep-equal/lib/keys.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/deep-equal/lib/keys.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"exports = module.exports = typeof Object.keys === 'function'\\n  ? Object.keys : shim;\\n\\nexports.shim = shim;\\nfunction shim (obj) {\\n  var keys = [];\\n  for (var key in obj) keys.push(key);\\n  return keys;\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/deep-equal/lib/keys.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/eventemitter3/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/eventemitter3/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"'use strict';\\n\\nvar has = Object.prototype.hasOwnProperty\\n  , prefix = '~';\\n\\n/**\\n * Constructor to create a storage for our `EE` objects.\\n * An `Events` instance is a plain object whose properties are event names.\\n *\\n * @constructor\\n * @private\\n */\\nfunction Events() {}\\n\\n//\\n// We try to not inherit from `Object.prototype`. In some engines creating an\\n// instance in this way is faster than calling `Object.create(null)` directly.\\n// If `Object.create(null)` is not supported we prefix the event names with a\\n// character to make sure that the built-in object properties are not\\n// overridden or used as an attack vector.\\n//\\nif (Object.create) {\\n  Events.prototype = Object.create(null);\\n\\n  //\\n  // This hack is needed because the `__proto__` property is still inherited in\\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\\n  //\\n  if (!new Events().__proto__) prefix = false;\\n}\\n\\n/**\\n * Representation of a single event listener.\\n *\\n * @param {Function} fn The listener function.\\n * @param {*} context The context to invoke the listener with.\\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\\n * @constructor\\n * @private\\n */\\nfunction EE(fn, context, once) {\\n  this.fn = fn;\\n  this.context = context;\\n  this.once = once || false;\\n}\\n\\n/**\\n * Add a listener for a given event.\\n *\\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\\n * @param {(String|Symbol)} event The event name.\\n * @param {Function} fn The listener function.\\n * @param {*} context The context to invoke the listener with.\\n * @param {Boolean} once Specify if the listener is a one-time listener.\\n * @returns {EventEmitter}\\n * @private\\n */\\nfunction addListener(emitter, event, fn, context, once) {\\n  if (typeof fn !== 'function') {\\n    throw new TypeError('The listener must be a function');\\n  }\\n\\n  var listener = new EE(fn, context || emitter, once)\\n    , evt = prefix ? prefix + event : event;\\n\\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\\n  else emitter._events[evt] = [emitter._events[evt], listener];\\n\\n  return emitter;\\n}\\n\\n/**\\n * Clear event by name.\\n *\\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\\n * @param {(String|Symbol)} evt The Event name.\\n * @private\\n */\\nfunction clearEvent(emitter, evt) {\\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\\n  else delete emitter._events[evt];\\n}\\n\\n/**\\n * Minimal `EventEmitter` interface that is molded against the Node.js\\n * `EventEmitter` interface.\\n *\\n * @constructor\\n * @public\\n */\\nfunction EventEmitter() {\\n  this._events = new Events();\\n  this._eventsCount = 0;\\n}\\n\\n/**\\n * Return an array listing the events for which the emitter has registered\\n * listeners.\\n *\\n * @returns {Array}\\n * @public\\n */\\nEventEmitter.prototype.eventNames = function eventNames() {\\n  var names = []\\n    , events\\n    , name;\\n\\n  if (this._eventsCount === 0) return names;\\n\\n  for (name in (events = this._events)) {\\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\\n  }\\n\\n  if (Object.getOwnPropertySymbols) {\\n    return names.concat(Object.getOwnPropertySymbols(events));\\n  }\\n\\n  return names;\\n};\\n\\n/**\\n * Return the listeners registered for a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @returns {Array} The registered listeners.\\n * @public\\n */\\nEventEmitter.prototype.listeners = function listeners(event) {\\n  var evt = prefix ? prefix + event : event\\n    , handlers = this._events[evt];\\n\\n  if (!handlers) return [];\\n  if (handlers.fn) return [handlers.fn];\\n\\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\\n    ee[i] = handlers[i].fn;\\n  }\\n\\n  return ee;\\n};\\n\\n/**\\n * Return the number of listeners listening to a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @returns {Number} The number of listeners.\\n * @public\\n */\\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\\n  var evt = prefix ? prefix + event : event\\n    , listeners = this._events[evt];\\n\\n  if (!listeners) return 0;\\n  if (listeners.fn) return 1;\\n  return listeners.length;\\n};\\n\\n/**\\n * Calls each of the listeners registered for a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @returns {Boolean} `true` if the event had listeners, else `false`.\\n * @public\\n */\\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\\n  var evt = prefix ? prefix + event : event;\\n\\n  if (!this._events[evt]) return false;\\n\\n  var listeners = this._events[evt]\\n    , len = arguments.length\\n    , args\\n    , i;\\n\\n  if (listeners.fn) {\\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\\n\\n    switch (len) {\\n      case 1: return listeners.fn.call(listeners.context), true;\\n      case 2: return listeners.fn.call(listeners.context, a1), true;\\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\\n    }\\n\\n    for (i = 1, args = new Array(len -1); i < len; i++) {\\n      args[i - 1] = arguments[i];\\n    }\\n\\n    listeners.fn.apply(listeners.context, args);\\n  } else {\\n    var length = listeners.length\\n      , j;\\n\\n    for (i = 0; i < length; i++) {\\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\\n\\n      switch (len) {\\n        case 1: listeners[i].fn.call(listeners[i].context); break;\\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\\n        default:\\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\\n            args[j - 1] = arguments[j];\\n          }\\n\\n          listeners[i].fn.apply(listeners[i].context, args);\\n      }\\n    }\\n  }\\n\\n  return true;\\n};\\n\\n/**\\n * Add a listener for a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @param {Function} fn The listener function.\\n * @param {*} [context=this] The context to invoke the listener with.\\n * @returns {EventEmitter} `this`.\\n * @public\\n */\\nEventEmitter.prototype.on = function on(event, fn, context) {\\n  return addListener(this, event, fn, context, false);\\n};\\n\\n/**\\n * Add a one-time listener for a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @param {Function} fn The listener function.\\n * @param {*} [context=this] The context to invoke the listener with.\\n * @returns {EventEmitter} `this`.\\n * @public\\n */\\nEventEmitter.prototype.once = function once(event, fn, context) {\\n  return addListener(this, event, fn, context, true);\\n};\\n\\n/**\\n * Remove the listeners of a given event.\\n *\\n * @param {(String|Symbol)} event The event name.\\n * @param {Function} fn Only remove the listeners that match this function.\\n * @param {*} context Only remove the listeners that have this context.\\n * @param {Boolean} once Only remove one-time listeners.\\n * @returns {EventEmitter} `this`.\\n * @public\\n */\\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\\n  var evt = prefix ? prefix + event : event;\\n\\n  if (!this._events[evt]) return this;\\n  if (!fn) {\\n    clearEvent(this, evt);\\n    return this;\\n  }\\n\\n  var listeners = this._events[evt];\\n\\n  if (listeners.fn) {\\n    if (\\n      listeners.fn === fn &&\\n      (!once || listeners.once) &&\\n      (!context || listeners.context === context)\\n    ) {\\n      clearEvent(this, evt);\\n    }\\n  } else {\\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\\n      if (\\n        listeners[i].fn !== fn ||\\n        (once && !listeners[i].once) ||\\n        (context && listeners[i].context !== context)\\n      ) {\\n        events.push(listeners[i]);\\n      }\\n    }\\n\\n    //\\n    // Reset the array, or remove it completely if we have no more listeners.\\n    //\\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\\n    else clearEvent(this, evt);\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Remove all listeners, or those of the specified event.\\n *\\n * @param {(String|Symbol)} [event] The event name.\\n * @returns {EventEmitter} `this`.\\n * @public\\n */\\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\\n  var evt;\\n\\n  if (event) {\\n    evt = prefix ? prefix + event : event;\\n    if (this._events[evt]) clearEvent(this, evt);\\n  } else {\\n    this._events = new Events();\\n    this._eventsCount = 0;\\n  }\\n\\n  return this;\\n};\\n\\n//\\n// Alias methods names because people roll like that.\\n//\\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\\n\\n//\\n// Expose the prefix.\\n//\\nEventEmitter.prefixed = prefix;\\n\\n//\\n// Allow `EventEmitter` to be imported as module namespace.\\n//\\nEventEmitter.EventEmitter = EventEmitter;\\n\\n//\\n// Expose the module.\\n//\\nif ('undefined' !== typeof module) {\\n  module.exports = EventEmitter;\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/eventemitter3/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/extend/index.js\":\n/*!**************************************!*\\\n  !*** ./node_modules/extend/index.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"'use strict';\\n\\nvar hasOwn = Object.prototype.hasOwnProperty;\\nvar toStr = Object.prototype.toString;\\nvar defineProperty = Object.defineProperty;\\nvar gOPD = Object.getOwnPropertyDescriptor;\\n\\nvar isArray = function isArray(arr) {\\n\\tif (typeof Array.isArray === 'function') {\\n\\t\\treturn Array.isArray(arr);\\n\\t}\\n\\n\\treturn toStr.call(arr) === '[object Array]';\\n};\\n\\nvar isPlainObject = function isPlainObject(obj) {\\n\\tif (!obj || toStr.call(obj) !== '[object Object]') {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\\n\\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\\n\\t// Not own constructor property must be Object\\n\\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\t// Own properties are enumerated firstly, so to speed up,\\n\\t// if last one is own, then all properties are own.\\n\\tvar key;\\n\\tfor (key in obj) { /**/ }\\n\\n\\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\\n};\\n\\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\\nvar setProperty = function setProperty(target, options) {\\n\\tif (defineProperty && options.name === '__proto__') {\\n\\t\\tdefineProperty(target, options.name, {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: true,\\n\\t\\t\\tvalue: options.newValue,\\n\\t\\t\\twritable: true\\n\\t\\t});\\n\\t} else {\\n\\t\\ttarget[options.name] = options.newValue;\\n\\t}\\n};\\n\\n// Return undefined instead of __proto__ if '__proto__' is not an own property\\nvar getProperty = function getProperty(obj, name) {\\n\\tif (name === '__proto__') {\\n\\t\\tif (!hasOwn.call(obj, name)) {\\n\\t\\t\\treturn void 0;\\n\\t\\t} else if (gOPD) {\\n\\t\\t\\t// In early versions of node, obj['__proto__'] is buggy when obj has\\n\\t\\t\\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\\n\\t\\t\\treturn gOPD(obj, name).value;\\n\\t\\t}\\n\\t}\\n\\n\\treturn obj[name];\\n};\\n\\nmodule.exports = function extend() {\\n\\tvar options, name, src, copy, copyIsArray, clone;\\n\\tvar target = arguments[0];\\n\\tvar i = 1;\\n\\tvar length = arguments.length;\\n\\tvar deep = false;\\n\\n\\t// Handle a deep copy situation\\n\\tif (typeof target === 'boolean') {\\n\\t\\tdeep = target;\\n\\t\\ttarget = arguments[1] || {};\\n\\t\\t// skip the boolean and the target\\n\\t\\ti = 2;\\n\\t}\\n\\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\\n\\t\\ttarget = {};\\n\\t}\\n\\n\\tfor (; i < length; ++i) {\\n\\t\\toptions = arguments[i];\\n\\t\\t// Only deal with non-null/undefined values\\n\\t\\tif (options != null) {\\n\\t\\t\\t// Extend the base object\\n\\t\\t\\tfor (name in options) {\\n\\t\\t\\t\\tsrc = getProperty(target, name);\\n\\t\\t\\t\\tcopy = getProperty(options, name);\\n\\n\\t\\t\\t\\t// Prevent never-ending loop\\n\\t\\t\\t\\tif (target !== copy) {\\n\\t\\t\\t\\t\\t// Recurse if we're merging plain objects or arrays\\n\\t\\t\\t\\t\\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\\n\\t\\t\\t\\t\\t\\tif (copyIsArray) {\\n\\t\\t\\t\\t\\t\\t\\tcopyIsArray = false;\\n\\t\\t\\t\\t\\t\\t\\tclone = src && isArray(src) ? src : [];\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tclone = src && isPlainObject(src) ? src : {};\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Never move original objects, clone them\\n\\t\\t\\t\\t\\t\\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\\n\\n\\t\\t\\t\\t\\t// Don't bring in undefined values\\n\\t\\t\\t\\t\\t} else if (typeof copy !== 'undefined') {\\n\\t\\t\\t\\t\\t\\tsetProperty(target, { name: name, newValue: copy });\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the modified object\\n\\treturn target;\\n};\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/extend/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/attributor/attributor.ts\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/parchment/src/attributor/attributor.ts ***!\n  \\*************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return Attributor; });\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n\\nclass Attributor {\\n    static keys(node) {\\n        return Array.from(node.attributes).map((item) => item.name);\\n    }\\n    constructor(attrName, keyName, options = {}) {\\n        this.attrName = attrName;\\n        this.keyName = keyName;\\n        const attributeBit = _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].TYPE & _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].ATTRIBUTE;\\n        this.scope =\\n            options.scope != null\\n                ? // Ignore type bits, force attribute bit\\n                    (options.scope & _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].LEVEL) | attributeBit\\n                : _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].ATTRIBUTE;\\n        if (options.whitelist != null) {\\n            this.whitelist = options.whitelist;\\n        }\\n    }\\n    add(node, value) {\\n        if (!this.canAdd(node, value)) {\\n            return false;\\n        }\\n        node.setAttribute(this.keyName, value);\\n        return true;\\n    }\\n    canAdd(_node, value) {\\n        if (this.whitelist == null) {\\n            return true;\\n        }\\n        if (typeof value === 'string') {\\n            return this.whitelist.indexOf(value.replace(/[\\\"']/g, '')) > -1;\\n        }\\n        else {\\n            return this.whitelist.indexOf(value) > -1;\\n        }\\n    }\\n    remove(node) {\\n        node.removeAttribute(this.keyName);\\n    }\\n    value(node) {\\n        const value = node.getAttribute(this.keyName);\\n        if (this.canAdd(node, value) && value) {\\n            return value;\\n        }\\n        return '';\\n    }\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/attributor/attributor.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/attributor/class.ts\":\n/*!********************************************************!*\\\n  !*** ./node_modules/parchment/src/attributor/class.ts ***!\n  \\********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _attributor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n\\nfunction match(node, prefix) {\\n    const className = node.getAttribute('class') || '';\\n    return className\\n        .split(/\\\\s+/)\\n        .filter(name => name.indexOf(`${prefix}-`) === 0);\\n}\\nclass ClassAttributor extends _attributor__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    static keys(node) {\\n        return (node.getAttribute('class') || '').split(/\\\\s+/).map(name => name\\n            .split('-')\\n            .slice(0, -1)\\n            .join('-'));\\n    }\\n    add(node, value) {\\n        if (!this.canAdd(node, value)) {\\n            return false;\\n        }\\n        this.remove(node);\\n        node.classList.add(`${this.keyName}-${value}`);\\n        return true;\\n    }\\n    remove(node) {\\n        const matches = match(node, this.keyName);\\n        matches.forEach(name => {\\n            node.classList.remove(name);\\n        });\\n        if (node.classList.length === 0) {\\n            node.removeAttribute('class');\\n        }\\n    }\\n    value(node) {\\n        const result = match(node, this.keyName)[0] || '';\\n        const value = result.slice(this.keyName.length + 1); // +1 for hyphen\\n        return this.canAdd(node, value) ? value : '';\\n    }\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ClassAttributor);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/attributor/class.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/attributor/store.ts\":\n/*!********************************************************!*\\\n  !*** ./node_modules/parchment/src/attributor/store.ts ***!\n  \\********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../registry */ \\\"./node_modules/parchment/src/registry.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _attributor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./class */ \\\"./node_modules/parchment/src/attributor/class.ts\\\");\\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./style */ \\\"./node_modules/parchment/src/attributor/style.ts\\\");\\n\\n\\n\\n\\n\\nclass AttributorStore {\\n    constructor(domNode) {\\n        this.attributes = {};\\n        this.domNode = domNode;\\n        this.build();\\n    }\\n    attribute(attribute, value) {\\n        // verb\\n        if (value) {\\n            if (attribute.add(this.domNode, value)) {\\n                if (attribute.value(this.domNode) != null) {\\n                    this.attributes[attribute.attrName] = attribute;\\n                }\\n                else {\\n                    delete this.attributes[attribute.attrName];\\n                }\\n            }\\n        }\\n        else {\\n            attribute.remove(this.domNode);\\n            delete this.attributes[attribute.attrName];\\n        }\\n    }\\n    build() {\\n        this.attributes = {};\\n        const blot = _registry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].find(this.domNode);\\n        if (blot == null) {\\n            return;\\n        }\\n        const attributes = _attributor__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].keys(this.domNode);\\n        const classes = _class__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"].keys(this.domNode);\\n        const styles = _style__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"].keys(this.domNode);\\n        attributes\\n            .concat(classes)\\n            .concat(styles)\\n            .forEach(name => {\\n            const attr = blot.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].ATTRIBUTE);\\n            if (attr instanceof _attributor__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"]) {\\n                this.attributes[attr.attrName] = attr;\\n            }\\n        });\\n    }\\n    copy(target) {\\n        Object.keys(this.attributes).forEach(key => {\\n            const value = this.attributes[key].value(this.domNode);\\n            target.format(key, value);\\n        });\\n    }\\n    move(target) {\\n        this.copy(target);\\n        Object.keys(this.attributes).forEach(key => {\\n            this.attributes[key].remove(this.domNode);\\n        });\\n        this.attributes = {};\\n    }\\n    values() {\\n        return Object.keys(this.attributes).reduce((attributes, name) => {\\n            attributes[name] = this.attributes[name].value(this.domNode);\\n            return attributes;\\n        }, {});\\n    }\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (AttributorStore);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/attributor/store.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/attributor/style.ts\":\n/*!********************************************************!*\\\n  !*** ./node_modules/parchment/src/attributor/style.ts ***!\n  \\********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _attributor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n\\nfunction camelize(name) {\\n    const parts = name.split('-');\\n    const rest = parts\\n        .slice(1)\\n        .map((part) => part[0].toUpperCase() + part.slice(1))\\n        .join('');\\n    return parts[0] + rest;\\n}\\nclass StyleAttributor extends _attributor__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    static keys(node) {\\n        return (node.getAttribute('style') || '').split(';').map(value => {\\n            const arr = value.split(':');\\n            return arr[0].trim();\\n        });\\n    }\\n    add(node, value) {\\n        if (!this.canAdd(node, value)) {\\n            return false;\\n        }\\n        // @ts-ignore\\n        node.style[camelize(this.keyName)] = value;\\n        return true;\\n    }\\n    remove(node) {\\n        // @ts-ignore\\n        node.style[camelize(this.keyName)] = '';\\n        if (!node.getAttribute('style')) {\\n            node.removeAttribute('style');\\n        }\\n    }\\n    value(node) {\\n        // @ts-ignore\\n        const value = node.style[camelize(this.keyName)];\\n        return this.canAdd(node, value) ? value : '';\\n    }\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (StyleAttributor);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/attributor/style.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/abstract/container.ts\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/abstract/container.ts ***!\n  \\***************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _parent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parent */ \\\"./node_modules/parchment/src/blot/abstract/parent.ts\\\");\\n\\n\\nclass ContainerBlot extends _parent__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"] {\\n    checkMerge() {\\n        return (this.next !== null && this.next.statics.blotName === this.statics.blotName);\\n    }\\n    deleteAt(index, length) {\\n        super.deleteAt(index, length);\\n        this.enforceAllowedChildren();\\n    }\\n    formatAt(index, length, name, value) {\\n        super.formatAt(index, length, name, value);\\n        this.enforceAllowedChildren();\\n    }\\n    insertAt(index, value, def) {\\n        super.insertAt(index, value, def);\\n        this.enforceAllowedChildren();\\n    }\\n    optimize(context) {\\n        super.optimize(context);\\n        if (this.children.length > 0 && this.next != null && this.checkMerge()) {\\n            this.next.moveChildren(this);\\n            this.next.remove();\\n        }\\n    }\\n}\\nContainerBlot.blotName = 'container';\\nContainerBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].BLOCK_BLOT;\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ContainerBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/abstract/container.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/abstract/leaf.ts\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/abstract/leaf.ts ***!\n  \\**********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _shadow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shadow */ \\\"./node_modules/parchment/src/blot/abstract/shadow.ts\\\");\\n\\n\\nclass LeafBlot extends _shadow__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"] {\\n    static value(_domNode) {\\n        return true;\\n    }\\n    index(node, offset) {\\n        if (this.domNode === node ||\\n            this.domNode.compareDocumentPosition(node) &\\n                Node.DOCUMENT_POSITION_CONTAINED_BY) {\\n            return Math.min(offset, 1);\\n        }\\n        return -1;\\n    }\\n    position(index, _inclusive) {\\n        const childNodes = Array.from(this.parent.domNode.childNodes);\\n        let offset = childNodes.indexOf(this.domNode);\\n        if (index > 0) {\\n            offset += 1;\\n        }\\n        return [this.parent.domNode, offset];\\n    }\\n    value() {\\n        return {\\n            [this.statics.blotName]: this.statics.value(this.domNode) || true,\\n        };\\n    }\\n}\\nLeafBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].INLINE_BLOT;\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (LeafBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/abstract/leaf.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/abstract/parent.ts\":\n/*!************************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/abstract/parent.ts ***!\n  \\************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _collection_linked_list__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../collection/linked-list */ \\\"./node_modules/parchment/src/collection/linked-list.ts\\\");\\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error */ \\\"./node_modules/parchment/src/error.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _shadow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shadow */ \\\"./node_modules/parchment/src/blot/abstract/shadow.ts\\\");\\n\\n\\n\\n\\nclass ParentBlot extends _shadow__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"] {\\n    constructor(scroll, domNode) {\\n        super(scroll, domNode);\\n        this.uiNode = null;\\n        this.build();\\n    }\\n    appendChild(other) {\\n        this.insertBefore(other);\\n    }\\n    attach() {\\n        super.attach();\\n        this.children.forEach(child => {\\n            child.attach();\\n        });\\n    }\\n    attachUI(node) {\\n        if (this.uiNode != null) {\\n            this.uiNode.remove();\\n        }\\n        this.uiNode = node;\\n        if (ParentBlot.uiClass) {\\n            this.uiNode.classList.add(ParentBlot.uiClass);\\n        }\\n        this.uiNode.setAttribute('contenteditable', 'false');\\n        this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\\n    }\\n    build() {\\n        this.children = new _collection_linked_list__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]();\\n        // Need to be reversed for if DOM nodes already in order\\n        Array.from(this.domNode.childNodes)\\n            .filter((node) => node !== this.uiNode)\\n            .reverse()\\n            .forEach((node) => {\\n            try {\\n                const child = makeAttachedBlot(node, this.scroll);\\n                this.insertBefore(child, this.children.head || undefined);\\n            }\\n            catch (err) {\\n                if (err instanceof _error__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"]) {\\n                    return;\\n                }\\n                else {\\n                    throw err;\\n                }\\n            }\\n        });\\n    }\\n    deleteAt(index, length) {\\n        if (index === 0 && length === this.length()) {\\n            return this.remove();\\n        }\\n        this.children.forEachAt(index, length, (child, offset, childLength) => {\\n            child.deleteAt(offset, childLength);\\n        });\\n    }\\n    descendant(criteria, index = 0) {\\n        const [child, offset] = this.children.find(index);\\n        if ((criteria.blotName == null && criteria(child)) ||\\n            (criteria.blotName != null && child instanceof criteria)) {\\n            return [child, offset];\\n        }\\n        else if (child instanceof ParentBlot) {\\n            return child.descendant(criteria, offset);\\n        }\\n        else {\\n            return [null, -1];\\n        }\\n    }\\n    descendants(criteria, index = 0, length = Number.MAX_VALUE) {\\n        let descendants = [];\\n        let lengthLeft = length;\\n        this.children.forEachAt(index, length, (child, childIndex, childLength) => {\\n            if ((criteria.blotName == null && criteria(child)) ||\\n                (criteria.blotName != null && child instanceof criteria)) {\\n                descendants.push(child);\\n            }\\n            if (child instanceof ParentBlot) {\\n                descendants = descendants.concat(child.descendants(criteria, childIndex, lengthLeft));\\n            }\\n            lengthLeft -= childLength;\\n        });\\n        return descendants;\\n    }\\n    detach() {\\n        this.children.forEach(child => {\\n            child.detach();\\n        });\\n        super.detach();\\n    }\\n    enforceAllowedChildren() {\\n        let done = false;\\n        this.children.forEach((child) => {\\n            if (done) {\\n                return;\\n            }\\n            const allowed = this.statics.allowedChildren.some((def) => child instanceof def);\\n            if (allowed) {\\n                return;\\n            }\\n            if (child.statics.scope === _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].BLOCK_BLOT) {\\n                if (child.next != null) {\\n                    this.splitAfter(child);\\n                }\\n                if (child.prev != null) {\\n                    this.splitAfter(child.prev);\\n                }\\n                child.parent.unwrap();\\n                done = true;\\n            }\\n            else if (child instanceof ParentBlot) {\\n                child.unwrap();\\n            }\\n            else {\\n                child.remove();\\n            }\\n        });\\n    }\\n    formatAt(index, length, name, value) {\\n        this.children.forEachAt(index, length, (child, offset, childLength) => {\\n            child.formatAt(offset, childLength, name, value);\\n        });\\n    }\\n    insertAt(index, value, def) {\\n        const [child, offset] = this.children.find(index);\\n        if (child) {\\n            child.insertAt(offset, value, def);\\n        }\\n        else {\\n            const blot = def == null\\n                ? this.scroll.create('text', value)\\n                : this.scroll.create(value, def);\\n            this.appendChild(blot);\\n        }\\n    }\\n    insertBefore(childBlot, refBlot) {\\n        if (childBlot.parent != null) {\\n            childBlot.parent.children.remove(childBlot);\\n        }\\n        let refDomNode = null;\\n        this.children.insertBefore(childBlot, refBlot || null);\\n        if (refBlot != null) {\\n            refDomNode = refBlot.domNode;\\n        }\\n        if (this.domNode.parentNode !== childBlot.domNode ||\\n            this.domNode.nextSibling !== refDomNode) {\\n            this.domNode.insertBefore(childBlot.domNode, refDomNode);\\n        }\\n        childBlot.parent = this;\\n        childBlot.attach();\\n    }\\n    length() {\\n        return this.children.reduce((memo, child) => {\\n            return memo + child.length();\\n        }, 0);\\n    }\\n    moveChildren(targetParent, refNode) {\\n        this.children.forEach(child => {\\n            targetParent.insertBefore(child, refNode);\\n        });\\n    }\\n    optimize(context) {\\n        super.optimize(context);\\n        this.enforceAllowedChildren();\\n        if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\\n            this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\\n        }\\n        if (this.children.length === 0) {\\n            if (this.statics.defaultChild != null) {\\n                const child = this.scroll.create(this.statics.defaultChild.blotName);\\n                this.appendChild(child);\\n                // TODO double check if necessary\\n                // child.optimize(context);\\n            }\\n            else {\\n                this.remove();\\n            }\\n        }\\n    }\\n    path(index, inclusive = false) {\\n        const [child, offset] = this.children.find(index, inclusive);\\n        const position = [[this, index]];\\n        if (child instanceof ParentBlot) {\\n            return position.concat(child.path(offset, inclusive));\\n        }\\n        else if (child != null) {\\n            position.push([child, offset]);\\n        }\\n        return position;\\n    }\\n    removeChild(child) {\\n        this.children.remove(child);\\n    }\\n    replaceWith(name, value) {\\n        const replacement = typeof name === 'string' ? this.scroll.create(name, value) : name;\\n        if (replacement instanceof ParentBlot) {\\n            this.moveChildren(replacement);\\n        }\\n        return super.replaceWith(replacement);\\n    }\\n    split(index, force = false) {\\n        if (!force) {\\n            if (index === 0) {\\n                return this;\\n            }\\n            if (index === this.length()) {\\n                return this.next;\\n            }\\n        }\\n        const after = this.clone();\\n        if (this.parent) {\\n            this.parent.insertBefore(after, this.next || undefined);\\n        }\\n        this.children.forEachAt(index, this.length(), (child, offset, _length) => {\\n            const split = child.split(offset, force);\\n            if (split != null) {\\n                after.appendChild(split);\\n            }\\n        });\\n        return after;\\n    }\\n    splitAfter(child) {\\n        const after = this.clone();\\n        while (child.next != null) {\\n            after.appendChild(child.next);\\n        }\\n        if (this.parent) {\\n            this.parent.insertBefore(after, this.next || undefined);\\n        }\\n        return after;\\n    }\\n    unwrap() {\\n        if (this.parent) {\\n            this.moveChildren(this.parent, this.next || undefined);\\n        }\\n        this.remove();\\n    }\\n    update(mutations, _context) {\\n        const addedNodes = [];\\n        const removedNodes = [];\\n        mutations.forEach(mutation => {\\n            if (mutation.target === this.domNode && mutation.type === 'childList') {\\n                addedNodes.push.apply(addedNodes, mutation.addedNodes);\\n                removedNodes.push.apply(removedNodes, mutation.removedNodes);\\n            }\\n        });\\n        removedNodes.forEach((node) => {\\n            // Check node has actually been removed\\n            // One exception is Chrome does not immediately remove IFRAMEs\\n            // from DOM but MutationRecord is correct in its reported removal\\n            if (node.parentNode != null &&\\n                // @ts-ignore\\n                node.tagName !== 'IFRAME' &&\\n                document.body.compareDocumentPosition(node) &\\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) {\\n                return;\\n            }\\n            const blot = this.scroll.find(node);\\n            if (blot == null) {\\n                return;\\n            }\\n            if (blot.domNode.parentNode == null ||\\n                blot.domNode.parentNode === this.domNode) {\\n                blot.detach();\\n            }\\n        });\\n        addedNodes\\n            .filter(node => {\\n            return node.parentNode === this.domNode || node === this.uiNode;\\n        })\\n            .sort((a, b) => {\\n            if (a === b) {\\n                return 0;\\n            }\\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\\n                return 1;\\n            }\\n            return -1;\\n        })\\n            .forEach(node => {\\n            let refBlot = null;\\n            if (node.nextSibling != null) {\\n                refBlot = this.scroll.find(node.nextSibling);\\n            }\\n            const blot = makeAttachedBlot(node, this.scroll);\\n            if (blot.next !== refBlot || blot.next == null) {\\n                if (blot.parent != null) {\\n                    blot.parent.removeChild(this);\\n                }\\n                this.insertBefore(blot, refBlot || undefined);\\n            }\\n        });\\n        this.enforceAllowedChildren();\\n    }\\n}\\nParentBlot.uiClass = '';\\nfunction makeAttachedBlot(node, scroll) {\\n    let blot = scroll.find(node);\\n    if (blot == null) {\\n        try {\\n            blot = scroll.create(node);\\n        }\\n        catch (e) {\\n            blot = scroll.create(_scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].INLINE);\\n            Array.from(node.childNodes).forEach((child) => {\\n                // @ts-ignore\\n                blot.domNode.appendChild(child);\\n            });\\n            if (node.parentNode) {\\n                node.parentNode.replaceChild(blot.domNode, node);\\n            }\\n            blot.attach();\\n        }\\n    }\\n    return blot;\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ParentBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/abstract/parent.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/abstract/shadow.ts\":\n/*!************************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/abstract/shadow.ts ***!\n  \\************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error */ \\\"./node_modules/parchment/src/error.ts\\\");\\n/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../registry */ \\\"./node_modules/parchment/src/registry.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n\\n\\n\\nclass ShadowBlot {\\n    constructor(scroll, domNode) {\\n        this.scroll = scroll;\\n        this.domNode = domNode;\\n        _registry__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].blots.set(domNode, this);\\n        this.prev = null;\\n        this.next = null;\\n    }\\n    static create(value) {\\n        if (this.tagName == null) {\\n            throw new _error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]('Blot definition missing tagName');\\n        }\\n        let node;\\n        if (Array.isArray(this.tagName)) {\\n            if (typeof value === 'string') {\\n                value = value.toUpperCase();\\n                if (parseInt(value, 10).toString() === value) {\\n                    value = parseInt(value, 10);\\n                }\\n            }\\n            if (typeof value === 'number') {\\n                node = document.createElement(this.tagName[value - 1]);\\n            }\\n            else if (this.tagName.indexOf(value) > -1) {\\n                node = document.createElement(value);\\n            }\\n            else {\\n                node = document.createElement(this.tagName[0]);\\n            }\\n        }\\n        else {\\n            node = document.createElement(this.tagName);\\n        }\\n        if (this.className) {\\n            node.classList.add(this.className);\\n        }\\n        return node;\\n    }\\n    // Hack for accessing inherited static methods\\n    get statics() {\\n        return this.constructor;\\n    }\\n    attach() {\\n        // Nothing to do\\n    }\\n    clone() {\\n        const domNode = this.domNode.cloneNode(false);\\n        return this.scroll.create(domNode);\\n    }\\n    detach() {\\n        if (this.parent != null) {\\n            this.parent.removeChild(this);\\n        }\\n        _registry__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].blots.delete(this.domNode);\\n    }\\n    deleteAt(index, length) {\\n        const blot = this.isolate(index, length);\\n        blot.remove();\\n    }\\n    formatAt(index, length, name, value) {\\n        const blot = this.isolate(index, length);\\n        if (this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].BLOT) != null && value) {\\n            blot.wrap(name, value);\\n        }\\n        else if (this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].ATTRIBUTE) != null) {\\n            const parent = this.scroll.create(this.statics.scope);\\n            blot.wrap(parent);\\n            parent.format(name, value);\\n        }\\n    }\\n    insertAt(index, value, def) {\\n        const blot = def == null\\n            ? this.scroll.create('text', value)\\n            : this.scroll.create(value, def);\\n        const ref = this.split(index);\\n        this.parent.insertBefore(blot, ref || undefined);\\n    }\\n    isolate(index, length) {\\n        const target = this.split(index);\\n        if (target == null) {\\n            throw new Error('Attempt to isolate at end');\\n        }\\n        target.split(length);\\n        return target;\\n    }\\n    length() {\\n        return 1;\\n    }\\n    offset(root = this.parent) {\\n        if (this.parent == null || this === root) {\\n            return 0;\\n        }\\n        return this.parent.children.offset(this) + this.parent.offset(root);\\n    }\\n    optimize(_context) {\\n        if (this.statics.requiredContainer &&\\n            !(this.parent instanceof this.statics.requiredContainer)) {\\n            this.wrap(this.statics.requiredContainer.blotName);\\n        }\\n    }\\n    remove() {\\n        if (this.domNode.parentNode != null) {\\n            this.domNode.parentNode.removeChild(this.domNode);\\n        }\\n        this.detach();\\n    }\\n    replaceWith(name, value) {\\n        const replacement = typeof name === 'string' ? this.scroll.create(name, value) : name;\\n        if (this.parent != null) {\\n            this.parent.insertBefore(replacement, this.next || undefined);\\n            this.remove();\\n        }\\n        return replacement;\\n    }\\n    split(index, _force) {\\n        return index === 0 ? this : this.next;\\n    }\\n    update(_mutations, _context) {\\n        // Nothing to do by default\\n    }\\n    wrap(name, value) {\\n        const wrapper = typeof name === 'string'\\n            ? this.scroll.create(name, value)\\n            : name;\\n        if (this.parent != null) {\\n            this.parent.insertBefore(wrapper, this.next || undefined);\\n        }\\n        if (typeof wrapper.appendChild !== 'function') {\\n            throw new _error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](`Cannot wrap ${name}`);\\n        }\\n        wrapper.appendChild(this);\\n        return wrapper;\\n    }\\n}\\nShadowBlot.blotName = 'abstract';\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ShadowBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/abstract/shadow.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/block.ts\":\n/*!**************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/block.ts ***!\n  \\**************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _attributor_attributor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../attributor/attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n/* harmony import */ var _attributor_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../attributor/store */ \\\"./node_modules/parchment/src/attributor/store.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _abstract_leaf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/leaf */ \\\"./node_modules/parchment/src/blot/abstract/leaf.ts\\\");\\n/* harmony import */ var _abstract_parent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abstract/parent */ \\\"./node_modules/parchment/src/blot/abstract/parent.ts\\\");\\n/* harmony import */ var _inline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./inline */ \\\"./node_modules/parchment/src/blot/inline.ts\\\");\\n\\n\\n\\n\\n\\n\\nclass BlockBlot extends _abstract_parent__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"] {\\n    constructor(scroll, domNode) {\\n        super(scroll, domNode);\\n        this.attributes = new _attributor_store__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](this.domNode);\\n    }\\n    static formats(domNode, scroll) {\\n        const match = scroll.query(BlockBlot.blotName);\\n        if (match != null &&\\n            domNode.tagName === match.tagName) {\\n            return undefined;\\n        }\\n        else if (typeof this.tagName === 'string') {\\n            return true;\\n        }\\n        else if (Array.isArray(this.tagName)) {\\n            return domNode.tagName.toLowerCase();\\n        }\\n    }\\n    format(name, value) {\\n        const format = this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].BLOCK);\\n        if (format == null) {\\n            return;\\n        }\\n        else if (format instanceof _attributor_attributor__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]) {\\n            this.attributes.attribute(format, value);\\n        }\\n        else if (name === this.statics.blotName && !value) {\\n            this.replaceWith(BlockBlot.blotName);\\n        }\\n        else if (value &&\\n            (name !== this.statics.blotName || this.formats()[name] !== value)) {\\n            this.replaceWith(name, value);\\n        }\\n    }\\n    formats() {\\n        const formats = this.attributes.values();\\n        const format = this.statics.formats(this.domNode, this.scroll);\\n        if (format != null) {\\n            formats[this.statics.blotName] = format;\\n        }\\n        return formats;\\n    }\\n    formatAt(index, length, name, value) {\\n        if (this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].BLOCK) != null) {\\n            this.format(name, value);\\n        }\\n        else {\\n            super.formatAt(index, length, name, value);\\n        }\\n    }\\n    insertAt(index, value, def) {\\n        if (def == null || this.scroll.query(value, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].INLINE) != null) {\\n            // Insert text or inline\\n            super.insertAt(index, value, def);\\n        }\\n        else {\\n            const after = this.split(index);\\n            if (after != null) {\\n                const blot = this.scroll.create(value, def);\\n                after.parent.insertBefore(blot, after);\\n            }\\n            else {\\n                throw new Error('Attempt to insertAt after block boundaries');\\n            }\\n        }\\n    }\\n    replaceWith(name, value) {\\n        const replacement = super.replaceWith(name, value);\\n        this.attributes.copy(replacement);\\n        return replacement;\\n    }\\n    update(mutations, context) {\\n        super.update(mutations, context);\\n        const attributeChanged = mutations.some(mutation => mutation.target === this.domNode && mutation.type === 'attributes');\\n        if (attributeChanged) {\\n            this.attributes.build();\\n        }\\n    }\\n}\\nBlockBlot.blotName = 'block';\\nBlockBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].BLOCK_BLOT;\\nBlockBlot.tagName = 'P';\\nBlockBlot.allowedChildren = [\\n    _inline__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"],\\n    BlockBlot,\\n    _abstract_leaf__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"],\\n];\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (BlockBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/block.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/embed.ts\":\n/*!**************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/embed.ts ***!\n  \\**************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _abstract_leaf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract/leaf */ \\\"./node_modules/parchment/src/blot/abstract/leaf.ts\\\");\\n\\nclass EmbedBlot extends _abstract_leaf__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    static formats(_domNode, _scroll) {\\n        return undefined;\\n    }\\n    format(name, value) {\\n        // super.formatAt wraps, which is what we want in general,\\n        // but this allows subclasses to overwrite for formats\\n        // that just apply to particular embeds\\n        super.formatAt(0, this.length(), name, value);\\n    }\\n    formatAt(index, length, name, value) {\\n        if (index === 0 && length === this.length()) {\\n            this.format(name, value);\\n        }\\n        else {\\n            super.formatAt(index, length, name, value);\\n        }\\n    }\\n    formats() {\\n        return this.statics.formats(this.domNode, this.scroll);\\n    }\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (EmbedBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/embed.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/inline.ts\":\n/*!***************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/inline.ts ***!\n  \\***************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _attributor_attributor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../attributor/attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n/* harmony import */ var _attributor_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../attributor/store */ \\\"./node_modules/parchment/src/attributor/store.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _abstract_leaf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/leaf */ \\\"./node_modules/parchment/src/blot/abstract/leaf.ts\\\");\\n/* harmony import */ var _abstract_parent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abstract/parent */ \\\"./node_modules/parchment/src/blot/abstract/parent.ts\\\");\\n\\n\\n\\n\\n\\n// Shallow object comparison\\nfunction isEqual(obj1, obj2) {\\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\\n        return false;\\n    }\\n    // @ts-ignore\\n    for (const prop in obj1) {\\n        // @ts-ignore\\n        if (obj1[prop] !== obj2[prop]) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\nclass InlineBlot extends _abstract_parent__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"] {\\n    constructor(scroll, domNode) {\\n        super(scroll, domNode);\\n        this.attributes = new _attributor_store__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](this.domNode);\\n    }\\n    static formats(domNode, scroll) {\\n        const match = scroll.query(InlineBlot.blotName);\\n        if (match != null &&\\n            domNode.tagName === match.tagName) {\\n            return undefined;\\n        }\\n        else if (typeof this.tagName === 'string') {\\n            return true;\\n        }\\n        else if (Array.isArray(this.tagName)) {\\n            return domNode.tagName.toLowerCase();\\n        }\\n        return undefined;\\n    }\\n    format(name, value) {\\n        if (name === this.statics.blotName && !value) {\\n            this.children.forEach(child => {\\n                if (!(child instanceof InlineBlot)) {\\n                    child = child.wrap(InlineBlot.blotName, true);\\n                }\\n                this.attributes.copy(child);\\n            });\\n            this.unwrap();\\n        }\\n        else {\\n            const format = this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].INLINE);\\n            if (format == null) {\\n                return;\\n            }\\n            if (format instanceof _attributor_attributor__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]) {\\n                this.attributes.attribute(format, value);\\n            }\\n            else if (value &&\\n                (name !== this.statics.blotName || this.formats()[name] !== value)) {\\n                this.replaceWith(name, value);\\n            }\\n        }\\n    }\\n    formats() {\\n        const formats = this.attributes.values();\\n        const format = this.statics.formats(this.domNode, this.scroll);\\n        if (format != null) {\\n            formats[this.statics.blotName] = format;\\n        }\\n        return formats;\\n    }\\n    formatAt(index, length, name, value) {\\n        if (this.formats()[name] != null ||\\n            this.scroll.query(name, _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].ATTRIBUTE)) {\\n            const blot = this.isolate(index, length);\\n            blot.format(name, value);\\n        }\\n        else {\\n            super.formatAt(index, length, name, value);\\n        }\\n    }\\n    optimize(context) {\\n        super.optimize(context);\\n        const formats = this.formats();\\n        if (Object.keys(formats).length === 0) {\\n            return this.unwrap(); // unformatted span\\n        }\\n        const next = this.next;\\n        if (next instanceof InlineBlot &&\\n            next.prev === this &&\\n            isEqual(formats, next.formats())) {\\n            next.moveChildren(this);\\n            next.remove();\\n        }\\n    }\\n    replaceWith(name, value) {\\n        const replacement = super.replaceWith(name, value);\\n        this.attributes.copy(replacement);\\n        return replacement;\\n    }\\n    update(mutations, context) {\\n        super.update(mutations, context);\\n        const attributeChanged = mutations.some(mutation => mutation.target === this.domNode && mutation.type === 'attributes');\\n        if (attributeChanged) {\\n            this.attributes.build();\\n        }\\n    }\\n    wrap(name, value) {\\n        const wrapper = super.wrap(name, value);\\n        if (wrapper instanceof InlineBlot) {\\n            this.attributes.move(wrapper);\\n        }\\n        return wrapper;\\n    }\\n}\\nInlineBlot.allowedChildren = [InlineBlot, _abstract_leaf__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"]];\\nInlineBlot.blotName = 'inline';\\nInlineBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].INLINE_BLOT;\\nInlineBlot.tagName = 'SPAN';\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (InlineBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/inline.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/scroll.ts\":\n/*!***************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/scroll.ts ***!\n  \\***************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../registry */ \\\"./node_modules/parchment/src/registry.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _abstract_container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract/container */ \\\"./node_modules/parchment/src/blot/abstract/container.ts\\\");\\n/* harmony import */ var _abstract_parent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/parent */ \\\"./node_modules/parchment/src/blot/abstract/parent.ts\\\");\\n/* harmony import */ var _block__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block */ \\\"./node_modules/parchment/src/blot/block.ts\\\");\\n\\n\\n\\n\\n\\nconst OBSERVER_CONFIG = {\\n    attributes: true,\\n    characterData: true,\\n    characterDataOldValue: true,\\n    childList: true,\\n    subtree: true,\\n};\\nconst MAX_OPTIMIZE_ITERATIONS = 100;\\nclass ScrollBlot extends _abstract_parent__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"] {\\n    constructor(registry, node) {\\n        // @ts-ignore\\n        super(null, node);\\n        this.registry = registry;\\n        this.scroll = this;\\n        this.build();\\n        this.observer = new MutationObserver((mutations) => {\\n            this.update(mutations);\\n        });\\n        this.observer.observe(this.domNode, OBSERVER_CONFIG);\\n        this.attach();\\n    }\\n    create(input, value) {\\n        return this.registry.create(this, input, value);\\n    }\\n    find(node, bubble = false) {\\n        return this.registry.find(node, bubble);\\n    }\\n    query(query, scope = _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].ANY) {\\n        return this.registry.query(query, scope);\\n    }\\n    register(...definitions) {\\n        return this.registry.register(...definitions);\\n    }\\n    build() {\\n        if (this.scroll == null) {\\n            return;\\n        }\\n        super.build();\\n    }\\n    detach() {\\n        super.detach();\\n        this.observer.disconnect();\\n    }\\n    deleteAt(index, length) {\\n        this.update();\\n        if (index === 0 && length === this.length()) {\\n            this.children.forEach(child => {\\n                child.remove();\\n            });\\n        }\\n        else {\\n            super.deleteAt(index, length);\\n        }\\n    }\\n    formatAt(index, length, name, value) {\\n        this.update();\\n        super.formatAt(index, length, name, value);\\n    }\\n    insertAt(index, value, def) {\\n        this.update();\\n        super.insertAt(index, value, def);\\n    }\\n    optimize(mutations = [], context = {}) {\\n        super.optimize(context);\\n        const mutationsMap = context.mutationsMap || new WeakMap();\\n        // We must modify mutations directly, cannot make copy and then modify\\n        let records = Array.from(this.observer.takeRecords());\\n        // Array.push currently seems to be implemented by a non-tail recursive function\\n        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\\n        while (records.length > 0) {\\n            mutations.push(records.pop());\\n        }\\n        const mark = (blot, markParent = true) => {\\n            if (blot == null || blot === this) {\\n                return;\\n            }\\n            if (blot.domNode.parentNode == null) {\\n                return;\\n            }\\n            if (!mutationsMap.has(blot.domNode)) {\\n                mutationsMap.set(blot.domNode, []);\\n            }\\n            if (markParent) {\\n                mark(blot.parent);\\n            }\\n        };\\n        const optimize = (blot) => {\\n            // Post-order traversal\\n            if (!mutationsMap.has(blot.domNode)) {\\n                return;\\n            }\\n            if (blot instanceof _abstract_parent__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"]) {\\n                blot.children.forEach(optimize);\\n            }\\n            mutationsMap.delete(blot.domNode);\\n            blot.optimize(context);\\n        };\\n        let remaining = mutations;\\n        for (let i = 0; remaining.length > 0; i += 1) {\\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\\n                throw new Error('[Parchment] Maximum optimize iterations reached');\\n            }\\n            remaining.forEach((mutation) => {\\n                const blot = this.find(mutation.target, true);\\n                if (blot == null) {\\n                    return;\\n                }\\n                if (blot.domNode === mutation.target) {\\n                    if (mutation.type === 'childList') {\\n                        mark(this.find(mutation.previousSibling, false));\\n                        Array.from(mutation.addedNodes).forEach((node) => {\\n                            const child = this.find(node, false);\\n                            mark(child, false);\\n                            if (child instanceof _abstract_parent__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"]) {\\n                                child.children.forEach((grandChild) => {\\n                                    mark(grandChild, false);\\n                                });\\n                            }\\n                        });\\n                    }\\n                    else if (mutation.type === 'attributes') {\\n                        mark(blot.prev);\\n                    }\\n                }\\n                mark(blot);\\n            });\\n            this.children.forEach(optimize);\\n            remaining = Array.from(this.observer.takeRecords());\\n            records = remaining.slice();\\n            while (records.length > 0) {\\n                mutations.push(records.pop());\\n            }\\n        }\\n    }\\n    update(mutations, context = {}) {\\n        mutations = mutations || this.observer.takeRecords();\\n        const mutationsMap = new WeakMap();\\n        mutations\\n            .map((mutation) => {\\n            const blot = _registry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].find(mutation.target, true);\\n            if (blot == null) {\\n                return null;\\n            }\\n            if (mutationsMap.has(blot.domNode)) {\\n                mutationsMap.get(blot.domNode).push(mutation);\\n                return null;\\n            }\\n            else {\\n                mutationsMap.set(blot.domNode, [mutation]);\\n                return blot;\\n            }\\n        })\\n            .forEach((blot) => {\\n            if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\\n                blot.update(mutationsMap.get(blot.domNode) || [], context);\\n            }\\n        });\\n        context.mutationsMap = mutationsMap;\\n        if (mutationsMap.has(this.domNode)) {\\n            super.update(mutationsMap.get(this.domNode), context);\\n        }\\n        this.optimize(mutations, context);\\n    }\\n}\\nScrollBlot.blotName = 'scroll';\\nScrollBlot.defaultChild = _block__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"];\\nScrollBlot.allowedChildren = [_block__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"], _abstract_container__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"]];\\nScrollBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].BLOCK_BLOT;\\nScrollBlot.tagName = 'DIV';\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ScrollBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/scroll.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/blot/text.ts\":\n/*!*************************************************!*\\\n  !*** ./node_modules/parchment/src/blot/text.ts ***!\n  \\*************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony import */ var _abstract_leaf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abstract/leaf */ \\\"./node_modules/parchment/src/blot/abstract/leaf.ts\\\");\\n\\n\\nclass TextBlot extends _abstract_leaf__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"] {\\n    constructor(scroll, node) {\\n        super(scroll, node);\\n        this.text = this.statics.value(this.domNode);\\n    }\\n    static create(value) {\\n        return document.createTextNode(value);\\n    }\\n    static value(domNode) {\\n        return domNode.data;\\n    }\\n    deleteAt(index, length) {\\n        this.domNode.data = this.text =\\n            this.text.slice(0, index) + this.text.slice(index + length);\\n    }\\n    index(node, offset) {\\n        if (this.domNode === node) {\\n            return offset;\\n        }\\n        return -1;\\n    }\\n    insertAt(index, value, def) {\\n        if (def == null) {\\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\\n            this.domNode.data = this.text;\\n        }\\n        else {\\n            super.insertAt(index, value, def);\\n        }\\n    }\\n    length() {\\n        return this.text.length;\\n    }\\n    optimize(context) {\\n        super.optimize(context);\\n        this.text = this.statics.value(this.domNode);\\n        if (this.text.length === 0) {\\n            this.remove();\\n        }\\n        else if (this.next instanceof TextBlot && this.next.prev === this) {\\n            this.insertAt(this.length(), this.next.value());\\n            this.next.remove();\\n        }\\n    }\\n    position(index, _inclusive = false) {\\n        return [this.domNode, index];\\n    }\\n    split(index, force = false) {\\n        if (!force) {\\n            if (index === 0) {\\n                return this;\\n            }\\n            if (index === this.length()) {\\n                return this.next;\\n            }\\n        }\\n        const after = this.scroll.create(this.domNode.splitText(index));\\n        this.parent.insertBefore(after, this.next || undefined);\\n        this.text = this.statics.value(this.domNode);\\n        return after;\\n    }\\n    update(mutations, _context) {\\n        if (mutations.some(mutation => {\\n            return (mutation.type === 'characterData' && mutation.target === this.domNode);\\n        })) {\\n            this.text = this.statics.value(this.domNode);\\n        }\\n    }\\n    value() {\\n        return this.text;\\n    }\\n}\\nTextBlot.blotName = 'text';\\nTextBlot.scope = _scope__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].INLINE_BLOT;\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (TextBlot);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/blot/text.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/collection/linked-list.ts\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/parchment/src/collection/linked-list.ts ***!\n  \\**************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\nclass LinkedList {\\n    constructor() {\\n        this.head = null;\\n        this.tail = null;\\n        this.length = 0;\\n    }\\n    append(...nodes) {\\n        this.insertBefore(nodes[0], null);\\n        if (nodes.length > 1) {\\n            this.append.apply(this, nodes.slice(1));\\n        }\\n    }\\n    at(index) {\\n        const next = this.iterator();\\n        let cur = next();\\n        while (cur && index > 0) {\\n            index -= 1;\\n            cur = next();\\n        }\\n        return cur;\\n    }\\n    contains(node) {\\n        const next = this.iterator();\\n        let cur = next();\\n        while (cur) {\\n            if (cur === node) {\\n                return true;\\n            }\\n            cur = next();\\n        }\\n        return false;\\n    }\\n    indexOf(node) {\\n        const next = this.iterator();\\n        let cur = next();\\n        let index = 0;\\n        while (cur) {\\n            if (cur === node) {\\n                return index;\\n            }\\n            index += 1;\\n            cur = next();\\n        }\\n        return -1;\\n    }\\n    insertBefore(node, refNode) {\\n        if (node == null) {\\n            return;\\n        }\\n        this.remove(node);\\n        node.next = refNode;\\n        if (refNode != null) {\\n            node.prev = refNode.prev;\\n            if (refNode.prev != null) {\\n                refNode.prev.next = node;\\n            }\\n            refNode.prev = node;\\n            if (refNode === this.head) {\\n                this.head = node;\\n            }\\n        }\\n        else if (this.tail != null) {\\n            this.tail.next = node;\\n            node.prev = this.tail;\\n            this.tail = node;\\n        }\\n        else {\\n            node.prev = null;\\n            this.head = this.tail = node;\\n        }\\n        this.length += 1;\\n    }\\n    offset(target) {\\n        let index = 0;\\n        let cur = this.head;\\n        while (cur != null) {\\n            if (cur === target) {\\n                return index;\\n            }\\n            index += cur.length();\\n            cur = cur.next;\\n        }\\n        return -1;\\n    }\\n    remove(node) {\\n        if (!this.contains(node)) {\\n            return;\\n        }\\n        if (node.prev != null) {\\n            node.prev.next = node.next;\\n        }\\n        if (node.next != null) {\\n            node.next.prev = node.prev;\\n        }\\n        if (node === this.head) {\\n            this.head = node.next;\\n        }\\n        if (node === this.tail) {\\n            this.tail = node.prev;\\n        }\\n        this.length -= 1;\\n    }\\n    iterator(curNode = this.head) {\\n        // TODO use yield when we can\\n        return () => {\\n            const ret = curNode;\\n            if (curNode != null) {\\n                curNode = curNode.next;\\n            }\\n            return ret;\\n        };\\n    }\\n    find(index, inclusive = false) {\\n        const next = this.iterator();\\n        let cur = next();\\n        while (cur) {\\n            const length = cur.length();\\n            if (index < length ||\\n                (inclusive &&\\n                    index === length &&\\n                    (cur.next == null || cur.next.length() !== 0))) {\\n                return [cur, index];\\n            }\\n            index -= length;\\n            cur = next();\\n        }\\n        return [null, 0];\\n    }\\n    forEach(callback) {\\n        const next = this.iterator();\\n        let cur = next();\\n        while (cur) {\\n            callback(cur);\\n            cur = next();\\n        }\\n    }\\n    forEachAt(index, length, callback) {\\n        if (length <= 0) {\\n            return;\\n        }\\n        const [startNode, offset] = this.find(index);\\n        let curIndex = index - offset;\\n        const next = this.iterator(startNode);\\n        let cur = next();\\n        while (cur && curIndex < index + length) {\\n            const curLength = cur.length();\\n            if (index > curIndex) {\\n                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\\n            }\\n            else {\\n                callback(cur, 0, Math.min(curLength, index + length - curIndex));\\n            }\\n            curIndex += curLength;\\n            cur = next();\\n        }\\n    }\\n    map(callback) {\\n        return this.reduce((memo, cur) => {\\n            memo.push(callback(cur));\\n            return memo;\\n        }, []);\\n    }\\n    reduce(callback, memo) {\\n        const next = this.iterator();\\n        let cur = next();\\n        while (cur) {\\n            memo = callback(memo, cur);\\n            cur = next();\\n        }\\n        return memo;\\n    }\\n}\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (LinkedList);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/collection/linked-list.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/error.ts\":\n/*!*********************************************!*\\\n  !*** ./node_modules/parchment/src/error.ts ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return ParchmentError; });\\nclass ParchmentError extends Error {\\n    constructor(message) {\\n        message = '[Parchment] ' + message;\\n        super(message);\\n        this.message = message;\\n        this.name = this.constructor.name;\\n    }\\n}\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/error.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/parchment.ts\":\n/*!*************************************************!*\\\n  !*** ./node_modules/parchment/src/parchment.ts ***!\n  \\*************************************************/\n/*! exports provided: ParentBlot, ContainerBlot, LeafBlot, EmbedBlot, ScrollBlot, BlockBlot, InlineBlot, TextBlot, Attributor, ClassAttributor, StyleAttributor, AttributorStore, Registry, Scope */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _blot_abstract_container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blot/abstract/container */ \\\"./node_modules/parchment/src/blot/abstract/container.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ContainerBlot\\\", function() { return _blot_abstract_container__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_abstract_leaf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blot/abstract/leaf */ \\\"./node_modules/parchment/src/blot/abstract/leaf.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"LeafBlot\\\", function() { return _blot_abstract_leaf__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_abstract_parent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blot/abstract/parent */ \\\"./node_modules/parchment/src/blot/abstract/parent.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ParentBlot\\\", function() { return _blot_abstract_parent__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_block__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blot/block */ \\\"./node_modules/parchment/src/blot/block.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"BlockBlot\\\", function() { return _blot_block__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_embed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blot/embed */ \\\"./node_modules/parchment/src/blot/embed.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"EmbedBlot\\\", function() { return _blot_embed__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_inline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blot/inline */ \\\"./node_modules/parchment/src/blot/inline.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"InlineBlot\\\", function() { return _blot_inline__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_scroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blot/scroll */ \\\"./node_modules/parchment/src/blot/scroll.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ScrollBlot\\\", function() { return _blot_scroll__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _blot_text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./blot/text */ \\\"./node_modules/parchment/src/blot/text.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"TextBlot\\\", function() { return _blot_text__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _attributor_attributor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./attributor/attributor */ \\\"./node_modules/parchment/src/attributor/attributor.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Attributor\\\", function() { return _attributor_attributor__WEBPACK_IMPORTED_MODULE_8__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _attributor_class__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./attributor/class */ \\\"./node_modules/parchment/src/attributor/class.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ClassAttributor\\\", function() { return _attributor_class__WEBPACK_IMPORTED_MODULE_9__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _attributor_store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./attributor/store */ \\\"./node_modules/parchment/src/attributor/store.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"AttributorStore\\\", function() { return _attributor_store__WEBPACK_IMPORTED_MODULE_10__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _attributor_style__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./attributor/style */ \\\"./node_modules/parchment/src/attributor/style.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"StyleAttributor\\\", function() { return _attributor_style__WEBPACK_IMPORTED_MODULE_11__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./registry */ \\\"./node_modules/parchment/src/registry.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Registry\\\", function() { return _registry__WEBPACK_IMPORTED_MODULE_12__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Scope\\\", function() { return _scope__WEBPACK_IMPORTED_MODULE_13__[\\\"default\\\"]; });\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/parchment.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/registry.ts\":\n/*!************************************************!*\\\n  !*** ./node_modules/parchment/src/registry.ts ***!\n  \\************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return Registry; });\\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \\\"./node_modules/parchment/src/error.ts\\\");\\n/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope */ \\\"./node_modules/parchment/src/scope.ts\\\");\\n\\n\\nclass Registry {\\n    constructor() {\\n        this.attributes = {};\\n        this.classes = {};\\n        this.tags = {};\\n        this.types = {};\\n    }\\n    static find(node, bubble = false) {\\n        if (node == null) {\\n            return null;\\n        }\\n        if (this.blots.has(node)) {\\n            return this.blots.get(node) || null;\\n        }\\n        if (bubble) {\\n            return this.find(node.parentNode, bubble);\\n        }\\n        return null;\\n    }\\n    create(scroll, input, value) {\\n        const match = this.query(input);\\n        if (match == null) {\\n            throw new _error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](`Unable to create ${input} blot`);\\n        }\\n        const blotClass = match;\\n        const node = \\n        // @ts-ignore\\n        input instanceof Node || input.nodeType === Node.TEXT_NODE\\n            ? input\\n            : blotClass.create(value);\\n        const blot = new blotClass(scroll, node, value);\\n        Registry.blots.set(blot.domNode, blot);\\n        return blot;\\n    }\\n    find(node, bubble = false) {\\n        return Registry.find(node, bubble);\\n    }\\n    query(query, scope = _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].ANY) {\\n        let match;\\n        if (typeof query === 'string') {\\n            match = this.types[query] || this.attributes[query];\\n            // @ts-ignore\\n        }\\n        else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\\n            match = this.types.text;\\n        }\\n        else if (typeof query === 'number') {\\n            if (query & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].LEVEL & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].BLOCK) {\\n                match = this.types.block;\\n            }\\n            else if (query & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].LEVEL & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].INLINE) {\\n                match = this.types.inline;\\n            }\\n        }\\n        else if (query instanceof HTMLElement) {\\n            const names = (query.getAttribute('class') || '').split(/\\\\s+/);\\n            names.some(name => {\\n                match = this.classes[name];\\n                if (match) {\\n                    return true;\\n                }\\n                return false;\\n            });\\n            match = match || this.tags[query.tagName];\\n        }\\n        if (match == null) {\\n            return null;\\n        }\\n        // @ts-ignore\\n        if (scope & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].LEVEL & match.scope && scope & _scope__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].TYPE & match.scope) {\\n            return match;\\n        }\\n        return null;\\n    }\\n    register(...definitions) {\\n        if (definitions.length > 1) {\\n            return definitions.map(d => {\\n                return this.register(d);\\n            });\\n        }\\n        const definition = definitions[0];\\n        if (typeof definition.blotName !== 'string' &&\\n            typeof definition.attrName !== 'string') {\\n            throw new _error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]('Invalid definition');\\n        }\\n        else if (definition.blotName === 'abstract') {\\n            throw new _error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]('Cannot register abstract class');\\n        }\\n        this.types[definition.blotName || definition.attrName] = definition;\\n        if (typeof definition.keyName === 'string') {\\n            this.attributes[definition.keyName] = definition;\\n        }\\n        else {\\n            if (definition.className != null) {\\n                this.classes[definition.className] = definition;\\n            }\\n            if (definition.tagName != null) {\\n                if (Array.isArray(definition.tagName)) {\\n                    definition.tagName = definition.tagName.map((tagName) => {\\n                        return tagName.toUpperCase();\\n                    });\\n                }\\n                else {\\n                    definition.tagName = definition.tagName.toUpperCase();\\n                }\\n                const tagNames = Array.isArray(definition.tagName)\\n                    ? definition.tagName\\n                    : [definition.tagName];\\n                tagNames.forEach((tag) => {\\n                    if (this.tags[tag] == null || definition.className == null) {\\n                        this.tags[tag] = definition;\\n                    }\\n                });\\n            }\\n        }\\n        return definition;\\n    }\\n}\\nRegistry.blots = new WeakMap();\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/registry.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/parchment/src/scope.ts\":\n/*!*********************************************!*\\\n  !*** ./node_modules/parchment/src/scope.ts ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\nvar Scope;\\n(function (Scope) {\\n    Scope[Scope[\\\"TYPE\\\"] = 3] = \\\"TYPE\\\";\\n    Scope[Scope[\\\"LEVEL\\\"] = 12] = \\\"LEVEL\\\";\\n    Scope[Scope[\\\"ATTRIBUTE\\\"] = 13] = \\\"ATTRIBUTE\\\";\\n    Scope[Scope[\\\"BLOT\\\"] = 14] = \\\"BLOT\\\";\\n    Scope[Scope[\\\"INLINE\\\"] = 7] = \\\"INLINE\\\";\\n    Scope[Scope[\\\"BLOCK\\\"] = 11] = \\\"BLOCK\\\";\\n    Scope[Scope[\\\"BLOCK_BLOT\\\"] = 10] = \\\"BLOCK_BLOT\\\";\\n    Scope[Scope[\\\"INLINE_BLOT\\\"] = 6] = \\\"INLINE_BLOT\\\";\\n    Scope[Scope[\\\"BLOCK_ATTRIBUTE\\\"] = 9] = \\\"BLOCK_ATTRIBUTE\\\";\\n    Scope[Scope[\\\"INLINE_ATTRIBUTE\\\"] = 5] = \\\"INLINE_ATTRIBUTE\\\";\\n    Scope[Scope[\\\"ANY\\\"] = 15] = \\\"ANY\\\";\\n})(Scope || (Scope = {}));\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (Scope);\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/parchment/src/scope.ts?\");\n\n/***/ }),\n\n/***/ \"./node_modules/quill-delta/dist/AttributeMap.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/quill-delta/dist/AttributeMap.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar deep_equal_1 = __importDefault(__webpack_require__(/*! deep-equal */ \\\"./node_modules/deep-equal/index.js\\\"));\\nvar extend_1 = __importDefault(__webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\"));\\nvar AttributeMap;\\n(function (AttributeMap) {\\n    function compose(a, b, keepNull) {\\n        if (a === void 0) { a = {}; }\\n        if (b === void 0) { b = {}; }\\n        if (typeof a !== 'object') {\\n            a = {};\\n        }\\n        if (typeof b !== 'object') {\\n            b = {};\\n        }\\n        var attributes = extend_1.default(true, {}, b);\\n        if (!keepNull) {\\n            attributes = Object.keys(attributes).reduce(function (copy, key) {\\n                if (attributes[key] != null) {\\n                    copy[key] = attributes[key];\\n                }\\n                return copy;\\n            }, {});\\n        }\\n        for (var key in a) {\\n            if (a[key] !== undefined && b[key] === undefined) {\\n                attributes[key] = a[key];\\n            }\\n        }\\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n    }\\n    AttributeMap.compose = compose;\\n    function diff(a, b) {\\n        if (a === void 0) { a = {}; }\\n        if (b === void 0) { b = {}; }\\n        if (typeof a !== 'object') {\\n            a = {};\\n        }\\n        if (typeof b !== 'object') {\\n            b = {};\\n        }\\n        var attributes = Object.keys(a)\\n            .concat(Object.keys(b))\\n            .reduce(function (attrs, key) {\\n            if (!deep_equal_1.default(a[key], b[key])) {\\n                attrs[key] = b[key] === undefined ? null : b[key];\\n            }\\n            return attrs;\\n        }, {});\\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n    }\\n    AttributeMap.diff = diff;\\n    function transform(a, b, priority) {\\n        if (priority === void 0) { priority = false; }\\n        if (typeof a !== 'object') {\\n            return b;\\n        }\\n        if (typeof b !== 'object') {\\n            return undefined;\\n        }\\n        if (!priority) {\\n            return b; // b simply overwrites us without priority\\n        }\\n        var attributes = Object.keys(b).reduce(function (attrs, key) {\\n            if (a[key] === undefined) {\\n                attrs[key] = b[key]; // null is a valid value\\n            }\\n            return attrs;\\n        }, {});\\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n    }\\n    AttributeMap.transform = transform;\\n})(AttributeMap || (AttributeMap = {}));\\nexports.default = AttributeMap;\\n//# sourceMappingURL=AttributeMap.js.map\\n\\n//# sourceURL=webpack://Quill/./node_modules/quill-delta/dist/AttributeMap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/quill-delta/dist/Delta.js\":\n/*!************************************************!*\\\n  !*** ./node_modules/quill-delta/dist/Delta.js ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nvar deep_equal_1 = __importDefault(__webpack_require__(/*! deep-equal */ \\\"./node_modules/deep-equal/index.js\\\"));\\nvar extend_1 = __importDefault(__webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\"));\\nvar fast_diff_1 = __importDefault(__webpack_require__(/*! fast-diff */ \\\"./node_modules/quill-delta/node_modules/fast-diff/diff.js\\\"));\\nvar AttributeMap_1 = __importDefault(__webpack_require__(/*! ./AttributeMap */ \\\"./node_modules/quill-delta/dist/AttributeMap.js\\\"));\\nvar Op_1 = __importDefault(__webpack_require__(/*! ./Op */ \\\"./node_modules/quill-delta/dist/Op.js\\\"));\\nvar NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\\nvar Delta = /** @class */ (function () {\\n    function Delta(ops) {\\n        // Assume we are given a well formed ops\\n        if (Array.isArray(ops)) {\\n            this.ops = ops;\\n        }\\n        else if (ops != null && Array.isArray(ops.ops)) {\\n            this.ops = ops.ops;\\n        }\\n        else {\\n            this.ops = [];\\n        }\\n    }\\n    Delta.prototype.insert = function (arg, attributes) {\\n        var newOp = {};\\n        if (typeof arg === 'string' && arg.length === 0) {\\n            return this;\\n        }\\n        newOp.insert = arg;\\n        if (attributes != null &&\\n            typeof attributes === 'object' &&\\n            Object.keys(attributes).length > 0) {\\n            newOp.attributes = attributes;\\n        }\\n        return this.push(newOp);\\n    };\\n    Delta.prototype.delete = function (length) {\\n        if (length <= 0) {\\n            return this;\\n        }\\n        return this.push({ delete: length });\\n    };\\n    Delta.prototype.retain = function (length, attributes) {\\n        if (length <= 0) {\\n            return this;\\n        }\\n        var newOp = { retain: length };\\n        if (attributes != null &&\\n            typeof attributes === 'object' &&\\n            Object.keys(attributes).length > 0) {\\n            newOp.attributes = attributes;\\n        }\\n        return this.push(newOp);\\n    };\\n    Delta.prototype.push = function (newOp) {\\n        var index = this.ops.length;\\n        var lastOp = this.ops[index - 1];\\n        newOp = extend_1.default(true, {}, newOp);\\n        if (typeof lastOp === 'object') {\\n            if (typeof newOp.delete === 'number' &&\\n                typeof lastOp.delete === 'number') {\\n                this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\\n                return this;\\n            }\\n            // Since it does not matter if we insert before or after deleting at the same index,\\n            // always prefer to insert first\\n            if (typeof lastOp.delete === 'number' && newOp.insert != null) {\\n                index -= 1;\\n                lastOp = this.ops[index - 1];\\n                if (typeof lastOp !== 'object') {\\n                    this.ops.unshift(newOp);\\n                    return this;\\n                }\\n            }\\n            if (deep_equal_1.default(newOp.attributes, lastOp.attributes)) {\\n                if (typeof newOp.insert === 'string' &&\\n                    typeof lastOp.insert === 'string') {\\n                    this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\\n                    if (typeof newOp.attributes === 'object') {\\n                        this.ops[index - 1].attributes = newOp.attributes;\\n                    }\\n                    return this;\\n                }\\n                else if (typeof newOp.retain === 'number' &&\\n                    typeof lastOp.retain === 'number') {\\n                    this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\\n                    if (typeof newOp.attributes === 'object') {\\n                        this.ops[index - 1].attributes = newOp.attributes;\\n                    }\\n                    return this;\\n                }\\n            }\\n        }\\n        if (index === this.ops.length) {\\n            this.ops.push(newOp);\\n        }\\n        else {\\n            this.ops.splice(index, 0, newOp);\\n        }\\n        return this;\\n    };\\n    Delta.prototype.chop = function () {\\n        var lastOp = this.ops[this.ops.length - 1];\\n        if (lastOp && lastOp.retain && !lastOp.attributes) {\\n            this.ops.pop();\\n        }\\n        return this;\\n    };\\n    Delta.prototype.filter = function (predicate) {\\n        return this.ops.filter(predicate);\\n    };\\n    Delta.prototype.forEach = function (predicate) {\\n        this.ops.forEach(predicate);\\n    };\\n    Delta.prototype.map = function (predicate) {\\n        return this.ops.map(predicate);\\n    };\\n    Delta.prototype.partition = function (predicate) {\\n        var passed = [];\\n        var failed = [];\\n        this.forEach(function (op) {\\n            var target = predicate(op) ? passed : failed;\\n            target.push(op);\\n        });\\n        return [passed, failed];\\n    };\\n    Delta.prototype.reduce = function (predicate, initialValue) {\\n        return this.ops.reduce(predicate, initialValue);\\n    };\\n    Delta.prototype.changeLength = function () {\\n        return this.reduce(function (length, elem) {\\n            if (elem.insert) {\\n                return length + Op_1.default.length(elem);\\n            }\\n            else if (elem.delete) {\\n                return length - elem.delete;\\n            }\\n            return length;\\n        }, 0);\\n    };\\n    Delta.prototype.length = function () {\\n        return this.reduce(function (length, elem) {\\n            return length + Op_1.default.length(elem);\\n        }, 0);\\n    };\\n    Delta.prototype.slice = function (start, end) {\\n        if (start === void 0) { start = 0; }\\n        if (end === void 0) { end = Infinity; }\\n        var ops = [];\\n        var iter = Op_1.default.iterator(this.ops);\\n        var index = 0;\\n        while (index < end && iter.hasNext()) {\\n            var nextOp = void 0;\\n            if (index < start) {\\n                nextOp = iter.next(start - index);\\n            }\\n            else {\\n                nextOp = iter.next(end - index);\\n                ops.push(nextOp);\\n            }\\n            index += Op_1.default.length(nextOp);\\n        }\\n        return new Delta(ops);\\n    };\\n    Delta.prototype.compose = function (other) {\\n        var thisIter = Op_1.default.iterator(this.ops);\\n        var otherIter = Op_1.default.iterator(other.ops);\\n        var ops = [];\\n        var firstOther = otherIter.peek();\\n        if (firstOther != null &&\\n            typeof firstOther.retain === 'number' &&\\n            firstOther.attributes == null) {\\n            var firstLeft = firstOther.retain;\\n            while (thisIter.peekType() === 'insert' &&\\n                thisIter.peekLength() <= firstLeft) {\\n                firstLeft -= thisIter.peekLength();\\n                ops.push(thisIter.next());\\n            }\\n            if (firstOther.retain - firstLeft > 0) {\\n                otherIter.next(firstOther.retain - firstLeft);\\n            }\\n        }\\n        var delta = new Delta(ops);\\n        while (thisIter.hasNext() || otherIter.hasNext()) {\\n            if (otherIter.peekType() === 'insert') {\\n                delta.push(otherIter.next());\\n            }\\n            else if (thisIter.peekType() === 'delete') {\\n                delta.push(thisIter.next());\\n            }\\n            else {\\n                var length_1 = Math.min(thisIter.peekLength(), otherIter.peekLength());\\n                var thisOp = thisIter.next(length_1);\\n                var otherOp = otherIter.next(length_1);\\n                if (typeof otherOp.retain === 'number') {\\n                    var newOp = {};\\n                    if (typeof thisOp.retain === 'number') {\\n                        newOp.retain = length_1;\\n                    }\\n                    else {\\n                        newOp.insert = thisOp.insert;\\n                    }\\n                    // Preserve null when composing with a retain, otherwise remove it for inserts\\n                    var attributes = AttributeMap_1.default.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');\\n                    if (attributes) {\\n                        newOp.attributes = attributes;\\n                    }\\n                    delta.push(newOp);\\n                    // Optimization if rest of other is just retain\\n                    if (!otherIter.hasNext() &&\\n                        deep_equal_1.default(delta.ops[delta.ops.length - 1], newOp)) {\\n                        var rest = new Delta(thisIter.rest());\\n                        return delta.concat(rest).chop();\\n                    }\\n                    // Other op should be delete, we could be an insert or retain\\n                    // Insert + delete cancels out\\n                }\\n                else if (typeof otherOp.delete === 'number' &&\\n                    typeof thisOp.retain === 'number') {\\n                    delta.push(otherOp);\\n                }\\n            }\\n        }\\n        return delta.chop();\\n    };\\n    Delta.prototype.concat = function (other) {\\n        var delta = new Delta(this.ops.slice());\\n        if (other.ops.length > 0) {\\n            delta.push(other.ops[0]);\\n            delta.ops = delta.ops.concat(other.ops.slice(1));\\n        }\\n        return delta;\\n    };\\n    Delta.prototype.diff = function (other, cursor) {\\n        if (this.ops === other.ops) {\\n            return new Delta();\\n        }\\n        var strings = [this, other].map(function (delta) {\\n            return delta\\n                .map(function (op) {\\n                if (op.insert != null) {\\n                    return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\\n                }\\n                var prep = delta === other ? 'on' : 'with';\\n                throw new Error('diff() called ' + prep + ' non-document');\\n            })\\n                .join('');\\n        });\\n        var retDelta = new Delta();\\n        var diffResult = fast_diff_1.default(strings[0], strings[1], cursor);\\n        var thisIter = Op_1.default.iterator(this.ops);\\n        var otherIter = Op_1.default.iterator(other.ops);\\n        diffResult.forEach(function (component) {\\n            var length = component[1].length;\\n            while (length > 0) {\\n                var opLength = 0;\\n                switch (component[0]) {\\n                    case fast_diff_1.default.INSERT:\\n                        opLength = Math.min(otherIter.peekLength(), length);\\n                        retDelta.push(otherIter.next(opLength));\\n                        break;\\n                    case fast_diff_1.default.DELETE:\\n                        opLength = Math.min(length, thisIter.peekLength());\\n                        thisIter.next(opLength);\\n                        retDelta.delete(opLength);\\n                        break;\\n                    case fast_diff_1.default.EQUAL:\\n                        opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\\n                        var thisOp = thisIter.next(opLength);\\n                        var otherOp = otherIter.next(opLength);\\n                        if (deep_equal_1.default(thisOp.insert, otherOp.insert)) {\\n                            retDelta.retain(opLength, AttributeMap_1.default.diff(thisOp.attributes, otherOp.attributes));\\n                        }\\n                        else {\\n                            retDelta.push(otherOp).delete(opLength);\\n                        }\\n                        break;\\n                }\\n                length -= opLength;\\n            }\\n        });\\n        return retDelta.chop();\\n    };\\n    Delta.prototype.eachLine = function (predicate, newline) {\\n        if (newline === void 0) { newline = '\\\\n'; }\\n        var iter = Op_1.default.iterator(this.ops);\\n        var line = new Delta();\\n        var i = 0;\\n        while (iter.hasNext()) {\\n            if (iter.peekType() !== 'insert') {\\n                return;\\n            }\\n            var thisOp = iter.peek();\\n            var start = Op_1.default.length(thisOp) - iter.peekLength();\\n            var index = typeof thisOp.insert === 'string'\\n                ? thisOp.insert.indexOf(newline, start) - start\\n                : -1;\\n            if (index < 0) {\\n                line.push(iter.next());\\n            }\\n            else if (index > 0) {\\n                line.push(iter.next(index));\\n            }\\n            else {\\n                if (predicate(line, iter.next(1).attributes || {}, i) === false) {\\n                    return;\\n                }\\n                i += 1;\\n                line = new Delta();\\n            }\\n        }\\n        if (line.length() > 0) {\\n            predicate(line, {}, i);\\n        }\\n    };\\n    Delta.prototype.transform = function (arg, priority) {\\n        if (priority === void 0) { priority = false; }\\n        priority = !!priority;\\n        if (typeof arg === 'number') {\\n            return this.transformPosition(arg, priority);\\n        }\\n        var other = arg;\\n        var thisIter = Op_1.default.iterator(this.ops);\\n        var otherIter = Op_1.default.iterator(other.ops);\\n        var delta = new Delta();\\n        while (thisIter.hasNext() || otherIter.hasNext()) {\\n            if (thisIter.peekType() === 'insert' &&\\n                (priority || otherIter.peekType() !== 'insert')) {\\n                delta.retain(Op_1.default.length(thisIter.next()));\\n            }\\n            else if (otherIter.peekType() === 'insert') {\\n                delta.push(otherIter.next());\\n            }\\n            else {\\n                var length_2 = Math.min(thisIter.peekLength(), otherIter.peekLength());\\n                var thisOp = thisIter.next(length_2);\\n                var otherOp = otherIter.next(length_2);\\n                if (thisOp.delete) {\\n                    // Our delete either makes their delete redundant or removes their retain\\n                    continue;\\n                }\\n                else if (otherOp.delete) {\\n                    delta.push(otherOp);\\n                }\\n                else {\\n                    // We retain either their retain or insert\\n                    delta.retain(length_2, AttributeMap_1.default.transform(thisOp.attributes, otherOp.attributes, priority));\\n                }\\n            }\\n        }\\n        return delta.chop();\\n    };\\n    Delta.prototype.transformPosition = function (index, priority) {\\n        if (priority === void 0) { priority = false; }\\n        priority = !!priority;\\n        var thisIter = Op_1.default.iterator(this.ops);\\n        var offset = 0;\\n        while (thisIter.hasNext() && offset <= index) {\\n            var length_3 = thisIter.peekLength();\\n            var nextType = thisIter.peekType();\\n            thisIter.next();\\n            if (nextType === 'delete') {\\n                index -= Math.min(length_3, index - offset);\\n                continue;\\n            }\\n            else if (nextType === 'insert' && (offset < index || !priority)) {\\n                index += length_3;\\n            }\\n            offset += length_3;\\n        }\\n        return index;\\n    };\\n    Delta.Op = Op_1.default;\\n    Delta.AttributeMap = AttributeMap_1.default;\\n    return Delta;\\n}());\\nmodule.exports = Delta;\\n//# sourceMappingURL=Delta.js.map\\n\\n//# sourceURL=webpack://Quill/./node_modules/quill-delta/dist/Delta.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/quill-delta/dist/Iterator.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/quill-delta/dist/Iterator.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Op_1 = __importDefault(__webpack_require__(/*! ./Op */ \\\"./node_modules/quill-delta/dist/Op.js\\\"));\\nvar Iterator = /** @class */ (function () {\\n    function Iterator(ops) {\\n        this.ops = ops;\\n        this.index = 0;\\n        this.offset = 0;\\n    }\\n    Iterator.prototype.hasNext = function () {\\n        return this.peekLength() < Infinity;\\n    };\\n    Iterator.prototype.next = function (length) {\\n        if (!length) {\\n            length = Infinity;\\n        }\\n        var nextOp = this.ops[this.index];\\n        if (nextOp) {\\n            var offset = this.offset;\\n            var opLength = Op_1.default.length(nextOp);\\n            if (length >= opLength - offset) {\\n                length = opLength - offset;\\n                this.index += 1;\\n                this.offset = 0;\\n            }\\n            else {\\n                this.offset += length;\\n            }\\n            if (typeof nextOp.delete === 'number') {\\n                return { delete: length };\\n            }\\n            else {\\n                var retOp = {};\\n                if (nextOp.attributes) {\\n                    retOp.attributes = nextOp.attributes;\\n                }\\n                if (typeof nextOp.retain === 'number') {\\n                    retOp.retain = length;\\n                }\\n                else if (typeof nextOp.insert === 'string') {\\n                    retOp.insert = nextOp.insert.substr(offset, length);\\n                }\\n                else {\\n                    // offset should === 0, length should === 1\\n                    retOp.insert = nextOp.insert;\\n                }\\n                return retOp;\\n            }\\n        }\\n        else {\\n            return { retain: Infinity };\\n        }\\n    };\\n    Iterator.prototype.peek = function () {\\n        return this.ops[this.index];\\n    };\\n    Iterator.prototype.peekLength = function () {\\n        if (this.ops[this.index]) {\\n            // Should never return 0 if our index is being managed correctly\\n            return Op_1.default.length(this.ops[this.index]) - this.offset;\\n        }\\n        else {\\n            return Infinity;\\n        }\\n    };\\n    Iterator.prototype.peekType = function () {\\n        if (this.ops[this.index]) {\\n            if (typeof this.ops[this.index].delete === 'number') {\\n                return 'delete';\\n            }\\n            else if (typeof this.ops[this.index].retain === 'number') {\\n                return 'retain';\\n            }\\n            else {\\n                return 'insert';\\n            }\\n        }\\n        return 'retain';\\n    };\\n    Iterator.prototype.rest = function () {\\n        if (!this.hasNext()) {\\n            return [];\\n        }\\n        else if (this.offset === 0) {\\n            return this.ops.slice(this.index);\\n        }\\n        else {\\n            var offset = this.offset;\\n            var index = this.index;\\n            var next = this.next();\\n            var rest = this.ops.slice(this.index);\\n            this.offset = offset;\\n            this.index = index;\\n            return [next].concat(rest);\\n        }\\n    };\\n    return Iterator;\\n}());\\nexports.default = Iterator;\\n//# sourceMappingURL=Iterator.js.map\\n\\n//# sourceURL=webpack://Quill/./node_modules/quill-delta/dist/Iterator.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/quill-delta/dist/Op.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/quill-delta/dist/Op.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Iterator_1 = __importDefault(__webpack_require__(/*! ./Iterator */ \\\"./node_modules/quill-delta/dist/Iterator.js\\\"));\\nvar Op;\\n(function (Op) {\\n    function iterator(ops) {\\n        return new Iterator_1.default(ops);\\n    }\\n    Op.iterator = iterator;\\n    function length(op) {\\n        if (typeof op.delete === 'number') {\\n            return op.delete;\\n        }\\n        else if (typeof op.retain === 'number') {\\n            return op.retain;\\n        }\\n        else {\\n            return typeof op.insert === 'string' ? op.insert.length : 1;\\n        }\\n    }\\n    Op.length = length;\\n})(Op || (Op = {}));\\nexports.default = Op;\\n//# sourceMappingURL=Op.js.map\\n\\n//# sourceURL=webpack://Quill/./node_modules/quill-delta/dist/Op.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/quill-delta/node_modules/fast-diff/diff.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/quill-delta/node_modules/fast-diff/diff.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/**\\n * This library modifies the diff-patch-match library by Neil Fraser\\n * by removing the patch and match functionality and certain advanced\\n * options in the diff function. The original license is as follows:\\n *\\n * ===\\n *\\n * Diff Match and Patch\\n *\\n * Copyright 2006 Google Inc.\\n * http://code.google.com/p/google-diff-match-patch/\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n\\n/**\\n * The data structure representing a diff is an array of tuples:\\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\\n */\\nvar DIFF_DELETE = -1;\\nvar DIFF_INSERT = 1;\\nvar DIFF_EQUAL = 0;\\n\\n\\n/**\\n * Find the differences between two texts.  Simplifies the problem by stripping\\n * any common prefix or suffix off the texts before diffing.\\n * @param {string} text1 Old string to be diffed.\\n * @param {string} text2 New string to be diffed.\\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\\n * @return {Array} Array of diff tuples.\\n */\\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\\n  // Check for equality\\n  if (text1 === text2) {\\n    if (text1) {\\n      return [[DIFF_EQUAL, text1]];\\n    }\\n    return [];\\n  }\\n\\n  if (cursor_pos != null) {\\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\\n    if (editdiff) {\\n      return editdiff;\\n    }\\n  }\\n\\n  // Trim off common prefix (speedup).\\n  var commonlength = diff_commonPrefix(text1, text2);\\n  var commonprefix = text1.substring(0, commonlength);\\n  text1 = text1.substring(commonlength);\\n  text2 = text2.substring(commonlength);\\n\\n  // Trim off common suffix (speedup).\\n  commonlength = diff_commonSuffix(text1, text2);\\n  var commonsuffix = text1.substring(text1.length - commonlength);\\n  text1 = text1.substring(0, text1.length - commonlength);\\n  text2 = text2.substring(0, text2.length - commonlength);\\n\\n  // Compute the diff on the middle block.\\n  var diffs = diff_compute_(text1, text2);\\n\\n  // Restore the prefix and suffix.\\n  if (commonprefix) {\\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\\n  }\\n  if (commonsuffix) {\\n    diffs.push([DIFF_EQUAL, commonsuffix]);\\n  }\\n  diff_cleanupMerge(diffs, _fix_unicode);\\n  return diffs;\\n};\\n\\n\\n/**\\n * Find the differences between two texts.  Assumes that the texts do not\\n * have any common prefix or suffix.\\n * @param {string} text1 Old string to be diffed.\\n * @param {string} text2 New string to be diffed.\\n * @return {Array} Array of diff tuples.\\n */\\nfunction diff_compute_(text1, text2) {\\n  var diffs;\\n\\n  if (!text1) {\\n    // Just add some text (speedup).\\n    return [[DIFF_INSERT, text2]];\\n  }\\n\\n  if (!text2) {\\n    // Just delete some text (speedup).\\n    return [[DIFF_DELETE, text1]];\\n  }\\n\\n  var longtext = text1.length > text2.length ? text1 : text2;\\n  var shorttext = text1.length > text2.length ? text2 : text1;\\n  var i = longtext.indexOf(shorttext);\\n  if (i !== -1) {\\n    // Shorter text is inside the longer text (speedup).\\n    diffs = [\\n      [DIFF_INSERT, longtext.substring(0, i)],\\n      [DIFF_EQUAL, shorttext],\\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\\n    ];\\n    // Swap insertions for deletions if diff is reversed.\\n    if (text1.length > text2.length) {\\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\\n    }\\n    return diffs;\\n  }\\n\\n  if (shorttext.length === 1) {\\n    // Single character string.\\n    // After the previous speedup, the character can't be an equality.\\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\\n  }\\n\\n  // Check to see if the problem can be split in two.\\n  var hm = diff_halfMatch_(text1, text2);\\n  if (hm) {\\n    // A half-match was found, sort out the return data.\\n    var text1_a = hm[0];\\n    var text1_b = hm[1];\\n    var text2_a = hm[2];\\n    var text2_b = hm[3];\\n    var mid_common = hm[4];\\n    // Send both pairs off for separate processing.\\n    var diffs_a = diff_main(text1_a, text2_a);\\n    var diffs_b = diff_main(text1_b, text2_b);\\n    // Merge the results.\\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\\n  }\\n\\n  return diff_bisect_(text1, text2);\\n};\\n\\n\\n/**\\n * Find the 'middle snake' of a diff, split the problem in two\\n * and return the recursively constructed diff.\\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\\n * @param {string} text1 Old string to be diffed.\\n * @param {string} text2 New string to be diffed.\\n * @return {Array} Array of diff tuples.\\n * @private\\n */\\nfunction diff_bisect_(text1, text2) {\\n  // Cache the text lengths to prevent multiple calls.\\n  var text1_length = text1.length;\\n  var text2_length = text2.length;\\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\\n  var v_offset = max_d;\\n  var v_length = 2 * max_d;\\n  var v1 = new Array(v_length);\\n  var v2 = new Array(v_length);\\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\\n  // integers and undefined.\\n  for (var x = 0; x < v_length; x++) {\\n    v1[x] = -1;\\n    v2[x] = -1;\\n  }\\n  v1[v_offset + 1] = 0;\\n  v2[v_offset + 1] = 0;\\n  var delta = text1_length - text2_length;\\n  // If the total number of characters is odd, then the front path will collide\\n  // with the reverse path.\\n  var front = (delta % 2 !== 0);\\n  // Offsets for start and end of k loop.\\n  // Prevents mapping of space beyond the grid.\\n  var k1start = 0;\\n  var k1end = 0;\\n  var k2start = 0;\\n  var k2end = 0;\\n  for (var d = 0; d < max_d; d++) {\\n    // Walk the front path one step.\\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\\n      var k1_offset = v_offset + k1;\\n      var x1;\\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\\n        x1 = v1[k1_offset + 1];\\n      } else {\\n        x1 = v1[k1_offset - 1] + 1;\\n      }\\n      var y1 = x1 - k1;\\n      while (\\n        x1 < text1_length && y1 < text2_length &&\\n        text1.charAt(x1) === text2.charAt(y1)\\n      ) {\\n        x1++;\\n        y1++;\\n      }\\n      v1[k1_offset] = x1;\\n      if (x1 > text1_length) {\\n        // Ran off the right of the graph.\\n        k1end += 2;\\n      } else if (y1 > text2_length) {\\n        // Ran off the bottom of the graph.\\n        k1start += 2;\\n      } else if (front) {\\n        var k2_offset = v_offset + delta - k1;\\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\\n          // Mirror x2 onto top-left coordinate system.\\n          var x2 = text1_length - v2[k2_offset];\\n          if (x1 >= x2) {\\n            // Overlap detected.\\n            return diff_bisectSplit_(text1, text2, x1, y1);\\n          }\\n        }\\n      }\\n    }\\n\\n    // Walk the reverse path one step.\\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\\n      var k2_offset = v_offset + k2;\\n      var x2;\\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\\n        x2 = v2[k2_offset + 1];\\n      } else {\\n        x2 = v2[k2_offset - 1] + 1;\\n      }\\n      var y2 = x2 - k2;\\n      while (\\n        x2 < text1_length && y2 < text2_length &&\\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\\n      ) {\\n        x2++;\\n        y2++;\\n      }\\n      v2[k2_offset] = x2;\\n      if (x2 > text1_length) {\\n        // Ran off the left of the graph.\\n        k2end += 2;\\n      } else if (y2 > text2_length) {\\n        // Ran off the top of the graph.\\n        k2start += 2;\\n      } else if (!front) {\\n        var k1_offset = v_offset + delta - k2;\\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\\n          var x1 = v1[k1_offset];\\n          var y1 = v_offset + x1 - k1_offset;\\n          // Mirror x2 onto top-left coordinate system.\\n          x2 = text1_length - x2;\\n          if (x1 >= x2) {\\n            // Overlap detected.\\n            return diff_bisectSplit_(text1, text2, x1, y1);\\n          }\\n        }\\n      }\\n    }\\n  }\\n  // Diff took too long and hit the deadline or\\n  // number of diffs equals number of characters, no commonality at all.\\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\\n};\\n\\n\\n/**\\n * Given the location of the 'middle snake', split the diff in two parts\\n * and recurse.\\n * @param {string} text1 Old string to be diffed.\\n * @param {string} text2 New string to be diffed.\\n * @param {number} x Index of split point in text1.\\n * @param {number} y Index of split point in text2.\\n * @return {Array} Array of diff tuples.\\n */\\nfunction diff_bisectSplit_(text1, text2, x, y) {\\n  var text1a = text1.substring(0, x);\\n  var text2a = text2.substring(0, y);\\n  var text1b = text1.substring(x);\\n  var text2b = text2.substring(y);\\n\\n  // Compute both diffs serially.\\n  var diffs = diff_main(text1a, text2a);\\n  var diffsb = diff_main(text1b, text2b);\\n\\n  return diffs.concat(diffsb);\\n};\\n\\n\\n/**\\n * Determine the common prefix of two strings.\\n * @param {string} text1 First string.\\n * @param {string} text2 Second string.\\n * @return {number} The number of characters common to the start of each\\n *     string.\\n */\\nfunction diff_commonPrefix(text1, text2) {\\n  // Quick check for common null cases.\\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\\n    return 0;\\n  }\\n  // Binary search.\\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\\n  var pointermin = 0;\\n  var pointermax = Math.min(text1.length, text2.length);\\n  var pointermid = pointermax;\\n  var pointerstart = 0;\\n  while (pointermin < pointermid) {\\n    if (\\n      text1.substring(pointerstart, pointermid) ==\\n      text2.substring(pointerstart, pointermid)\\n    ) {\\n      pointermin = pointermid;\\n      pointerstart = pointermin;\\n    } else {\\n      pointermax = pointermid;\\n    }\\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\\n  }\\n\\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\\n    pointermid--;\\n  }\\n\\n  return pointermid;\\n};\\n\\n\\n/**\\n * Determine the common suffix of two strings.\\n * @param {string} text1 First string.\\n * @param {string} text2 Second string.\\n * @return {number} The number of characters common to the end of each string.\\n */\\nfunction diff_commonSuffix(text1, text2) {\\n  // Quick check for common null cases.\\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\\n    return 0;\\n  }\\n  // Binary search.\\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\\n  var pointermin = 0;\\n  var pointermax = Math.min(text1.length, text2.length);\\n  var pointermid = pointermax;\\n  var pointerend = 0;\\n  while (pointermin < pointermid) {\\n    if (\\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\\n    ) {\\n      pointermin = pointermid;\\n      pointerend = pointermin;\\n    } else {\\n      pointermax = pointermid;\\n    }\\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\\n  }\\n\\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\\n    pointermid--;\\n  }\\n\\n  return pointermid;\\n};\\n\\n\\n/**\\n * Do the two texts share a substring which is at least half the length of the\\n * longer text?\\n * This speedup can produce non-minimal diffs.\\n * @param {string} text1 First string.\\n * @param {string} text2 Second string.\\n * @return {Array.<string>} Five element Array, containing the prefix of\\n *     text1, the suffix of text1, the prefix of text2, the suffix of\\n *     text2 and the common middle.  Or null if there was no match.\\n */\\nfunction diff_halfMatch_(text1, text2) {\\n  var longtext = text1.length > text2.length ? text1 : text2;\\n  var shorttext = text1.length > text2.length ? text2 : text1;\\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\\n    return null;  // Pointless.\\n  }\\n\\n  /**\\n   * Does a substring of shorttext exist within longtext such that the substring\\n   * is at least half the length of longtext?\\n   * Closure, but does not reference any external variables.\\n   * @param {string} longtext Longer string.\\n   * @param {string} shorttext Shorter string.\\n   * @param {number} i Start index of quarter length substring within longtext.\\n   * @return {Array.<string>} Five element Array, containing the prefix of\\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\\n   *     of shorttext and the common middle.  Or null if there was no match.\\n   * @private\\n   */\\n  function diff_halfMatchI_(longtext, shorttext, i) {\\n    // Start with a 1/4 length substring at position i as a seed.\\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\\n    var j = -1;\\n    var best_common = '';\\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\\n      var prefixLength = diff_commonPrefix(\\n        longtext.substring(i), shorttext.substring(j));\\n      var suffixLength = diff_commonSuffix(\\n        longtext.substring(0, i), shorttext.substring(0, j));\\n      if (best_common.length < suffixLength + prefixLength) {\\n        best_common = shorttext.substring(\\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\\n        best_longtext_a = longtext.substring(0, i - suffixLength);\\n        best_longtext_b = longtext.substring(i + prefixLength);\\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\\n        best_shorttext_b = shorttext.substring(j + prefixLength);\\n      }\\n    }\\n    if (best_common.length * 2 >= longtext.length) {\\n      return [\\n        best_longtext_a, best_longtext_b,\\n        best_shorttext_a, best_shorttext_b, best_common\\n      ];\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  // First check if the second quarter is the seed for a half-match.\\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\\n  // Check again based on the third quarter.\\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\\n  var hm;\\n  if (!hm1 && !hm2) {\\n    return null;\\n  } else if (!hm2) {\\n    hm = hm1;\\n  } else if (!hm1) {\\n    hm = hm2;\\n  } else {\\n    // Both matched.  Select the longest.\\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\\n  }\\n\\n  // A half-match was found, sort out the return data.\\n  var text1_a, text1_b, text2_a, text2_b;\\n  if (text1.length > text2.length) {\\n    text1_a = hm[0];\\n    text1_b = hm[1];\\n    text2_a = hm[2];\\n    text2_b = hm[3];\\n  } else {\\n    text2_a = hm[0];\\n    text2_b = hm[1];\\n    text1_a = hm[2];\\n    text1_b = hm[3];\\n  }\\n  var mid_common = hm[4];\\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\\n};\\n\\n\\n/**\\n * Reorder and merge like edit sections.  Merge equalities.\\n * Any edit section can move as long as it doesn't cross an equality.\\n * @param {Array} diffs Array of diff tuples.\\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\\n */\\nfunction diff_cleanupMerge(diffs, fix_unicode) {\\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\\n  var pointer = 0;\\n  var count_delete = 0;\\n  var count_insert = 0;\\n  var text_delete = '';\\n  var text_insert = '';\\n  var commonlength;\\n  while (pointer < diffs.length) {\\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\\n      diffs.splice(pointer, 1);\\n      continue;\\n    }\\n    switch (diffs[pointer][0]) {\\n      case DIFF_INSERT:\\n\\n        count_insert++;\\n        text_insert += diffs[pointer][1];\\n        pointer++;\\n        break;\\n      case DIFF_DELETE:\\n        count_delete++;\\n        text_delete += diffs[pointer][1];\\n        pointer++;\\n        break;\\n      case DIFF_EQUAL:\\n        var previous_equality = pointer - count_insert - count_delete - 1;\\n        if (fix_unicode) {\\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\\n          // we assume that the old and new text in the diff are complete and correct\\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\\n          // of the previous equality and the beginning of this equality.  this may create\\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\\n          // particular case, both equalities go away, we absorb any previous inequalities,\\n          // and we keep scanning for the next equality before rewriting the tuples.\\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\\n            var stray = diffs[previous_equality][1].slice(-1);\\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\\n            text_delete = stray + text_delete;\\n            text_insert = stray + text_insert;\\n            if (!diffs[previous_equality][1]) {\\n              // emptied out previous equality, so delete it and include previous delete/insert\\n              diffs.splice(previous_equality, 1);\\n              pointer--;\\n              var k = previous_equality - 1;\\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\\n                count_insert++;\\n                text_insert = diffs[k][1] + text_insert;\\n                k--;\\n              }\\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\\n                count_delete++;\\n                text_delete = diffs[k][1] + text_delete;\\n                k--;\\n              }\\n              previous_equality = k;\\n            }\\n          }\\n          if (starts_with_pair_end(diffs[pointer][1])) {\\n            var stray = diffs[pointer][1].charAt(0);\\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\\n            text_delete += stray;\\n            text_insert += stray;\\n          }\\n        }\\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\\n          // for empty equality not at end, wait for next equality\\n          diffs.splice(pointer, 1);\\n          break;\\n        }\\n        if (text_delete.length > 0 || text_insert.length > 0) {\\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\\n          if (text_delete.length > 0 && text_insert.length > 0) {\\n            // Factor out any common prefixes.\\n            commonlength = diff_commonPrefix(text_insert, text_delete);\\n            if (commonlength !== 0) {\\n              if (previous_equality >= 0) {\\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\\n              } else {\\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\\n                pointer++;\\n              }\\n              text_insert = text_insert.substring(commonlength);\\n              text_delete = text_delete.substring(commonlength);\\n            }\\n            // Factor out any common suffixes.\\n            commonlength = diff_commonSuffix(text_insert, text_delete);\\n            if (commonlength !== 0) {\\n              diffs[pointer][1] =\\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\\n            }\\n          }\\n          // Delete the offending records and add the merged ones.\\n          var n = count_insert + count_delete;\\n          if (text_delete.length === 0 && text_insert.length === 0) {\\n            diffs.splice(pointer - n, n);\\n            pointer = pointer - n;\\n          } else if (text_delete.length === 0) {\\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\\n            pointer = pointer - n + 1;\\n          } else if (text_insert.length === 0) {\\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\\n            pointer = pointer - n + 1;\\n          } else {\\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\\n            pointer = pointer - n + 2;\\n          }\\n        }\\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\\n          // Merge this equality with the previous one.\\n          diffs[pointer - 1][1] += diffs[pointer][1];\\n          diffs.splice(pointer, 1);\\n        } else {\\n          pointer++;\\n        }\\n        count_insert = 0;\\n        count_delete = 0;\\n        text_delete = '';\\n        text_insert = '';\\n        break;\\n    }\\n  }\\n  if (diffs[diffs.length - 1][1] === '') {\\n    diffs.pop();  // Remove the dummy entry at the end.\\n  }\\n\\n  // Second pass: look for single edits surrounded on both sides by equalities\\n  // which can be shifted sideways to eliminate an equality.\\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\\n  var changes = false;\\n  pointer = 1;\\n  // Intentionally ignore the first and last element (don't need checking).\\n  while (pointer < diffs.length - 1) {\\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\\n      // This is a single edit surrounded by equalities.\\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\\n        // Shift the edit over the previous equality.\\n        diffs[pointer][1] = diffs[pointer - 1][1] +\\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\\n            diffs[pointer - 1][1].length);\\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\\n        diffs.splice(pointer - 1, 1);\\n        changes = true;\\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\\n        diffs[pointer + 1][1]) {\\n        // Shift the edit over the next equality.\\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\\n        diffs[pointer][1] =\\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\\n          diffs[pointer + 1][1];\\n        diffs.splice(pointer + 1, 1);\\n        changes = true;\\n      }\\n    }\\n    pointer++;\\n  }\\n  // If shifts were made, the diff needs reordering and another shift sweep.\\n  if (changes) {\\n    diff_cleanupMerge(diffs, fix_unicode);\\n  }\\n};\\n\\nfunction is_surrogate_pair_start(charCode) {\\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\\n}\\n\\nfunction is_surrogate_pair_end(charCode) {\\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\\n}\\n\\nfunction starts_with_pair_end(str) {\\n  return is_surrogate_pair_end(str.charCodeAt(0));\\n}\\n\\nfunction ends_with_pair_start(str) {\\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\\n}\\n\\nfunction remove_empty_tuples(tuples) {\\n  var ret = [];\\n  for (var i = 0; i < tuples.length; i++) {\\n    if (tuples[i][1].length > 0) {\\n      ret.push(tuples[i]);\\n    }\\n  }\\n  return ret;\\n}\\n\\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\\n    return null;\\n  }\\n  return remove_empty_tuples([\\n    [DIFF_EQUAL, before],\\n    [DIFF_DELETE, oldMiddle],\\n    [DIFF_INSERT, newMiddle],\\n    [DIFF_EQUAL, after]\\n  ]);\\n}\\n\\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\\n  // note: this runs after equality check has ruled out exact equality\\n  var oldRange = typeof cursor_pos === 'number' ?\\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\\n  var newRange = typeof cursor_pos === 'number' ?\\n    null : cursor_pos.newRange;\\n  // take into account the old and new selection to generate the best diff\\n  // possible for a text edit.  for example, a text change from \\\"xxx\\\" to \\\"xx\\\"\\n  // could be a delete or forwards-delete of any one of the x's, or the\\n  // result of selecting two of the x's and typing \\\"x\\\".\\n  var oldLength = oldText.length;\\n  var newLength = newText.length;\\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\\n    // see if we have an insert or delete before or after cursor\\n    var oldCursor = oldRange.index;\\n    var oldBefore = oldText.slice(0, oldCursor);\\n    var oldAfter = oldText.slice(oldCursor);\\n    var maybeNewCursor = newRange ? newRange.index : null;\\n    editBefore: {\\n      // is this an insert or delete right before oldCursor?\\n      var newCursor = oldCursor + newLength - oldLength;\\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\\n        break editBefore;\\n      }\\n      if (newCursor < 0 || newCursor > newLength) {\\n        break editBefore;\\n      }\\n      var newBefore = newText.slice(0, newCursor);\\n      var newAfter = newText.slice(newCursor);\\n      if (newAfter !== oldAfter) {\\n        break editBefore;\\n      }\\n      var prefixLength = Math.min(oldCursor, newCursor);\\n      var oldPrefix = oldBefore.slice(0, prefixLength);\\n      var newPrefix = newBefore.slice(0, prefixLength);\\n      if (oldPrefix !== newPrefix) {\\n        break editBefore;\\n      }\\n      var oldMiddle = oldBefore.slice(prefixLength);\\n      var newMiddle = newBefore.slice(prefixLength);\\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\\n    }\\n    editAfter: {\\n      // is this an insert or delete right after oldCursor?\\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\\n        break editAfter;\\n      }\\n      var cursor = oldCursor;\\n      var newBefore = newText.slice(0, cursor);\\n      var newAfter = newText.slice(cursor);\\n      if (newBefore !== oldBefore) {\\n        break editAfter;\\n      }\\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\\n      if (oldSuffix !== newSuffix) {\\n        break editAfter;\\n      }\\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\\n    }\\n  }\\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\\n    replaceRange: {\\n      // see if diff could be a splice of the old selection range\\n      var oldPrefix = oldText.slice(0, oldRange.index);\\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\\n      var prefixLength = oldPrefix.length;\\n      var suffixLength = oldSuffix.length;\\n      if (newLength < prefixLength + suffixLength) {\\n        break replaceRange;\\n      }\\n      var newPrefix = newText.slice(0, prefixLength);\\n      var newSuffix = newText.slice(newLength - suffixLength);\\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\\n        break replaceRange;\\n      }\\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\\n    }\\n  }\\n\\n  return null;\\n}\\n\\nfunction diff(text1, text2, cursor_pos) {\\n  // only pass fix_unicode=true at the top level, not when diff_main is\\n  // recursively invoked\\n  return diff_main(text1, text2, cursor_pos, true);\\n}\\n\\ndiff.INSERT = DIFF_INSERT;\\ndiff.DELETE = DIFF_DELETE;\\ndiff.EQUAL = DIFF_EQUAL;\\n\\nmodule.exports = diff;\\n\\n\\n//# sourceURL=webpack://Quill/./node_modules/quill-delta/node_modules/fast-diff/diff.js?\");\n\n/***/ }),\n\n/***/ \"./quill.js\":\n/*!******************!*\\\n  !*** ./quill.js ***!\n  \\******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _core = __webpack_require__(/*! ./core */ \\\"./core.js\\\");\\n\\nvar _core2 = _interopRequireDefault(_core);\\n\\nvar _align = __webpack_require__(/*! ./formats/align */ \\\"./formats/align.js\\\");\\n\\nvar _direction = __webpack_require__(/*! ./formats/direction */ \\\"./formats/direction.js\\\");\\n\\nvar _indent = __webpack_require__(/*! ./formats/indent */ \\\"./formats/indent.js\\\");\\n\\nvar _indent2 = _interopRequireDefault(_indent);\\n\\nvar _blockquote = __webpack_require__(/*! ./formats/blockquote */ \\\"./formats/blockquote.js\\\");\\n\\nvar _blockquote2 = _interopRequireDefault(_blockquote);\\n\\nvar _header = __webpack_require__(/*! ./formats/header */ \\\"./formats/header.js\\\");\\n\\nvar _header2 = _interopRequireDefault(_header);\\n\\nvar _list = __webpack_require__(/*! ./formats/list */ \\\"./formats/list.js\\\");\\n\\nvar _list2 = _interopRequireDefault(_list);\\n\\nvar _background = __webpack_require__(/*! ./formats/background */ \\\"./formats/background.js\\\");\\n\\nvar _color = __webpack_require__(/*! ./formats/color */ \\\"./formats/color.js\\\");\\n\\nvar _font = __webpack_require__(/*! ./formats/font */ \\\"./formats/font.js\\\");\\n\\nvar _size = __webpack_require__(/*! ./formats/size */ \\\"./formats/size.js\\\");\\n\\nvar _bold = __webpack_require__(/*! ./formats/bold */ \\\"./formats/bold.js\\\");\\n\\nvar _bold2 = _interopRequireDefault(_bold);\\n\\nvar _italic = __webpack_require__(/*! ./formats/italic */ \\\"./formats/italic.js\\\");\\n\\nvar _italic2 = _interopRequireDefault(_italic);\\n\\nvar _link = __webpack_require__(/*! ./formats/link */ \\\"./formats/link.js\\\");\\n\\nvar _link2 = _interopRequireDefault(_link);\\n\\nvar _script = __webpack_require__(/*! ./formats/script */ \\\"./formats/script.js\\\");\\n\\nvar _script2 = _interopRequireDefault(_script);\\n\\nvar _strike = __webpack_require__(/*! ./formats/strike */ \\\"./formats/strike.js\\\");\\n\\nvar _strike2 = _interopRequireDefault(_strike);\\n\\nvar _underline = __webpack_require__(/*! ./formats/underline */ \\\"./formats/underline.js\\\");\\n\\nvar _underline2 = _interopRequireDefault(_underline);\\n\\nvar _formula = __webpack_require__(/*! ./formats/formula */ \\\"./formats/formula.js\\\");\\n\\nvar _formula2 = _interopRequireDefault(_formula);\\n\\nvar _image = __webpack_require__(/*! ./formats/image */ \\\"./formats/image.js\\\");\\n\\nvar _image2 = _interopRequireDefault(_image);\\n\\nvar _video = __webpack_require__(/*! ./formats/video */ \\\"./formats/video.js\\\");\\n\\nvar _video2 = _interopRequireDefault(_video);\\n\\nvar _code = __webpack_require__(/*! ./formats/code */ \\\"./formats/code.js\\\");\\n\\nvar _code2 = _interopRequireDefault(_code);\\n\\nvar _syntax = __webpack_require__(/*! ./modules/syntax */ \\\"./modules/syntax.js\\\");\\n\\nvar _syntax2 = _interopRequireDefault(_syntax);\\n\\nvar _table = __webpack_require__(/*! ./modules/table */ \\\"./modules/table.js\\\");\\n\\nvar _table2 = _interopRequireDefault(_table);\\n\\nvar _toolbar = __webpack_require__(/*! ./modules/toolbar */ \\\"./modules/toolbar.js\\\");\\n\\nvar _toolbar2 = _interopRequireDefault(_toolbar);\\n\\nvar _icons = __webpack_require__(/*! ./ui/icons */ \\\"./ui/icons.js\\\");\\n\\nvar _icons2 = _interopRequireDefault(_icons);\\n\\nvar _picker = __webpack_require__(/*! ./ui/picker */ \\\"./ui/picker.js\\\");\\n\\nvar _picker2 = _interopRequireDefault(_picker);\\n\\nvar _colorPicker = __webpack_require__(/*! ./ui/color-picker */ \\\"./ui/color-picker.js\\\");\\n\\nvar _colorPicker2 = _interopRequireDefault(_colorPicker);\\n\\nvar _iconPicker = __webpack_require__(/*! ./ui/icon-picker */ \\\"./ui/icon-picker.js\\\");\\n\\nvar _iconPicker2 = _interopRequireDefault(_iconPicker);\\n\\nvar _tooltip = __webpack_require__(/*! ./ui/tooltip */ \\\"./ui/tooltip.js\\\");\\n\\nvar _tooltip2 = _interopRequireDefault(_tooltip);\\n\\nvar _bubble = __webpack_require__(/*! ./themes/bubble */ \\\"./themes/bubble.js\\\");\\n\\nvar _bubble2 = _interopRequireDefault(_bubble);\\n\\nvar _snow = __webpack_require__(/*! ./themes/snow */ \\\"./themes/snow.js\\\");\\n\\nvar _snow2 = _interopRequireDefault(_snow);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n_core2.default.register({\\n  'attributors/attribute/direction': _direction.DirectionAttribute,\\n\\n  'attributors/class/align': _align.AlignClass,\\n  'attributors/class/background': _background.BackgroundClass,\\n  'attributors/class/color': _color.ColorClass,\\n  'attributors/class/direction': _direction.DirectionClass,\\n  'attributors/class/font': _font.FontClass,\\n  'attributors/class/size': _size.SizeClass,\\n\\n  'attributors/style/align': _align.AlignStyle,\\n  'attributors/style/background': _background.BackgroundStyle,\\n  'attributors/style/color': _color.ColorStyle,\\n  'attributors/style/direction': _direction.DirectionStyle,\\n  'attributors/style/font': _font.FontStyle,\\n  'attributors/style/size': _size.SizeStyle\\n}, true);\\n\\n_core2.default.register({\\n  'formats/align': _align.AlignClass,\\n  'formats/direction': _direction.DirectionClass,\\n  'formats/indent': _indent2.default,\\n\\n  'formats/background': _background.BackgroundStyle,\\n  'formats/color': _color.ColorStyle,\\n  'formats/font': _font.FontClass,\\n  'formats/size': _size.SizeClass,\\n\\n  'formats/blockquote': _blockquote2.default,\\n  'formats/code-block': _code2.default,\\n  'formats/header': _header2.default,\\n  'formats/list': _list2.default,\\n\\n  'formats/bold': _bold2.default,\\n  'formats/code': _code.Code,\\n  'formats/italic': _italic2.default,\\n  'formats/link': _link2.default,\\n  'formats/script': _script2.default,\\n  'formats/strike': _strike2.default,\\n  'formats/underline': _underline2.default,\\n\\n  'formats/formula': _formula2.default,\\n  'formats/image': _image2.default,\\n  'formats/video': _video2.default,\\n\\n  'modules/syntax': _syntax2.default,\\n  'modules/table': _table2.default,\\n  'modules/toolbar': _toolbar2.default,\\n\\n  'themes/bubble': _bubble2.default,\\n  'themes/snow': _snow2.default,\\n\\n  'ui/icons': _icons2.default,\\n  'ui/picker': _picker2.default,\\n  'ui/icon-picker': _iconPicker2.default,\\n  'ui/color-picker': _colorPicker2.default,\\n  'ui/tooltip': _tooltip2.default\\n}, true);\\n\\nexports.default = _core2.default;\\n\\n//# sourceURL=webpack://Quill/./quill.js?\");\n\n/***/ }),\n\n/***/ \"./themes/base.js\":\n/*!************************!*\\\n  !*** ./themes/base.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.BaseTooltip = undefined;\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _emitter = __webpack_require__(/*! ../core/emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _theme = __webpack_require__(/*! ../core/theme */ \\\"./core/theme.js\\\");\\n\\nvar _theme2 = _interopRequireDefault(_theme);\\n\\nvar _colorPicker = __webpack_require__(/*! ../ui/color-picker */ \\\"./ui/color-picker.js\\\");\\n\\nvar _colorPicker2 = _interopRequireDefault(_colorPicker);\\n\\nvar _iconPicker = __webpack_require__(/*! ../ui/icon-picker */ \\\"./ui/icon-picker.js\\\");\\n\\nvar _iconPicker2 = _interopRequireDefault(_iconPicker);\\n\\nvar _picker = __webpack_require__(/*! ../ui/picker */ \\\"./ui/picker.js\\\");\\n\\nvar _picker2 = _interopRequireDefault(_picker);\\n\\nvar _tooltip = __webpack_require__(/*! ../ui/tooltip */ \\\"./ui/tooltip.js\\\");\\n\\nvar _tooltip2 = _interopRequireDefault(_tooltip);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst ALIGNS = [false, 'center', 'right', 'justify'];\\n\\nconst COLORS = ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466'];\\n\\nconst FONTS = [false, 'serif', 'monospace'];\\n\\nconst HEADERS = ['1', '2', '3', false];\\n\\nconst SIZES = ['small', false, 'large', 'huge'];\\n\\nclass BaseTheme extends _theme2.default {\\n  constructor(quill, options) {\\n    super(quill, options);\\n    const listener = e => {\\n      if (!document.body.contains(quill.root)) {\\n        document.body.removeEventListener('click', listener);\\n        return;\\n      }\\n      if (this.tooltip != null && !this.tooltip.root.contains(e.target) && document.activeElement !== this.tooltip.textbox && !this.quill.hasFocus()) {\\n        this.tooltip.hide();\\n      }\\n      if (this.pickers != null) {\\n        this.pickers.forEach(picker => {\\n          if (!picker.container.contains(e.target)) {\\n            picker.close();\\n          }\\n        });\\n      }\\n    };\\n    quill.emitter.listenDOM('click', document.body, listener);\\n  }\\n\\n  addModule(name) {\\n    const module = super.addModule(name);\\n    if (name === 'toolbar') {\\n      this.extendToolbar(module);\\n    }\\n    return module;\\n  }\\n\\n  buildButtons(buttons, icons) {\\n    Array.from(buttons).forEach(button => {\\n      const className = button.getAttribute('class') || '';\\n      className.split(/\\\\s+/).forEach(name => {\\n        if (!name.startsWith('ql-')) return;\\n        name = name.slice('ql-'.length);\\n        if (icons[name] == null) return;\\n        if (name === 'direction') {\\n          button.innerHTML = icons[name][''] + icons[name].rtl;\\n        } else if (typeof icons[name] === 'string') {\\n          button.innerHTML = icons[name];\\n        } else {\\n          const value = button.value || '';\\n          if (value != null && icons[name][value]) {\\n            button.innerHTML = icons[name][value];\\n          }\\n        }\\n      });\\n    });\\n  }\\n\\n  buildPickers(selects, icons) {\\n    this.pickers = Array.from(selects).map(select => {\\n      if (select.classList.contains('ql-align')) {\\n        if (select.querySelector('option') == null) {\\n          fillSelect(select, ALIGNS);\\n        }\\n        return new _iconPicker2.default(select, icons.align);\\n      }\\n      if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {\\n        const format = select.classList.contains('ql-background') ? 'background' : 'color';\\n        if (select.querySelector('option') == null) {\\n          fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');\\n        }\\n        return new _colorPicker2.default(select, icons[format]);\\n      }\\n      if (select.querySelector('option') == null) {\\n        if (select.classList.contains('ql-font')) {\\n          fillSelect(select, FONTS);\\n        } else if (select.classList.contains('ql-header')) {\\n          fillSelect(select, HEADERS);\\n        } else if (select.classList.contains('ql-size')) {\\n          fillSelect(select, SIZES);\\n        }\\n      }\\n      return new _picker2.default(select);\\n    });\\n    const update = () => {\\n      this.pickers.forEach(picker => {\\n        picker.update();\\n      });\\n    };\\n    this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);\\n  }\\n}\\nBaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {\\n  modules: {\\n    toolbar: {\\n      handlers: {\\n        formula() {\\n          this.quill.theme.tooltip.edit('formula');\\n        },\\n        image() {\\n          let fileInput = this.container.querySelector('input.ql-image[type=file]');\\n          if (fileInput == null) {\\n            fileInput = document.createElement('input');\\n            fileInput.setAttribute('type', 'file');\\n            fileInput.setAttribute('accept', this.quill.uploader.options.mimetypes.join(', '));\\n            fileInput.classList.add('ql-image');\\n            fileInput.addEventListener('change', () => {\\n              const range = this.quill.getSelection(true);\\n              this.quill.uploader.upload(range, fileInput.files);\\n              fileInput.value = '';\\n            });\\n            this.container.appendChild(fileInput);\\n          }\\n          fileInput.click();\\n        },\\n        video() {\\n          this.quill.theme.tooltip.edit('video');\\n        }\\n      }\\n    }\\n  }\\n});\\n\\nclass BaseTooltip extends _tooltip2.default {\\n  constructor(quill, boundsContainer) {\\n    super(quill, boundsContainer);\\n    this.textbox = this.root.querySelector('input[type=\\\"text\\\"]');\\n    this.listen();\\n  }\\n\\n  listen() {\\n    this.textbox.addEventListener('keydown', event => {\\n      if (event.key === 'Enter') {\\n        this.save();\\n        event.preventDefault();\\n      } else if (event.key === 'Escape') {\\n        this.cancel();\\n        event.preventDefault();\\n      }\\n    });\\n  }\\n\\n  cancel() {\\n    this.hide();\\n  }\\n\\n  edit(mode = 'link', preview = null) {\\n    this.root.classList.remove('ql-hidden');\\n    this.root.classList.add('ql-editing');\\n    if (preview != null) {\\n      this.textbox.value = preview;\\n    } else if (mode !== this.root.getAttribute('data-mode')) {\\n      this.textbox.value = '';\\n    }\\n    this.position(this.quill.getBounds(this.quill.selection.savedRange));\\n    this.textbox.select();\\n    this.textbox.setAttribute('placeholder', this.textbox.getAttribute(`data-${mode}`) || '');\\n    this.root.setAttribute('data-mode', mode);\\n  }\\n\\n  restoreFocus() {\\n    const scrollTop = this.quill.scrollingContainer.scrollTop;\\n\\n    this.quill.focus();\\n    this.quill.scrollingContainer.scrollTop = scrollTop;\\n  }\\n\\n  save() {\\n    let value = this.textbox.value;\\n\\n    switch (this.root.getAttribute('data-mode')) {\\n      case 'link':\\n        {\\n          const scrollTop = this.quill.root.scrollTop;\\n\\n          if (this.linkRange) {\\n            this.quill.formatText(this.linkRange, 'link', value, _emitter2.default.sources.USER);\\n            delete this.linkRange;\\n          } else {\\n            this.restoreFocus();\\n            this.quill.format('link', value, _emitter2.default.sources.USER);\\n          }\\n          this.quill.root.scrollTop = scrollTop;\\n          break;\\n        }\\n      case 'video':\\n        {\\n          value = extractVideoUrl(value);\\n        } // eslint-disable-next-line no-fallthrough\\n      case 'formula':\\n        {\\n          if (!value) break;\\n          const range = this.quill.getSelection(true);\\n          if (range != null) {\\n            const index = range.index + range.length;\\n            this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2.default.sources.USER);\\n            if (this.root.getAttribute('data-mode') === 'formula') {\\n              this.quill.insertText(index + 1, ' ', _emitter2.default.sources.USER);\\n            }\\n            this.quill.setSelection(index + 2, _emitter2.default.sources.USER);\\n          }\\n          break;\\n        }\\n      default:\\n    }\\n    this.textbox.value = '';\\n    this.hide();\\n  }\\n}\\n\\nfunction extractVideoUrl(url) {\\n  let match = url.match(/^(?:(https?):\\\\/\\\\/)?(?:(?:www|m)\\\\.)?youtube\\\\.com\\\\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\\\\/\\\\/)?(?:(?:www|m)\\\\.)?youtu\\\\.be\\\\/([a-zA-Z0-9_-]+)/);\\n  if (match) {\\n    return `${match[1] || 'https'}://www.youtube.com/embed/${match[2]}?showinfo=0`;\\n  }\\n  // eslint-disable-next-line no-cond-assign\\n  if (match = url.match(/^(?:(https?):\\\\/\\\\/)?(?:www\\\\.)?vimeo\\\\.com\\\\/(\\\\d+)/)) {\\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\\n  }\\n  return url;\\n}\\n\\nfunction fillSelect(select, values, defaultValue = false) {\\n  values.forEach(value => {\\n    const option = document.createElement('option');\\n    if (value === defaultValue) {\\n      option.setAttribute('selected', 'selected');\\n    } else {\\n      option.setAttribute('value', value);\\n    }\\n    select.appendChild(option);\\n  });\\n}\\n\\nexports.BaseTooltip = BaseTooltip;\\nexports.default = BaseTheme;\\n\\n//# sourceURL=webpack://Quill/./themes/base.js?\");\n\n/***/ }),\n\n/***/ \"./themes/bubble.js\":\n/*!**************************!*\\\n  !*** ./themes/bubble.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.BubbleTooltip = undefined;\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _emitter = __webpack_require__(/*! ../core/emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _base = __webpack_require__(/*! ./base */ \\\"./themes/base.js\\\");\\n\\nvar _base2 = _interopRequireDefault(_base);\\n\\nvar _selection = __webpack_require__(/*! ../core/selection */ \\\"./core/selection.js\\\");\\n\\nvar _icons = __webpack_require__(/*! ../ui/icons */ \\\"./ui/icons.js\\\");\\n\\nvar _icons2 = _interopRequireDefault(_icons);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{ header: 1 }, { header: 2 }, 'blockquote']];\\n\\nclass BubbleTooltip extends _base.BaseTooltip {\\n  constructor(quill, bounds) {\\n    super(quill, bounds);\\n    this.quill.on(_emitter2.default.events.EDITOR_CHANGE, (type, range, oldRange, source) => {\\n      if (type !== _emitter2.default.events.SELECTION_CHANGE) return;\\n      if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {\\n        this.show();\\n        // Lock our width so we will expand beyond our offsetParent boundaries\\n        this.root.style.left = '0px';\\n        this.root.style.width = '';\\n        this.root.style.width = `${this.root.offsetWidth}px`;\\n        const lines = this.quill.getLines(range.index, range.length);\\n        if (lines.length === 1) {\\n          this.position(this.quill.getBounds(range));\\n        } else {\\n          const lastLine = lines[lines.length - 1];\\n          const index = this.quill.getIndex(lastLine);\\n          const length = Math.min(lastLine.length() - 1, range.index + range.length - index);\\n          const indexBounds = this.quill.getBounds(new _selection.Range(index, length));\\n          this.position(indexBounds);\\n        }\\n      } else if (document.activeElement !== this.textbox && this.quill.hasFocus()) {\\n        this.hide();\\n      }\\n    });\\n  }\\n\\n  listen() {\\n    super.listen();\\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\\n      this.root.classList.remove('ql-editing');\\n    });\\n    this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, () => {\\n      // Let selection be restored by toolbar handlers before repositioning\\n      setTimeout(() => {\\n        if (this.root.classList.contains('ql-hidden')) return;\\n        const range = this.quill.getSelection();\\n        if (range != null) {\\n          this.position(this.quill.getBounds(range));\\n        }\\n      }, 1);\\n    });\\n  }\\n\\n  cancel() {\\n    this.show();\\n  }\\n\\n  position(reference) {\\n    const shift = super.position(reference);\\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\\n    arrow.style.marginLeft = '';\\n    if (shift !== 0) {\\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\\n    }\\n    return shift;\\n  }\\n}\\nBubbleTooltip.TEMPLATE = ['<span class=\\\"ql-tooltip-arrow\\\"></span>', '<div class=\\\"ql-tooltip-editor\\\">', '<input type=\\\"text\\\" data-formula=\\\"e=mc^2\\\" data-link=\\\"https://quilljs.com\\\" data-video=\\\"Embed URL\\\">', '<a class=\\\"ql-close\\\"></a>', '</div>'].join('');\\n\\nclass BubbleTheme extends _base2.default {\\n  constructor(quill, options) {\\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\\n    }\\n    super(quill, options);\\n    this.quill.container.classList.add('ql-bubble');\\n  }\\n\\n  extendToolbar(toolbar) {\\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\\n    this.tooltip.root.appendChild(toolbar.container);\\n    this.buildButtons(toolbar.container.querySelectorAll('button'), _icons2.default);\\n    this.buildPickers(toolbar.container.querySelectorAll('select'), _icons2.default);\\n  }\\n}\\nBubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\\n  modules: {\\n    toolbar: {\\n      handlers: {\\n        link(value) {\\n          if (!value) {\\n            this.quill.format('link', false);\\n          } else {\\n            this.quill.theme.tooltip.edit();\\n          }\\n        }\\n      }\\n    }\\n  }\\n});\\n\\nexports.BubbleTooltip = BubbleTooltip;\\nexports.default = BubbleTheme;\\n\\n//# sourceURL=webpack://Quill/./themes/bubble.js?\");\n\n/***/ }),\n\n/***/ \"./themes/snow.js\":\n/*!************************!*\\\n  !*** ./themes/snow.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _extend = __webpack_require__(/*! extend */ \\\"./node_modules/extend/index.js\\\");\\n\\nvar _extend2 = _interopRequireDefault(_extend);\\n\\nvar _emitter = __webpack_require__(/*! ../core/emitter */ \\\"./core/emitter.js\\\");\\n\\nvar _emitter2 = _interopRequireDefault(_emitter);\\n\\nvar _base = __webpack_require__(/*! ./base */ \\\"./themes/base.js\\\");\\n\\nvar _base2 = _interopRequireDefault(_base);\\n\\nvar _link = __webpack_require__(/*! ../formats/link */ \\\"./formats/link.js\\\");\\n\\nvar _link2 = _interopRequireDefault(_link);\\n\\nvar _selection = __webpack_require__(/*! ../core/selection */ \\\"./core/selection.js\\\");\\n\\nvar _icons = __webpack_require__(/*! ../ui/icons */ \\\"./ui/icons.js\\\");\\n\\nvar _icons2 = _interopRequireDefault(_icons);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst TOOLBAR_CONFIG = [[{ header: ['1', '2', '3', false] }], ['bold', 'italic', 'underline', 'link'], [{ list: 'ordered' }, { list: 'bullet' }], ['clean']];\\n\\nclass SnowTooltip extends _base.BaseTooltip {\\n  constructor(quill, bounds) {\\n    super(quill, bounds);\\n    this.preview = this.root.querySelector('a.ql-preview');\\n  }\\n\\n  listen() {\\n    super.listen();\\n    this.root.querySelector('a.ql-action').addEventListener('click', event => {\\n      if (this.root.classList.contains('ql-editing')) {\\n        this.save();\\n      } else {\\n        this.edit('link', this.preview.textContent);\\n      }\\n      event.preventDefault();\\n    });\\n    this.root.querySelector('a.ql-remove').addEventListener('click', event => {\\n      if (this.linkRange != null) {\\n        const range = this.linkRange;\\n        this.restoreFocus();\\n        this.quill.formatText(range, 'link', false, _emitter2.default.sources.USER);\\n        delete this.linkRange;\\n      }\\n      event.preventDefault();\\n      this.hide();\\n    });\\n    this.quill.on(_emitter2.default.events.SELECTION_CHANGE, (range, oldRange, source) => {\\n      if (range == null) return;\\n      if (range.length === 0 && source === _emitter2.default.sources.USER) {\\n        var _quill$scroll$descend = this.quill.scroll.descendant(_link2.default, range.index),\\n            _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2);\\n\\n        const link = _quill$scroll$descend2[0],\\n              offset = _quill$scroll$descend2[1];\\n\\n        if (link != null) {\\n          this.linkRange = new _selection.Range(range.index - offset, link.length());\\n          const preview = _link2.default.formats(link.domNode);\\n          this.preview.textContent = preview;\\n          this.preview.setAttribute('href', preview);\\n          this.show();\\n          this.position(this.quill.getBounds(this.linkRange));\\n          return;\\n        }\\n      } else {\\n        delete this.linkRange;\\n      }\\n      this.hide();\\n    });\\n  }\\n\\n  show() {\\n    super.show();\\n    this.root.removeAttribute('data-mode');\\n  }\\n}\\nSnowTooltip.TEMPLATE = ['<a class=\\\"ql-preview\\\" target=\\\"_blank\\\" href=\\\"about:blank\\\"></a>', '<input type=\\\"text\\\" data-formula=\\\"e=mc^2\\\" data-link=\\\"https://quilljs.com\\\" data-video=\\\"Embed URL\\\">', '<a class=\\\"ql-action\\\"></a>', '<a class=\\\"ql-remove\\\"></a>'].join('');\\n\\nclass SnowTheme extends _base2.default {\\n  constructor(quill, options) {\\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\\n    }\\n    super(quill, options);\\n    this.quill.container.classList.add('ql-snow');\\n  }\\n\\n  extendToolbar(toolbar) {\\n    toolbar.container.classList.add('ql-snow');\\n    this.buildButtons(toolbar.container.querySelectorAll('button'), _icons2.default);\\n    this.buildPickers(toolbar.container.querySelectorAll('select'), _icons2.default);\\n    this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\\n    if (toolbar.container.querySelector('.ql-link')) {\\n      this.quill.keyboard.addBinding({ key: 'k', shortKey: true }, (range, context) => {\\n        toolbar.handlers.link.call(toolbar, !context.format.link);\\n      });\\n    }\\n  }\\n}\\nSnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\\n  modules: {\\n    toolbar: {\\n      handlers: {\\n        link(value) {\\n          if (value) {\\n            const range = this.quill.getSelection();\\n            if (range == null || range.length === 0) return;\\n            let preview = this.quill.getText(range);\\n            if (/^\\\\S+@\\\\S+\\\\.\\\\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {\\n              preview = `mailto:${preview}`;\\n            }\\n            const tooltip = this.quill.theme.tooltip;\\n\\n            tooltip.edit('link', preview);\\n          } else {\\n            this.quill.format('link', false);\\n          }\\n        }\\n      }\\n    }\\n  }\\n});\\n\\nexports.default = SnowTheme;\\n\\n//# sourceURL=webpack://Quill/./themes/snow.js?\");\n\n/***/ }),\n\n/***/ \"./ui/color-picker.js\":\n/*!****************************!*\\\n  !*** ./ui/color-picker.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _picker = __webpack_require__(/*! ./picker */ \\\"./ui/picker.js\\\");\\n\\nvar _picker2 = _interopRequireDefault(_picker);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass ColorPicker extends _picker2.default {\\n  constructor(select, label) {\\n    super(select);\\n    this.label.innerHTML = label;\\n    this.container.classList.add('ql-color-picker');\\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).slice(0, 7).forEach(item => {\\n      item.classList.add('ql-primary');\\n    });\\n  }\\n\\n  buildItem(option) {\\n    const item = super.buildItem(option);\\n    item.style.backgroundColor = option.getAttribute('value') || '';\\n    return item;\\n  }\\n\\n  selectItem(item, trigger) {\\n    super.selectItem(item, trigger);\\n    const colorLabel = this.label.querySelector('.ql-color-label');\\n    const value = item ? item.getAttribute('data-value') || '' : '';\\n    if (colorLabel) {\\n      if (colorLabel.tagName === 'line') {\\n        colorLabel.style.stroke = value;\\n      } else {\\n        colorLabel.style.fill = value;\\n      }\\n    }\\n  }\\n}\\n\\nexports.default = ColorPicker;\\n\\n//# sourceURL=webpack://Quill/./ui/color-picker.js?\");\n\n/***/ }),\n\n/***/ \"./ui/icon-picker.js\":\n/*!***************************!*\\\n  !*** ./ui/icon-picker.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _picker = __webpack_require__(/*! ./picker */ \\\"./ui/picker.js\\\");\\n\\nvar _picker2 = _interopRequireDefault(_picker);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nclass IconPicker extends _picker2.default {\\n  constructor(select, icons) {\\n    super(select);\\n    this.container.classList.add('ql-icon-picker');\\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(item => {\\n      item.innerHTML = icons[item.getAttribute('data-value') || ''];\\n    });\\n    this.defaultItem = this.container.querySelector('.ql-selected');\\n    this.selectItem(this.defaultItem);\\n  }\\n\\n  selectItem(target, trigger) {\\n    super.selectItem(target, trigger);\\n    const item = target || this.defaultItem;\\n    if (this.label.innerHTML === item.innerHTML) return;\\n    this.label.innerHTML = item.innerHTML;\\n  }\\n}\\n\\nexports.default = IconPicker;\\n\\n//# sourceURL=webpack://Quill/./ui/icon-picker.js?\");\n\n/***/ }),\n\n/***/ \"./ui/icons.js\":\n/*!*********************!*\\\n  !*** ./ui/icons.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _alignLeft = __webpack_require__(/*! ../assets/icons/align-left.svg */ \\\"./assets/icons/align-left.svg\\\");\\n\\nvar _alignLeft2 = _interopRequireDefault(_alignLeft);\\n\\nvar _alignCenter = __webpack_require__(/*! ../assets/icons/align-center.svg */ \\\"./assets/icons/align-center.svg\\\");\\n\\nvar _alignCenter2 = _interopRequireDefault(_alignCenter);\\n\\nvar _alignRight = __webpack_require__(/*! ../assets/icons/align-right.svg */ \\\"./assets/icons/align-right.svg\\\");\\n\\nvar _alignRight2 = _interopRequireDefault(_alignRight);\\n\\nvar _alignJustify = __webpack_require__(/*! ../assets/icons/align-justify.svg */ \\\"./assets/icons/align-justify.svg\\\");\\n\\nvar _alignJustify2 = _interopRequireDefault(_alignJustify);\\n\\nvar _background = __webpack_require__(/*! ../assets/icons/background.svg */ \\\"./assets/icons/background.svg\\\");\\n\\nvar _background2 = _interopRequireDefault(_background);\\n\\nvar _blockquote = __webpack_require__(/*! ../assets/icons/blockquote.svg */ \\\"./assets/icons/blockquote.svg\\\");\\n\\nvar _blockquote2 = _interopRequireDefault(_blockquote);\\n\\nvar _bold = __webpack_require__(/*! ../assets/icons/bold.svg */ \\\"./assets/icons/bold.svg\\\");\\n\\nvar _bold2 = _interopRequireDefault(_bold);\\n\\nvar _clean = __webpack_require__(/*! ../assets/icons/clean.svg */ \\\"./assets/icons/clean.svg\\\");\\n\\nvar _clean2 = _interopRequireDefault(_clean);\\n\\nvar _code = __webpack_require__(/*! ../assets/icons/code.svg */ \\\"./assets/icons/code.svg\\\");\\n\\nvar _code2 = _interopRequireDefault(_code);\\n\\nvar _color = __webpack_require__(/*! ../assets/icons/color.svg */ \\\"./assets/icons/color.svg\\\");\\n\\nvar _color2 = _interopRequireDefault(_color);\\n\\nvar _directionLtr = __webpack_require__(/*! ../assets/icons/direction-ltr.svg */ \\\"./assets/icons/direction-ltr.svg\\\");\\n\\nvar _directionLtr2 = _interopRequireDefault(_directionLtr);\\n\\nvar _directionRtl = __webpack_require__(/*! ../assets/icons/direction-rtl.svg */ \\\"./assets/icons/direction-rtl.svg\\\");\\n\\nvar _directionRtl2 = _interopRequireDefault(_directionRtl);\\n\\nvar _formula = __webpack_require__(/*! ../assets/icons/formula.svg */ \\\"./assets/icons/formula.svg\\\");\\n\\nvar _formula2 = _interopRequireDefault(_formula);\\n\\nvar _header = __webpack_require__(/*! ../assets/icons/header.svg */ \\\"./assets/icons/header.svg\\\");\\n\\nvar _header2 = _interopRequireDefault(_header);\\n\\nvar _header3 = __webpack_require__(/*! ../assets/icons/header-2.svg */ \\\"./assets/icons/header-2.svg\\\");\\n\\nvar _header4 = _interopRequireDefault(_header3);\\n\\nvar _italic = __webpack_require__(/*! ../assets/icons/italic.svg */ \\\"./assets/icons/italic.svg\\\");\\n\\nvar _italic2 = _interopRequireDefault(_italic);\\n\\nvar _image = __webpack_require__(/*! ../assets/icons/image.svg */ \\\"./assets/icons/image.svg\\\");\\n\\nvar _image2 = _interopRequireDefault(_image);\\n\\nvar _indent = __webpack_require__(/*! ../assets/icons/indent.svg */ \\\"./assets/icons/indent.svg\\\");\\n\\nvar _indent2 = _interopRequireDefault(_indent);\\n\\nvar _outdent = __webpack_require__(/*! ../assets/icons/outdent.svg */ \\\"./assets/icons/outdent.svg\\\");\\n\\nvar _outdent2 = _interopRequireDefault(_outdent);\\n\\nvar _link = __webpack_require__(/*! ../assets/icons/link.svg */ \\\"./assets/icons/link.svg\\\");\\n\\nvar _link2 = _interopRequireDefault(_link);\\n\\nvar _listBullet = __webpack_require__(/*! ../assets/icons/list-bullet.svg */ \\\"./assets/icons/list-bullet.svg\\\");\\n\\nvar _listBullet2 = _interopRequireDefault(_listBullet);\\n\\nvar _listCheck = __webpack_require__(/*! ../assets/icons/list-check.svg */ \\\"./assets/icons/list-check.svg\\\");\\n\\nvar _listCheck2 = _interopRequireDefault(_listCheck);\\n\\nvar _listOrdered = __webpack_require__(/*! ../assets/icons/list-ordered.svg */ \\\"./assets/icons/list-ordered.svg\\\");\\n\\nvar _listOrdered2 = _interopRequireDefault(_listOrdered);\\n\\nvar _subscript = __webpack_require__(/*! ../assets/icons/subscript.svg */ \\\"./assets/icons/subscript.svg\\\");\\n\\nvar _subscript2 = _interopRequireDefault(_subscript);\\n\\nvar _superscript = __webpack_require__(/*! ../assets/icons/superscript.svg */ \\\"./assets/icons/superscript.svg\\\");\\n\\nvar _superscript2 = _interopRequireDefault(_superscript);\\n\\nvar _strike = __webpack_require__(/*! ../assets/icons/strike.svg */ \\\"./assets/icons/strike.svg\\\");\\n\\nvar _strike2 = _interopRequireDefault(_strike);\\n\\nvar _table = __webpack_require__(/*! ../assets/icons/table.svg */ \\\"./assets/icons/table.svg\\\");\\n\\nvar _table2 = _interopRequireDefault(_table);\\n\\nvar _underline = __webpack_require__(/*! ../assets/icons/underline.svg */ \\\"./assets/icons/underline.svg\\\");\\n\\nvar _underline2 = _interopRequireDefault(_underline);\\n\\nvar _video = __webpack_require__(/*! ../assets/icons/video.svg */ \\\"./assets/icons/video.svg\\\");\\n\\nvar _video2 = _interopRequireDefault(_video);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nmodule.exports = {\\n  align: {\\n    '': _alignLeft2.default,\\n    center: _alignCenter2.default,\\n    right: _alignRight2.default,\\n    justify: _alignJustify2.default\\n  },\\n  background: _background2.default,\\n  blockquote: _blockquote2.default,\\n  bold: _bold2.default,\\n  clean: _clean2.default,\\n  code: _code2.default,\\n  'code-block': _code2.default,\\n  color: _color2.default,\\n  direction: {\\n    '': _directionLtr2.default,\\n    rtl: _directionRtl2.default\\n  },\\n  formula: _formula2.default,\\n  header: {\\n    '1': _header2.default,\\n    '2': _header4.default\\n  },\\n  italic: _italic2.default,\\n  image: _image2.default,\\n  indent: {\\n    '+1': _indent2.default,\\n    '-1': _outdent2.default\\n  },\\n  link: _link2.default,\\n  list: {\\n    bullet: _listBullet2.default,\\n    check: _listCheck2.default,\\n    ordered: _listOrdered2.default\\n  },\\n  script: {\\n    sub: _subscript2.default,\\n    super: _superscript2.default\\n  },\\n  strike: _strike2.default,\\n  table: _table2.default,\\n  underline: _underline2.default,\\n  video: _video2.default\\n};\\n\\n//# sourceURL=webpack://Quill/./ui/icons.js?\");\n\n/***/ }),\n\n/***/ \"./ui/picker.js\":\n/*!**********************!*\\\n  !*** ./ui/picker.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _dropdown = __webpack_require__(/*! ../assets/icons/dropdown.svg */ \\\"./assets/icons/dropdown.svg\\\");\\n\\nvar _dropdown2 = _interopRequireDefault(_dropdown);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nlet optionsCounter = 0;\\n\\nfunction toggleAriaAttribute(element, attribute) {\\n  element.setAttribute(attribute, !(element.getAttribute(attribute) === 'true'));\\n}\\n\\nclass Picker {\\n  constructor(select) {\\n    this.select = select;\\n    this.container = document.createElement('span');\\n    this.buildPicker();\\n    this.select.style.display = 'none';\\n    this.select.parentNode.insertBefore(this.container, this.select);\\n\\n    this.label.addEventListener('mousedown', () => {\\n      this.togglePicker();\\n    });\\n    this.label.addEventListener('keydown', event => {\\n      switch (event.key) {\\n        case 'Enter':\\n          this.togglePicker();\\n          break;\\n        case 'Escape':\\n          this.escape();\\n          event.preventDefault();\\n          break;\\n        default:\\n      }\\n    });\\n    this.select.addEventListener('change', this.update.bind(this));\\n  }\\n\\n  togglePicker() {\\n    this.container.classList.toggle('ql-expanded');\\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\\n    toggleAriaAttribute(this.label, 'aria-expanded');\\n    toggleAriaAttribute(this.options, 'aria-hidden');\\n  }\\n\\n  buildItem(option) {\\n    const item = document.createElement('span');\\n    item.tabIndex = '0';\\n    item.setAttribute('role', 'button');\\n    item.classList.add('ql-picker-item');\\n    if (option.hasAttribute('value')) {\\n      item.setAttribute('data-value', option.getAttribute('value'));\\n    }\\n    if (option.textContent) {\\n      item.setAttribute('data-label', option.textContent);\\n    }\\n    item.addEventListener('click', () => {\\n      this.selectItem(item, true);\\n    });\\n    item.addEventListener('keydown', event => {\\n      switch (event.key) {\\n        case 'Enter':\\n          this.selectItem(item, true);\\n          event.preventDefault();\\n          break;\\n        case 'Escape':\\n          this.escape();\\n          event.preventDefault();\\n          break;\\n        default:\\n      }\\n    });\\n\\n    return item;\\n  }\\n\\n  buildLabel() {\\n    const label = document.createElement('span');\\n    label.classList.add('ql-picker-label');\\n    label.innerHTML = _dropdown2.default;\\n    label.tabIndex = '0';\\n    label.setAttribute('role', 'button');\\n    label.setAttribute('aria-expanded', 'false');\\n    this.container.appendChild(label);\\n    return label;\\n  }\\n\\n  buildOptions() {\\n    const options = document.createElement('span');\\n    options.classList.add('ql-picker-options');\\n\\n    // Don't want screen readers to read this until options are visible\\n    options.setAttribute('aria-hidden', 'true');\\n    options.tabIndex = '-1';\\n\\n    // Need a unique id for aria-controls\\n    options.id = `ql-picker-options-${optionsCounter}`;\\n    optionsCounter += 1;\\n    this.label.setAttribute('aria-controls', options.id);\\n\\n    this.options = options;\\n\\n    Array.from(this.select.options).forEach(option => {\\n      const item = this.buildItem(option);\\n      options.appendChild(item);\\n      if (option.selected === true) {\\n        this.selectItem(item);\\n      }\\n    });\\n    this.container.appendChild(options);\\n  }\\n\\n  buildPicker() {\\n    Array.from(this.select.attributes).forEach(item => {\\n      this.container.setAttribute(item.name, item.value);\\n    });\\n    this.container.classList.add('ql-picker');\\n    this.label = this.buildLabel();\\n    this.buildOptions();\\n  }\\n\\n  escape() {\\n    // Close menu and return focus to trigger label\\n    this.close();\\n    // Need setTimeout for accessibility to ensure that the browser executes\\n    // focus on the next process thread and after any DOM content changes\\n    setTimeout(() => this.label.focus(), 1);\\n  }\\n\\n  close() {\\n    this.container.classList.remove('ql-expanded');\\n    this.label.setAttribute('aria-expanded', 'false');\\n    this.options.setAttribute('aria-hidden', 'true');\\n  }\\n\\n  selectItem(item, trigger = false) {\\n    const selected = this.container.querySelector('.ql-selected');\\n    if (item === selected) return;\\n    if (selected != null) {\\n      selected.classList.remove('ql-selected');\\n    }\\n    if (item == null) return;\\n    item.classList.add('ql-selected');\\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(item);\\n    if (item.hasAttribute('data-value')) {\\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\\n    } else {\\n      this.label.removeAttribute('data-value');\\n    }\\n    if (item.hasAttribute('data-label')) {\\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\\n    } else {\\n      this.label.removeAttribute('data-label');\\n    }\\n    if (trigger) {\\n      this.select.dispatchEvent(new Event('change'));\\n      this.close();\\n    }\\n  }\\n\\n  update() {\\n    let option;\\n    if (this.select.selectedIndex > -1) {\\n      const item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];\\n      option = this.select.options[this.select.selectedIndex];\\n      this.selectItem(item);\\n    } else {\\n      this.selectItem(null);\\n    }\\n    const isActive = option != null && option !== this.select.querySelector('option[selected]');\\n    this.label.classList.toggle('ql-active', isActive);\\n  }\\n}\\n\\nexports.default = Picker;\\n\\n//# sourceURL=webpack://Quill/./ui/picker.js?\");\n\n/***/ }),\n\n/***/ \"./ui/tooltip.js\":\n/*!***********************!*\\\n  !*** ./ui/tooltip.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nclass Tooltip {\\n  constructor(quill, boundsContainer) {\\n    this.quill = quill;\\n    this.boundsContainer = boundsContainer || document.body;\\n    this.root = quill.addContainer('ql-tooltip');\\n    this.root.innerHTML = this.constructor.TEMPLATE;\\n    if (this.quill.root === this.quill.scrollingContainer) {\\n      this.quill.root.addEventListener('scroll', () => {\\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\\n      });\\n    }\\n    this.hide();\\n  }\\n\\n  hide() {\\n    this.root.classList.add('ql-hidden');\\n  }\\n\\n  position(reference) {\\n    const left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;\\n    // root.scrollTop should be 0 if scrollContainer !== root\\n    const top = reference.bottom + this.quill.root.scrollTop;\\n    this.root.style.left = `${left}px`;\\n    this.root.style.top = `${top}px`;\\n    this.root.classList.remove('ql-flip');\\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\\n    const rootBounds = this.root.getBoundingClientRect();\\n    let shift = 0;\\n    if (rootBounds.right > containerBounds.right) {\\n      shift = containerBounds.right - rootBounds.right;\\n      this.root.style.left = `${left + shift}px`;\\n    }\\n    if (rootBounds.left < containerBounds.left) {\\n      shift = containerBounds.left - rootBounds.left;\\n      this.root.style.left = `${left + shift}px`;\\n    }\\n    if (rootBounds.bottom > containerBounds.bottom) {\\n      const height = rootBounds.bottom - rootBounds.top;\\n      const verticalShift = reference.bottom - reference.top + height;\\n      this.root.style.top = `${top - verticalShift}px`;\\n      this.root.classList.add('ql-flip');\\n    }\\n    return shift;\\n  }\\n\\n  show() {\\n    this.root.classList.remove('ql-editing');\\n    this.root.classList.remove('ql-hidden');\\n  }\\n}\\n\\nexports.default = Tooltip;\\n\\n//# sourceURL=webpack://Quill/./ui/tooltip.js?\");\n\n/***/ }),\n\n/***/ 0:\n/*!************************!*\\\n  !*** multi ./quill.js ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"module.exports = __webpack_require__(/*! ./quill.js */\\\"./quill.js\\\");\\n\\n\\n//# sourceURL=webpack://Quill/multi_./quill.js?\");\n\n/***/ })\n\n/******/ })[\"default\"];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/quill/dist/quill.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-quill-v2.0/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-quill-v2.0/lib/index.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\nReact-Quill\nhttps://github.com/zenoamaro/react-quill\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\nvar isEqual_1 = __importDefault(__webpack_require__(/*! lodash/isEqual */ \"(app-pages-browser)/./node_modules/lodash/isEqual.js\"));\nvar quill_1 = __importDefault(__webpack_require__(/*! quill */ \"(app-pages-browser)/./node_modules/quill/dist/quill.js\"));\nvar ReactQuill = /** @class */ (function (_super) {\n    __extends(ReactQuill, _super);\n    function ReactQuill(props) {\n        var _this = _super.call(this, props) || this;\n        /*\n        Changing one of these props should cause a full re-render and a\n        re-instantiation of the Quill editor.\n        */\n        _this.dirtyProps = [\n            'modules',\n            'formats',\n            'bounds',\n            'theme',\n            'children',\n        ];\n        /*\n        Changing one of these props should cause a regular update. These are mostly\n        props that act on the container, rather than the quillized editing area.\n        */\n        _this.cleanProps = [\n            'id',\n            'className',\n            'style',\n            'placeholder',\n            'tabIndex',\n            'onChange',\n            'onChangeSelection',\n            'onFocus',\n            'onBlur',\n            'onKeyPress',\n            'onKeyDown',\n            'onKeyUp',\n        ];\n        _this.state = {\n            generation: 0,\n        };\n        /*\n        Tracks the internal selection of the Quill editor\n        */\n        _this.selection = null;\n        _this.onEditorChange = function (eventName, rangeOrDelta, oldRangeOrDelta, source) {\n            var _a, _b;\n            if (eventName === 'text-change') {\n                (_a = _this.onEditorChangeText) === null || _a === void 0 ? void 0 : _a.call(_this, _this.editor.root.innerHTML, rangeOrDelta, source, _this.unprivilegedEditor);\n            }\n            else if (eventName === 'selection-change') {\n                (_b = _this.onEditorChangeSelection) === null || _b === void 0 ? void 0 : _b.call(_this, rangeOrDelta, source, _this.unprivilegedEditor);\n            }\n        };\n        var value = _this.isControlled() ? props.value : props.defaultValue;\n        _this.value = value !== null && value !== void 0 ? value : '';\n        return _this;\n    }\n    ReactQuill.prototype.validateProps = function (props) {\n        if (react_1.default.Children.count(props.children) > 1)\n            throw new Error('The Quill editing area can only be composed of a single React element.');\n        if (react_1.default.Children.count(props.children)) {\n            var child = react_1.default.Children.only(props.children);\n            if ((child === null || child === void 0 ? void 0 : child.type) === 'textarea')\n                throw new Error('Quill does not support editing on a <textarea>. Use a <div> instead.');\n        }\n        if (this.lastDeltaChangeSet &&\n            props.value === this.lastDeltaChangeSet)\n            throw new Error('You are passing the `delta` object from the `onChange` event back ' +\n                'as `value`. You most probably want `editor.getContents()` instead. ' +\n                'See: https://github.com/zenoamaro/react-quill#using-deltas');\n    };\n    ReactQuill.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var _this = this;\n        var _a;\n        this.validateProps(nextProps);\n        // If the editor hasn't been instantiated yet, or the component has been\n        // regenerated, we already know we should update.\n        if (!this.editor || this.state.generation !== nextState.generation) {\n            return true;\n        }\n        // Handle value changes in-place\n        if ('value' in nextProps) {\n            var prevContents = this.getEditorContents();\n            var nextContents = (_a = nextProps.value) !== null && _a !== void 0 ? _a : '';\n            // NOTE: Seeing that Quill is missing a way to prevent edits, we have to\n            //       settle for a hybrid between controlled and uncontrolled mode. We\n            //       can't prevent the change, but we'll still override content\n            //       whenever `value` differs from current state.\n            // NOTE: Comparing an HTML string and a Quill Delta will always trigger a\n            //       change, regardless of whether they represent the same document.\n            if (!this.isEqualValue(nextContents, prevContents)) {\n                this.setEditorContents(this.editor, nextContents);\n            }\n        }\n        // Handle read-only changes in-place\n        if (nextProps.readOnly !== this.props.readOnly) {\n            this.setEditorReadOnly(this.editor, nextProps.readOnly);\n        }\n        // Clean and Dirty props require a render\n        return __spreadArrays(this.cleanProps, this.dirtyProps).some(function (prop) {\n            return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n        });\n    };\n    ReactQuill.prototype.shouldComponentRegenerate = function (nextProps) {\n        var _this = this;\n        // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n        return this.dirtyProps.some(function (prop) {\n            return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n        });\n    };\n    ReactQuill.prototype.componentDidMount = function () {\n        this.instantiateEditor();\n        this.setEditorContents(this.editor, this.getEditorContents());\n    };\n    ReactQuill.prototype.componentWillUnmount = function () {\n        this.destroyEditor();\n    };\n    ReactQuill.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var _this = this;\n        // If we're changing one of the `dirtyProps`, the entire Quill Editor needs\n        // to be re-instantiated. Regenerating the editor will cause the whole tree,\n        // including the container, to be cleaned up and re-rendered from scratch.\n        // Store the contents so they can be restored later.\n        if (this.editor && this.shouldComponentRegenerate(prevProps)) {\n            var delta = this.editor.getContents();\n            var selection = this.editor.getSelection();\n            this.regenerationSnapshot = { delta: delta, selection: selection };\n            this.setState({ generation: this.state.generation + 1 });\n            this.destroyEditor();\n        }\n        // The component has been regenerated, so it must be re-instantiated, and\n        // its content must be restored to the previous values from the snapshot.\n        if (this.state.generation !== prevState.generation) {\n            var _a = this.regenerationSnapshot, delta = _a.delta, selection_1 = _a.selection;\n            delete this.regenerationSnapshot;\n            this.instantiateEditor();\n            var editor_1 = this.editor;\n            editor_1.setContents(delta);\n            postpone(function () { return _this.setEditorSelection(editor_1, selection_1); });\n        }\n    };\n    ReactQuill.prototype.instantiateEditor = function () {\n        if (this.editor) {\n            this.hookEditor(this.editor);\n        }\n        else {\n            this.editor = this.createEditor(this.getEditingArea(), this.getEditorConfig());\n        }\n    };\n    ReactQuill.prototype.destroyEditor = function () {\n        if (!this.editor)\n            return;\n        this.unhookEditor(this.editor);\n    };\n    /*\n    We consider the component to be controlled if `value` is being sent in props.\n    */\n    ReactQuill.prototype.isControlled = function () {\n        return 'value' in this.props;\n    };\n    ReactQuill.prototype.getEditorConfig = function () {\n        return {\n            bounds: this.props.bounds,\n            formats: this.props.formats,\n            modules: this.props.modules,\n            placeholder: this.props.placeholder,\n            readOnly: this.props.readOnly,\n            scrollingContainer: this.props.scrollingContainer,\n            tabIndex: this.props.tabIndex,\n            theme: this.props.theme,\n        };\n    };\n    ReactQuill.prototype.getEditor = function () {\n        if (!this.editor)\n            throw new Error('Accessing non-instantiated editor');\n        return this.editor;\n    };\n    /**\n     Creates an editor on the given element. The editor will be passed the\n     configuration, have its events bound,\n     */\n    ReactQuill.prototype.createEditor = function (element, config) {\n        var editor = new quill_1.default(element, config);\n        if (config.tabIndex != null) {\n            this.setEditorTabIndex(editor, config.tabIndex);\n        }\n        this.hookEditor(editor);\n        return editor;\n    };\n    ReactQuill.prototype.hookEditor = function (editor) {\n        // Expose the editor on change events via a weaker, unprivileged proxy\n        // object that does not allow accidentally modifying editor state.\n        this.unprivilegedEditor = this.makeUnprivilegedEditor(editor);\n        // Using `editor-change` allows picking up silent updates, like selection\n        // changes on typing.\n        editor.on('editor-change', this.onEditorChange);\n    };\n    ReactQuill.prototype.unhookEditor = function (editor) {\n        editor.off('editor-change', this.onEditorChange);\n    };\n    ReactQuill.prototype.getEditorContents = function () {\n        return this.value;\n    };\n    ReactQuill.prototype.getEditorSelection = function () {\n        return this.selection;\n    };\n    /*\n    True if the value is a Delta instance or a Delta look-alike.\n    */\n    ReactQuill.prototype.isDelta = function (value) {\n        return value && value.ops;\n    };\n    /*\n    Special comparison function that knows how to compare Deltas.\n    */\n    ReactQuill.prototype.isEqualValue = function (value, nextValue) {\n        if (this.isDelta(value) && this.isDelta(nextValue)) {\n            return isEqual_1.default(value.ops, nextValue.ops);\n        }\n        else {\n            return isEqual_1.default(value, nextValue);\n        }\n    };\n    /*\n    Replace the contents of the editor, but keep the previous selection hanging\n    around so that the cursor won't move.\n    */\n    ReactQuill.prototype.setEditorContents = function (editor, value) {\n        var _this = this;\n        this.value = value;\n        var sel = this.getEditorSelection();\n        if (typeof value === 'string') {\n            editor.setContents(editor.clipboard.convert({ html: value }));\n        }\n        else {\n            editor.setContents(value);\n        }\n        postpone(function () { return _this.setEditorSelection(editor, sel); });\n    };\n    ReactQuill.prototype.setEditorSelection = function (editor, range) {\n        this.selection = range;\n        if (range) {\n            // Validate bounds before applying.\n            var length_1 = editor.getLength();\n            range.index = Math.max(0, Math.min(range.index, length_1 - 1));\n            range.length = Math.max(0, Math.min(range.length, (length_1 - 1) - range.index));\n            editor.setSelection(range);\n        }\n    };\n    ReactQuill.prototype.setEditorTabIndex = function (editor, tabIndex) {\n        var _a;\n        if ((_a = editor === null || editor === void 0 ? void 0 : editor.scroll) === null || _a === void 0 ? void 0 : _a.domNode) {\n            editor.scroll.domNode.tabIndex = tabIndex;\n        }\n    };\n    ReactQuill.prototype.setEditorReadOnly = function (editor, value) {\n        if (value) {\n            editor.disable();\n        }\n        else {\n            editor.enable();\n        }\n    };\n    /*\n    Returns a weaker, unprivileged proxy object that only exposes read-only\n    accessors found on the editor instance, without any state-modifying methods.\n    */\n    ReactQuill.prototype.makeUnprivilegedEditor = function (editor) {\n        var e = editor;\n        return {\n            getHTML: function () { return e.root.innerHTML; },\n            getLength: e.getLength.bind(e),\n            getText: e.getText.bind(e),\n            getContents: e.getContents.bind(e),\n            getSelection: e.getSelection.bind(e),\n            getBounds: e.getBounds.bind(e),\n        };\n    };\n    ReactQuill.prototype.getEditingArea = function () {\n        if (!this.editingArea) {\n            throw new Error('Instantiating on missing editing area');\n        }\n        var element = react_dom_1.default.findDOMNode(this.editingArea);\n        if (!element) {\n            throw new Error('Cannot find element for editing area');\n        }\n        if (element.nodeType === 3) {\n            throw new Error('Editing area cannot be a text node');\n        }\n        return element;\n    };\n    /*\n    Renders an editor area, unless it has been provided one to clone.\n    */\n    ReactQuill.prototype.renderEditingArea = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, preserveWhitespace = _a.preserveWhitespace;\n        var generation = this.state.generation;\n        var properties = {\n            key: generation,\n            ref: function (instance) {\n                _this.editingArea = instance;\n            },\n        };\n        if (react_1.default.Children.count(children)) {\n            return react_1.default.cloneElement(react_1.default.Children.only(children), properties);\n        }\n        return preserveWhitespace ?\n            react_1.default.createElement(\"pre\", __assign({}, properties)) :\n            react_1.default.createElement(\"div\", __assign({}, properties));\n    };\n    ReactQuill.prototype.render = function () {\n        var _a;\n        return (react_1.default.createElement(\"div\", { id: this.props.id, style: this.props.style, key: this.state.generation, className: \"quill \" + ((_a = this.props.className) !== null && _a !== void 0 ? _a : ''), onKeyPress: this.props.onKeyPress, onKeyDown: this.props.onKeyDown, onKeyUp: this.props.onKeyUp }, this.renderEditingArea()));\n    };\n    ReactQuill.prototype.onEditorChangeText = function (value, delta, source, editor) {\n        var _a, _b;\n        if (!this.editor)\n            return;\n        // We keep storing the same type of value as what the user gives us,\n        // so that value comparisons will be more stable and predictable.\n        var nextContents = this.isDelta(this.value)\n            ? editor.getContents()\n            : editor.getHTML();\n        if (nextContents !== this.getEditorContents()) {\n            // Taint this `delta` object, so we can recognize whether the user\n            // is trying to send it back as `value`, preventing a likely loop.\n            this.lastDeltaChangeSet = delta;\n            this.value = nextContents;\n            (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, delta, source, editor);\n        }\n    };\n    ReactQuill.prototype.onEditorChangeSelection = function (nextSelection, source, editor) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.editor)\n            return;\n        var currentSelection = this.getEditorSelection();\n        var hasGainedFocus = !currentSelection && nextSelection;\n        var hasLostFocus = currentSelection && !nextSelection;\n        if (isEqual_1.default(nextSelection, currentSelection))\n            return;\n        this.selection = nextSelection;\n        (_b = (_a = this.props).onChangeSelection) === null || _b === void 0 ? void 0 : _b.call(_a, nextSelection, source, editor);\n        if (hasGainedFocus) {\n            (_d = (_c = this.props).onFocus) === null || _d === void 0 ? void 0 : _d.call(_c, nextSelection, source, editor);\n        }\n        else if (hasLostFocus) {\n            (_f = (_e = this.props).onBlur) === null || _f === void 0 ? void 0 : _f.call(_e, currentSelection, source, editor);\n        }\n    };\n    ReactQuill.prototype.focus = function () {\n        if (!this.editor)\n            return;\n        this.editor.focus();\n    };\n    ReactQuill.prototype.blur = function () {\n        if (!this.editor)\n            return;\n        this.selection = null;\n        this.editor.blur();\n    };\n    ReactQuill.displayName = 'React Quill';\n    /*\n    Export Quill to be able to call `register`\n    */\n    ReactQuill.Quill = quill_1.default;\n    ReactQuill.defaultProps = {\n        theme: 'snow',\n        modules: {},\n        readOnly: false,\n    };\n    return ReactQuill;\n}(react_1.default.Component));\n/*\nSmall helper to execute a function in the next micro-tick.\n*/\nfunction postpone(fn) {\n    Promise.resolve().then(fn);\n}\nmodule.exports = ReactQuill;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-quill-v2.0/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-quill-v2.0/dist/quill.snow.css":
/*!***********************************************************!*\
  !*** ./node_modules/react-quill-v2.0/dist/quill.snow.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"c9f3632bf3eb\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWlsbC12Mi4wL2Rpc3QvcXVpbGwuc25vdy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWlsbC12Mi4wL2Rpc3QvcXVpbGwuc25vdy5jc3M/Njc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImM5ZjM2MzJiZjNlYlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-quill-v2.0/dist/quill.snow.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Editor/Editor.tsx":
/*!******************************************!*\
  !*** ./src/components/Editor/Editor.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_quill_v2_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-quill-v2.0 */ \"(app-pages-browser)/./node_modules/react-quill-v2.0/lib/index.js\");\n/* harmony import */ var react_quill_v2_0__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_quill_v2_0__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/Box */ \"(app-pages-browser)/./node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var react_quill_v2_0_dist_quill_snow_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-quill-v2.0/dist/quill.snow.css */ \"(app-pages-browser)/./node_modules/react-quill-v2.0/dist/quill.snow.css\");\n/* harmony import */ var _utils_formatData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/formatData */ \"(app-pages-browser)/./src/utils/formatData.ts\");\n/* harmony import */ var _barrel_optimize_names_useTheme_mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=useTheme!=!@mui/material */ \"(app-pages-browser)/./node_modules/@mui/material/styles/useTheme.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst CustomQuillEditor = (param)=>{\n    let { value, placeholder, onChange, error, maxLength } = param;\n    _s();\n    const theme = (0,_barrel_optimize_names_useTheme_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n    const [editorValue, setEditorValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(value);\n    const quillRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const handleEditorChange = (content)=>{\n        const strippedContent = (0,_utils_formatData__WEBPACK_IMPORTED_MODULE_4__.extractPlainText)(content);\n        if (maxLength && strippedContent.trim().length > maxLength) {\n            if (quillRef.current) {\n                const currentEditor = quillRef.current.getEditor();\n                currentEditor.deleteText(maxLength, strippedContent.length);\n            }\n            return;\n        }\n        setEditorValue(content);\n        onChange(content);\n    };\n    const toolbarOptions = [\n        [\n            {\n                font: []\n            }\n        ],\n        [\n            {\n                header: [\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    false\n                ]\n            }\n        ],\n        [\n            \"bold\",\n            \"italic\",\n            \"underline\",\n            \"strike\"\n        ],\n        [\n            \"blockquote\",\n            \"code-block\"\n        ],\n        [\n            {\n                list: \"ordered\"\n            },\n            {\n                list: \"bullet\"\n            },\n            {\n                list: \"check\"\n            },\n            {\n                align: []\n            }\n        ],\n        [\n            {\n                color: []\n            },\n            {\n                background: []\n            }\n        ],\n        [\n            \"link\",\n            \"image\",\n            \"video\"\n        ],\n        [\n            \"clean\"\n        ]\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        sx: {\n            width: \"100%\",\n            \"& .quill .ql-toolbar.ql-snow\": {\n                border: \"solid 1px \".concat(theme.palette.mode === \"dark\" ? \"#626060\" : \"#DEDEDE\"),\n                borderRadius: \"8px\"\n            },\n            \"& .ql-snow .ql-stroke\": {\n                stroke: theme.palette.mode === \"dark\" ? \"#F7F7F7\" : \"#434242\"\n            },\n            \"& .ql-snow .ql-fill\": {\n                fill: theme.palette.mode === \"dark\" ? \"#F7F7F7\" : \"#434242\"\n            },\n            \"& .quill .ql-container.ql-snow\": {\n                minHeight: \"6.852rem\",\n                borderRadius: \"5px !important\",\n                border: \"solid 1px \".concat(theme.palette.mode === \"dark\" ? \"#626060\" : \"#DEDEDE\"),\n                background: theme.palette.mode === \"dark\" ? \"#242424\" : \"#FFFFFF\",\n                marginTop: \"5px\",\n                \"& .ql-blank::before\": {\n                    color: theme.palette.mode === \"dark\" ? \"#585656\" : \"#DEDEDE\"\n                }\n            },\n            \"& .quill.quill-error .ql-container.ql-snow\": {\n                border: \"solid 1px red\",\n                borderRadius: \"5px !important\"\n            },\n            \"& .ql-snow .ql-picker.ql-expanded .ql-picker-options\": {\n                zIndex: \"2\"\n            }\n        },\n        className: error ? \"quill quill-error\" : \"quill-editor-container\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_quill_v2_0__WEBPACK_IMPORTED_MODULE_2___default()), {\n            ref: quillRef,\n            value: value ? value : editorValue,\n            onChange: handleEditorChange,\n            placeholder: placeholder,\n            modules: {\n                toolbar: toolbarOptions\n            },\n            className: error ? \"quill-error\" : \"\"\n        }, void 0, false, {\n            fileName: \"/Users/kawzaiphophu/Desktop/Knacx/company-website-admin/src/components/Editor/Editor.tsx\",\n            lineNumber: 89,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kawzaiphophu/Desktop/Knacx/company-website-admin/src/components/Editor/Editor.tsx\",\n        lineNumber: 52,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CustomQuillEditor, \"H1Tno+4Ci6JFfBmQD3mPpkUd6/A=\", false, function() {\n    return [\n        _barrel_optimize_names_useTheme_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n    ];\n});\n_c = CustomQuillEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CustomQuillEditor);\nvar _c;\n$RefreshReg$(_c, \"CustomQuillEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Editor/Editor.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/formatData.ts":
/*!*********************************!*\
  !*** ./src/utils/formatData.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractPlainText: () => (/* binding */ extractPlainText),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatDateWithTime: () => (/* binding */ formatDateWithTime),\n/* harmony export */   formatPhoneNumber: () => (/* binding */ formatPhoneNumber),\n/* harmony export */   formatPrice: () => (/* binding */ formatPrice),\n/* harmony export */   formatTime: () => (/* binding */ formatTime)\n/* harmony export */ });\nconst formatSinglePhoneNumber = (phoneNumber)=>{\n    if (!phoneNumber) return \"-\";\n    const cleaned = phoneNumber.replace(/\\D/g, \"\");\n    let formattedNumber;\n    if (cleaned.length === 10) {\n        formattedNumber = cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n    } else if (cleaned.length === 11 && cleaned.startsWith(\"1\")) {\n        formattedNumber = cleaned.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3-$4\");\n    } else if (cleaned.length === 9) {\n        formattedNumber = cleaned.replace(/(\\d{2})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n    } else {\n        formattedNumber = cleaned;\n    }\n    return formattedNumber;\n};\nconst formatPhoneNumber = (phoneNumber)=>{\n    if (Array.isArray(phoneNumber)) {\n        return phoneNumber.map(formatSinglePhoneNumber);\n    } else if (typeof phoneNumber === \"string\") {\n        if (phoneNumber.includes(\",\")) {\n            return phoneNumber.split(\",\").map((num)=>formatSinglePhoneNumber(num.trim()));\n        } else {\n            return formatSinglePhoneNumber(phoneNumber);\n        }\n    }\n    return phoneNumber;\n};\nconst formatDate = (dateString)=>{\n    if (!dateString) return \"-\";\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear();\n    return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n};\nconst formatDateWithTime = (dateString)=>{\n    if (!dateString) return \"-\";\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    return \"\".concat(day, \"/\").concat(month, \"/\").concat(year, \" \").concat(hours, \":\").concat(minutes);\n};\nconst formatTime = (value)=>{\n    if (!value) return \"-\";\n    const date = new Date(value);\n    const hours = String(date.getHours()).padStart(2, \"0\");\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\n    return \"\".concat(hours, \":\").concat(minutes);\n};\nconst formatPrice = function(value) {\n    let fixed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;\n    if (!value) {\n        return \"0\";\n    }\n    const NumValue = Number(value);\n    const integerPart = Math.floor(NumValue);\n    let decimalPart = (NumValue - integerPart).toFixed(fixed).slice(2);\n    if (fixed === 0) {\n        decimalPart = \"\";\n    }\n    const integerWithCommas = integerPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    if (fixed === 0) {\n        return \"\".concat(integerWithCommas);\n    } else {\n        return \"\".concat(integerWithCommas, \".\").concat(decimalPart);\n    }\n};\nconst extractPlainText = (htmlString)=>{\n    if (typeof htmlString !== \"string\") {\n        return \"\";\n    }\n    const regex = /<[^>]*>/g;\n    const plainText = htmlString.replace(regex, \"\");\n    return plainText.trim();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/formatData.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// as a normal prop instead of stripping it from the props object.\n// Passes `ref` as a normal prop instead of stripping it from the props object\n// during element creation.\n\nvar enableRefAsProp = true;\n\nvar enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nvar REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element') ;\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var stack = ReactSharedInternals.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Provider';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          var consumer = type;\n          return getContextName(consumer._context) + '.Consumer';\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext  || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar prefix;\nfunction describeBuiltInComponentFrame(name) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher = null;\n\n  {\n    previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactSharedInternals.H = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactSharedInternals.H = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload));\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction getOwner() {\n  {\n    var dispatcher = ReactSharedInternals.A;\n\n    if (dispatcher === null) {\n      return null;\n    }\n\n    return dispatcher.getOwner();\n  }\n}\n\nvar specialPropKeyWarningShown;\nvar didWarnAboutElementRef;\n\n{\n  didWarnAboutElementRef = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  {\n    var componentName = getComponentNameFromType(this.type);\n\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n\n      error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n    } // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n\n    var refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props, debugStack, debugTask) {\n  var ref;\n\n  {\n    // When enableRefAsProp is on, ignore whatever was passed as the ref\n    // argument and treat `props.ref` as the source of truth. The only thing we\n    // use this for is `element.ref`, which will log a deprecation warning on\n    // access. In the next release, we can remove `element.ref` as well as the\n    // `ref` argument.\n    var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n    ref = refProp !== undefined ? refProp : null;\n  }\n\n  var element;\n\n  {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null\n      });\n    }\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) ;\n\n    var props;\n\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n\n      for (var propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key' && (enableRefAsProp )) {\n          {\n            props[propName] = config[propName];\n          }\n        }\n      }\n    }\n\n    if (key || !enableRefAsProp ) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, getOwner(), props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    var owner = getOwner();\n\n    if (owner) {\n      var name = getComponentNameFromType(owner.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n\n          if (iterator !== node) {\n            var step;\n\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner != null && element._owner !== getOwner()) {\n      var ownerName = null;\n\n      if (typeof element._owner.tag === 'number') {\n        ownerName = getComponentNameFromType(element._owner.type);\n      } else if (typeof element._owner.name === 'string') {\n        ownerName = element._owner.name;\n      } // Give the component that originally created this child.\n\n\n      childOwner = \" It was passed a child from \" + ownerName + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var stack = describeUnknownElementTypeFrameInDEV(element.type);\n      ReactSharedInternals.setExtraStackFrame(stack);\n    } else {\n      ReactSharedInternals.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ODgwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

});